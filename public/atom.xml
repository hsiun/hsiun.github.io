<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GaoSpot</title>
  <subtitle>————写写生活，聊聊技术</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zone.gaospot.com/"/>
  <updated>2016-05-11T01:40:59.640Z</updated>
  <id>http://zone.gaospot.com/</id>
  
  <author>
    <name>Gao Xiong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker镜像创建</title>
    <link href="http://zone.gaospot.com/2016/05/11/Docker%E9%95%9C%E5%83%8F%E5%88%9B%E5%BB%BA/"/>
    <id>http://zone.gaospot.com/2016/05/11/Docker镜像创建/</id>
    <published>2016-05-11T00:29:00.000Z</published>
    <updated>2016-05-11T01:40:59.640Z</updated>
    
    <content type="html">&lt;h3 id=&quot;1_u3001_u521B_u5EFADocker_u955C_u50CF_u7684_u4E00_u4E9B_u8BF4_u660E&quot;&gt;&lt;a href=&quot;#1_u3001_u521B_u5EFADocker_u955C_u50CF_u7684_u4E00_u4E9B_u8BF4_u660E&quot; class=&quot;headerlink&quot; title=&quot;1、创建Docker镜像的一些说明&quot;&gt;&lt;/a&gt;1、创建Docker镜像的一些说明&lt;/h3&gt;&lt;p&gt;这里通过创建一个Shadowsocks的docker镜像来说明创建一个docker镜像的过程，Docker镜像创建是Docker一个非常基础重要的功能，这里介绍的这个例子当然也可以通过一个shell脚本来做，通过shell的问题还是那个老生常谈的话题，环境不好控制，遇到不一样的环境可能出错，docker在创建镜像的时候就自行创建了环境，因此避免了这个问题。下面的是复制的 别人的关于命令的总结（&lt;a href=&quot;http://blog.csdn.net/qinyushuang/article/details/43342553）：&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/qinyushuang/article/details/43342553）：&lt;/a&gt;&lt;br&gt;（1）FROM（指定基础image）&lt;br&gt;构建指令，必须指定且需要在Dockerfile其他指令的前面。后续的指令都依赖于该指令指定的image。FROM指令指定的基础image可以是官方远程仓库中的，也可以位于本地仓库。&lt;br&gt;该指令有两种格式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FROM &amp;#60;image&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;指定基础image为该image的最后修改的版本。或者：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;FROM &amp;#60;image&amp;#62;:&amp;#60;tag&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;指定基础image为该image的一个tag版本。&lt;/p&gt;
&lt;p&gt;（2）MAINTAINER（用来指定镜像创建者信息）&lt;br&gt;构建指令，用于将image的制作者相关的信息写入到image中。当我们对该image执行docker inspect命令时，输出中有相应的字段记录该信息。&lt;br&gt;格式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;MAINTAINER &amp;#60;name&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（3）RUN（安装软件用）&lt;br&gt;构建指令，RUN可以运行任何被基础image支持的命令。如基础image选择了ubuntu，那么软件管理部分只能使用ubuntu的命令。&lt;br&gt;该指令有两种格式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;RUN &amp;#60;command&amp;#62; (the command is run in a shell - `/bin/sh -c`)  &amp;#10;RUN [&amp;#34;executable&amp;#34;, &amp;#34;param1&amp;#34;, &amp;#34;param2&amp;#34; ... ]  (exec form)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;（4）CMD（设置container启动时执行的操作）&lt;br&gt;设置指令，用于container启动时指定的操作。该操作可以是执行自定义脚本，也可以是执行系统命令。该指令只能在文件中存在一次，如果有多个，则只执行最后一条。&lt;br&gt;该指令有三种格式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CMD [&amp;#34;executable&amp;#34;,&amp;#34;param1&amp;#34;,&amp;#34;param2&amp;#34;] (like an exec, this is the preferred form)  &amp;#10;CMD command param1 param2 (as a shell)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当Dockerfile指定了ENTRYPOINT，那么使用下面的格式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;CMD [&amp;#34;param1&amp;#34;,&amp;#34;param2&amp;#34;] (as default parameters to ENTRYPOINT)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ENTRYPOINT指定的是一个可执行的脚本或者程序的路径，该指定的脚本或者程序将会以param1和param2作为参数执行。所以如果CMD指令使用上面的形式，那么Dockerfile中必须要有配套的ENTRYPOINT。&lt;/p&gt;
&lt;p&gt;（5）ENTRYPOINT（设置container启动时执行的操作）&lt;br&gt;设置指令，指定容器启动时执行的命令，可以多次设置，但是只有最后一个有效。&lt;br&gt;两种格式:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ENTRYPOINT [&amp;#34;executable&amp;#34;, &amp;#34;param1&amp;#34;, &amp;#34;param2&amp;#34;] (like an exec, the preferred form)  &amp;#10;ENTRYPOINT command param1 param2 (as a shell) &amp;#10;``` &amp;#10;&amp;#35813;&amp;#25351;&amp;#20196;&amp;#30340;&amp;#20351;&amp;#29992;&amp;#20998;&amp;#20026;&amp;#20004;&amp;#31181;&amp;#24773;&amp;#20917;&amp;#65292;&amp;#19968;&amp;#31181;&amp;#26159;&amp;#29420;&amp;#33258;&amp;#20351;&amp;#29992;&amp;#65292;&amp;#21478;&amp;#19968;&amp;#31181;&amp;#21644;CMD&amp;#25351;&amp;#20196;&amp;#37197;&amp;#21512;&amp;#20351;&amp;#29992;&amp;#12290;&amp;#10;&amp;#24403;&amp;#29420;&amp;#33258;&amp;#20351;&amp;#29992;&amp;#26102;&amp;#65292;&amp;#22914;&amp;#26524;&amp;#20320;&amp;#36824;&amp;#20351;&amp;#29992;&amp;#20102;CMD&amp;#21629;&amp;#20196;&amp;#19988;CMD&amp;#26159;&amp;#19968;&amp;#20010;&amp;#23436;&amp;#25972;&amp;#30340;&amp;#21487;&amp;#25191;&amp;#34892;&amp;#30340;&amp;#21629;&amp;#20196;&amp;#65292;&amp;#37027;&amp;#20040;CMD&amp;#25351;&amp;#20196;&amp;#21644;ENTRYPOINT&amp;#20250;&amp;#20114;&amp;#30456;&amp;#35206;&amp;#30422;&amp;#21482;&amp;#26377;&amp;#26368;&amp;#21518;&amp;#19968;&amp;#20010;CMD&amp;#25110;&amp;#32773;ENTRYPOINT&amp;#26377;&amp;#25928;&amp;#12290;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;CMD_u6307_u4EE4_u5C06_u4E0D_u4F1A_u88AB_u6267_u884C_uFF0C_u53EA_u6709ENTRYPOINT_u6307_u4EE4_u88AB_u6267_u884C&quot;&gt;&lt;a href=&quot;#CMD_u6307_u4EE4_u5C06_u4E0D_u4F1A_u88AB_u6267_u884C_uFF0C_u53EA_u6709ENTRYPOINT_u6307_u4EE4_u88AB_u6267_u884C&quot; class=&quot;headerlink&quot; title=&quot;CMD指令将不会被执行，只有ENTRYPOINT指令被执行&quot;&gt;&lt;/a&gt;CMD指令将不会被执行，只有ENTRYPOINT指令被执行&lt;/h1&gt;&lt;p&gt;CMD echo “Hello, World!”&lt;br&gt;ENTRYPOINT ls -l&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#21478;&amp;#19968;&amp;#31181;&amp;#29992;&amp;#27861;&amp;#21644;CMD&amp;#25351;&amp;#20196;&amp;#37197;&amp;#21512;&amp;#20351;&amp;#29992;&amp;#26469;&amp;#25351;&amp;#23450;ENTRYPOINT&amp;#30340;&amp;#40664;&amp;#35748;&amp;#21442;&amp;#25968;&amp;#65292;&amp;#36825;&amp;#26102;CMD&amp;#25351;&amp;#20196;&amp;#19981;&amp;#26159;&amp;#19968;&amp;#20010;&amp;#23436;&amp;#25972;&amp;#30340;&amp;#21487;&amp;#25191;&amp;#34892;&amp;#21629;&amp;#20196;&amp;#65292;&amp;#20165;&amp;#20165;&amp;#26159;&amp;#21442;&amp;#25968;&amp;#37096;&amp;#20998;&amp;#65307;ENTRYPOINT&amp;#25351;&amp;#20196;&amp;#21482;&amp;#33021;&amp;#20351;&amp;#29992;JSON&amp;#26041;&amp;#24335;&amp;#25351;&amp;#23450;&amp;#25191;&amp;#34892;&amp;#21629;&amp;#20196;&amp;#65292;&amp;#32780;&amp;#19981;&amp;#33021;&amp;#25351;&amp;#23450;&amp;#21442;&amp;#25968;&amp;#12290;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;FROM ubuntu&lt;br&gt;CMD [“-l”]&lt;br&gt;ENTRYPOINT [“/usr/bin/ls”]&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;&amp;#65288;6&amp;#65289;USER&amp;#65288;&amp;#35774;&amp;#32622;container&amp;#23481;&amp;#22120;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65289;&amp;#10;&amp;#35774;&amp;#32622;&amp;#25351;&amp;#20196;&amp;#65292;&amp;#35774;&amp;#32622;&amp;#21551;&amp;#21160;&amp;#23481;&amp;#22120;&amp;#30340;&amp;#29992;&amp;#25143;&amp;#65292;&amp;#40664;&amp;#35748;&amp;#26159;root&amp;#29992;&amp;#25143;&amp;#12290;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h1 id=&quot;u6307_u5B9Amemcached_u7684_u8FD0_u884C_u7528_u6237&quot;&gt;&lt;a href=&quot;#u6307_u5B9Amemcached_u7684_u8FD0_u884C_u7528_u6237&quot; class=&quot;headerlink&quot; title=&quot;指定memcached的运行用户&quot;&gt;&lt;/a&gt;指定memcached的运行用户&lt;/h1&gt;&lt;p&gt;ENTRYPOINT [“memcached”]&lt;br&gt;USER daemon&lt;br&gt;或&lt;br&gt;ENTRYPOINT [“memcached”, “-u”, “daemon”]&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;&amp;#65288;7&amp;#65289;EXPOSE&amp;#65288;&amp;#25351;&amp;#23450;&amp;#23481;&amp;#22120;&amp;#38656;&amp;#35201;&amp;#26144;&amp;#23556;&amp;#21040;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#30340;&amp;#31471;&amp;#21475;&amp;#65289;&amp;#10;&amp;#35774;&amp;#32622;&amp;#25351;&amp;#20196;&amp;#65292;&amp;#35813;&amp;#25351;&amp;#20196;&amp;#20250;&amp;#23558;&amp;#23481;&amp;#22120;&amp;#20013;&amp;#30340;&amp;#31471;&amp;#21475;&amp;#26144;&amp;#23556;&amp;#25104;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#20013;&amp;#30340;&amp;#26576;&amp;#20010;&amp;#31471;&amp;#21475;&amp;#12290;&amp;#24403;&amp;#20320;&amp;#38656;&amp;#35201;&amp;#35775;&amp;#38382;&amp;#23481;&amp;#22120;&amp;#30340;&amp;#26102;&amp;#20505;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#19981;&amp;#26159;&amp;#29992;&amp;#23481;&amp;#22120;&amp;#30340;IP&amp;#22320;&amp;#22336;&amp;#32780;&amp;#26159;&amp;#20351;&amp;#29992;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#30340;IP&amp;#22320;&amp;#22336;&amp;#21644;&amp;#26144;&amp;#23556;&amp;#21518;&amp;#30340;&amp;#31471;&amp;#21475;&amp;#12290;&amp;#35201;&amp;#23436;&amp;#25104;&amp;#25972;&amp;#20010;&amp;#25805;&amp;#20316;&amp;#38656;&amp;#35201;&amp;#20004;&amp;#20010;&amp;#27493;&amp;#39588;&amp;#65292;&amp;#39318;&amp;#20808;&amp;#22312;Dockerfile&amp;#20351;&amp;#29992;EXPOSE&amp;#35774;&amp;#32622;&amp;#38656;&amp;#35201;&amp;#26144;&amp;#23556;&amp;#30340;&amp;#23481;&amp;#22120;&amp;#31471;&amp;#21475;&amp;#65292;&amp;#28982;&amp;#21518;&amp;#22312;&amp;#36816;&amp;#34892;&amp;#23481;&amp;#22120;&amp;#30340;&amp;#26102;&amp;#20505;&amp;#25351;&amp;#23450;-p&amp;#36873;&amp;#39033;&amp;#21152;&amp;#19978;EXPOSE&amp;#35774;&amp;#32622;&amp;#30340;&amp;#31471;&amp;#21475;&amp;#65292;&amp;#36825;&amp;#26679;EXPOSE&amp;#35774;&amp;#32622;&amp;#30340;&amp;#31471;&amp;#21475;&amp;#21495;&amp;#20250;&amp;#34987;&amp;#38543;&amp;#26426;&amp;#26144;&amp;#23556;&amp;#25104;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#20013;&amp;#30340;&amp;#19968;&amp;#20010;&amp;#31471;&amp;#21475;&amp;#21495;&amp;#12290;&amp;#20063;&amp;#21487;&amp;#20197;&amp;#25351;&amp;#23450;&amp;#38656;&amp;#35201;&amp;#26144;&amp;#23556;&amp;#21040;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#30340;&amp;#37027;&amp;#20010;&amp;#31471;&amp;#21475;&amp;#65292;&amp;#36825;&amp;#26102;&amp;#35201;&amp;#30830;&amp;#20445;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#19978;&amp;#30340;&amp;#31471;&amp;#21475;&amp;#21495;&amp;#27809;&amp;#26377;&amp;#34987;&amp;#20351;&amp;#29992;&amp;#12290;EXPOSE&amp;#25351;&amp;#20196;&amp;#21487;&amp;#20197;&amp;#19968;&amp;#27425;&amp;#35774;&amp;#32622;&amp;#22810;&amp;#20010;&amp;#31471;&amp;#21475;&amp;#21495;&amp;#65292;&amp;#30456;&amp;#24212;&amp;#30340;&amp;#36816;&amp;#34892;&amp;#23481;&amp;#22120;&amp;#30340;&amp;#26102;&amp;#20505;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#37197;&amp;#22871;&amp;#30340;&amp;#22810;&amp;#27425;&amp;#20351;&amp;#29992;-p&amp;#36873;&amp;#39033;&amp;#12290;&amp;#10;&amp;#26684;&amp;#24335;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;EXPOSE &lt;port&gt; [&lt;port&gt;…]  &lt;/port&gt;&lt;/port&gt;&lt;/p&gt;
&lt;h1 id=&quot;u6620_u5C04_u4E00_u4E2A_u7AEF_u53E3&quot;&gt;&lt;a href=&quot;#u6620_u5C04_u4E00_u4E2A_u7AEF_u53E3&quot; class=&quot;headerlink&quot; title=&quot;映射一个端口&quot;&gt;&lt;/a&gt;映射一个端口&lt;/h1&gt;&lt;p&gt;EXPOSE port1  &lt;/p&gt;
&lt;h1 id=&quot;u76F8_u5E94_u7684_u8FD0_u884C_u5BB9_u5668_u4F7F_u7528_u7684_u547D_u4EE4&quot;&gt;&lt;a href=&quot;#u76F8_u5E94_u7684_u8FD0_u884C_u5BB9_u5668_u4F7F_u7528_u7684_u547D_u4EE4&quot; class=&quot;headerlink&quot; title=&quot;相应的运行容器使用的命令&quot;&gt;&lt;/a&gt;相应的运行容器使用的命令&lt;/h1&gt;&lt;p&gt;docker run -p port1 image  &lt;/p&gt;
&lt;h1 id=&quot;u6620_u5C04_u591A_u4E2A_u7AEF_u53E3&quot;&gt;&lt;a href=&quot;#u6620_u5C04_u591A_u4E2A_u7AEF_u53E3&quot; class=&quot;headerlink&quot; title=&quot;映射多个端口&quot;&gt;&lt;/a&gt;映射多个端口&lt;/h1&gt;&lt;p&gt;EXPOSE port1 port2 port3  &lt;/p&gt;
&lt;h1 id=&quot;u76F8_u5E94_u7684_u8FD0_u884C_u5BB9_u5668_u4F7F_u7528_u7684_u547D_u4EE4-1&quot;&gt;&lt;a href=&quot;#u76F8_u5E94_u7684_u8FD0_u884C_u5BB9_u5668_u4F7F_u7528_u7684_u547D_u4EE4-1&quot; class=&quot;headerlink&quot; title=&quot;相应的运行容器使用的命令&quot;&gt;&lt;/a&gt;相应的运行容器使用的命令&lt;/h1&gt;&lt;p&gt;docker run -p port1 -p port2 -p port3 image  &lt;/p&gt;
&lt;h1 id=&quot;u8FD8_u53EF_u4EE5_u6307_u5B9A_u9700_u8981_u6620_u5C04_u5230_u5BBF_u4E3B_u673A_u5668_u4E0A_u7684_u67D0_u4E2A_u7AEF_u53E3_u53F7&quot;&gt;&lt;a href=&quot;#u8FD8_u53EF_u4EE5_u6307_u5B9A_u9700_u8981_u6620_u5C04_u5230_u5BBF_u4E3B_u673A_u5668_u4E0A_u7684_u67D0_u4E2A_u7AEF_u53E3_u53F7&quot; class=&quot;headerlink&quot; title=&quot;还可以指定需要映射到宿主机器上的某个端口号&quot;&gt;&lt;/a&gt;还可以指定需要映射到宿主机器上的某个端口号&lt;/h1&gt;&lt;p&gt;docker run -p host_port1:port1 -p host_port2:port2 -p host_port3:port3 image&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#31471;&amp;#21475;&amp;#26144;&amp;#23556;&amp;#26159;docker&amp;#27604;&amp;#36739;&amp;#37325;&amp;#35201;&amp;#30340;&amp;#19968;&amp;#20010;&amp;#21151;&amp;#33021;&amp;#65292;&amp;#21407;&amp;#22240;&amp;#22312;&amp;#20110;&amp;#25105;&amp;#20204;&amp;#27599;&amp;#27425;&amp;#36816;&amp;#34892;&amp;#23481;&amp;#22120;&amp;#30340;&amp;#26102;&amp;#20505;&amp;#23481;&amp;#22120;&amp;#30340;IP&amp;#22320;&amp;#22336;&amp;#19981;&amp;#33021;&amp;#25351;&amp;#23450;&amp;#32780;&amp;#26159;&amp;#22312;&amp;#26725;&amp;#25509;&amp;#32593;&amp;#21345;&amp;#30340;&amp;#22320;&amp;#22336;&amp;#33539;&amp;#22260;&amp;#20869;&amp;#38543;&amp;#26426;&amp;#29983;&amp;#25104;&amp;#30340;&amp;#12290;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#30340;IP&amp;#22320;&amp;#22336;&amp;#26159;&amp;#22266;&amp;#23450;&amp;#30340;&amp;#65292;&amp;#25105;&amp;#20204;&amp;#21487;&amp;#20197;&amp;#23558;&amp;#23481;&amp;#22120;&amp;#30340;&amp;#31471;&amp;#21475;&amp;#30340;&amp;#26144;&amp;#23556;&amp;#21040;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#19978;&amp;#30340;&amp;#19968;&amp;#20010;&amp;#31471;&amp;#21475;&amp;#65292;&amp;#20813;&amp;#21435;&amp;#27599;&amp;#27425;&amp;#35775;&amp;#38382;&amp;#23481;&amp;#22120;&amp;#20013;&amp;#30340;&amp;#26576;&amp;#20010;&amp;#26381;&amp;#21153;&amp;#26102;&amp;#37117;&amp;#35201;&amp;#26597;&amp;#30475;&amp;#23481;&amp;#22120;&amp;#30340;IP&amp;#30340;&amp;#22320;&amp;#22336;&amp;#12290;&amp;#23545;&amp;#20110;&amp;#19968;&amp;#20010;&amp;#36816;&amp;#34892;&amp;#30340;&amp;#23481;&amp;#22120;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#20351;&amp;#29992;docker port&amp;#21152;&amp;#19978;&amp;#23481;&amp;#22120;&amp;#20013;&amp;#38656;&amp;#35201;&amp;#26144;&amp;#23556;&amp;#30340;&amp;#31471;&amp;#21475;&amp;#21644;&amp;#23481;&amp;#22120;&amp;#30340;ID&amp;#26469;&amp;#26597;&amp;#30475;&amp;#35813;&amp;#31471;&amp;#21475;&amp;#21495;&amp;#22312;&amp;#23487;&amp;#20027;&amp;#26426;&amp;#22120;&amp;#19978;&amp;#30340;&amp;#26144;&amp;#23556;&amp;#31471;&amp;#21475;&amp;#12290;&amp;#10;&amp;#10;&amp;#65288;8&amp;#65289;ENV&amp;#65288;&amp;#29992;&amp;#20110;&amp;#35774;&amp;#32622;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#65289;&amp;#10;&amp;#26500;&amp;#24314;&amp;#25351;&amp;#20196;&amp;#65292;&amp;#22312;image&amp;#20013;&amp;#35774;&amp;#32622;&amp;#19968;&amp;#20010;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#12290;&amp;#10;&amp;#26684;&amp;#24335;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ENV &lt;key&gt; &lt;value&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;&amp;#35774;&amp;#32622;&amp;#20102;&amp;#21518;&amp;#65292;&amp;#21518;&amp;#32493;&amp;#30340;RUN&amp;#21629;&amp;#20196;&amp;#37117;&amp;#21487;&amp;#20197;&amp;#20351;&amp;#29992;&amp;#65292;container&amp;#21551;&amp;#21160;&amp;#21518;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#36890;&amp;#36807;docker inspect&amp;#26597;&amp;#30475;&amp;#36825;&amp;#20010;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#65292;&amp;#20063;&amp;#21487;&amp;#20197;&amp;#36890;&amp;#36807;&amp;#22312;docker run --env key=value&amp;#26102;&amp;#35774;&amp;#32622;&amp;#25110;&amp;#20462;&amp;#25913;&amp;#29615;&amp;#22659;&amp;#21464;&amp;#37327;&amp;#12290;&amp;#10;&amp;#20551;&amp;#22914;&amp;#20320;&amp;#23433;&amp;#35013;&amp;#20102;JAVA&amp;#31243;&amp;#24207;&amp;#65292;&amp;#38656;&amp;#35201;&amp;#35774;&amp;#32622;JAVA_HOME&amp;#65292;&amp;#37027;&amp;#20040;&amp;#21487;&amp;#20197;&amp;#22312;Dockerfile&amp;#20013;&amp;#36825;&amp;#26679;&amp;#20889;&amp;#65306;&amp;#10;ENV JAVA_HOME /path/to/java/dirent&amp;#10;&amp;#10;&amp;#65288;9&amp;#65289;ADD&amp;#65288;&amp;#20174;src&amp;#22797;&amp;#21046;&amp;#25991;&amp;#20214;&amp;#21040;container&amp;#30340;dest&amp;#36335;&amp;#24452;&amp;#65289;&amp;#10;&amp;#26500;&amp;#24314;&amp;#25351;&amp;#20196;&amp;#65292;&amp;#25152;&amp;#26377;&amp;#25335;&amp;#36125;&amp;#21040;container&amp;#20013;&amp;#30340;&amp;#25991;&amp;#20214;&amp;#21644;&amp;#25991;&amp;#20214;&amp;#22841;&amp;#26435;&amp;#38480;&amp;#20026;0755&amp;#65292;uid&amp;#21644;gid&amp;#20026;0&amp;#65307;&amp;#22914;&amp;#26524;&amp;#26159;&amp;#19968;&amp;#20010;&amp;#30446;&amp;#24405;&amp;#65292;&amp;#37027;&amp;#20040;&amp;#20250;&amp;#23558;&amp;#35813;&amp;#30446;&amp;#24405;&amp;#19979;&amp;#30340;&amp;#25152;&amp;#26377;&amp;#25991;&amp;#20214;&amp;#28155;&amp;#21152;&amp;#21040;container&amp;#20013;&amp;#65292;&amp;#19981;&amp;#21253;&amp;#25324;&amp;#30446;&amp;#24405;&amp;#65307;&amp;#22914;&amp;#26524;&amp;#25991;&amp;#20214;&amp;#26159;&amp;#21487;&amp;#35782;&amp;#21035;&amp;#30340;&amp;#21387;&amp;#32553;&amp;#26684;&amp;#24335;&amp;#65292;&amp;#21017;docker&amp;#20250;&amp;#24110;&amp;#24537;&amp;#35299;&amp;#21387;&amp;#32553;&amp;#65288;&amp;#27880;&amp;#24847;&amp;#21387;&amp;#32553;&amp;#26684;&amp;#24335;&amp;#65289;&amp;#65307;&amp;#22914;&amp;#26524;&amp;#60;src&amp;#62;&amp;#26159;&amp;#25991;&amp;#20214;&amp;#19988;&amp;#60;dest&amp;#62;&amp;#20013;&amp;#19981;&amp;#20351;&amp;#29992;&amp;#26012;&amp;#26464;&amp;#32467;&amp;#26463;&amp;#65292;&amp;#21017;&amp;#20250;&amp;#23558;&amp;#60;dest&amp;#62;&amp;#35270;&amp;#20026;&amp;#25991;&amp;#20214;&amp;#65292;&amp;#60;src&amp;#62;&amp;#30340;&amp;#20869;&amp;#23481;&amp;#20250;&amp;#20889;&amp;#20837;&amp;#60;dest&amp;#62;&amp;#65307;&amp;#22914;&amp;#26524;&amp;#60;src&amp;#62;&amp;#26159;&amp;#25991;&amp;#20214;&amp;#19988;&amp;#60;dest&amp;#62;&amp;#20013;&amp;#20351;&amp;#29992;&amp;#26012;&amp;#26464;&amp;#32467;&amp;#26463;&amp;#65292;&amp;#21017;&amp;#20250;&amp;#60;src&amp;#62;&amp;#25991;&amp;#20214;&amp;#25335;&amp;#36125;&amp;#21040;&amp;#60;dest&amp;#62;&amp;#30446;&amp;#24405;&amp;#19979;&amp;#12290;&amp;#10;&amp;#26684;&amp;#24335;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/value&gt;&lt;/key&gt;&lt;/p&gt;
&lt;p&gt;ADD &lt;src&gt; &lt;dest&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;&amp;#60;src&amp;#62; &amp;#26159;&amp;#30456;&amp;#23545;&amp;#34987;&amp;#26500;&amp;#24314;&amp;#30340;&amp;#28304;&amp;#30446;&amp;#24405;&amp;#30340;&amp;#30456;&amp;#23545;&amp;#36335;&amp;#24452;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#26159;&amp;#25991;&amp;#20214;&amp;#25110;&amp;#30446;&amp;#24405;&amp;#30340;&amp;#36335;&amp;#24452;&amp;#65292;&amp;#20063;&amp;#21487;&amp;#20197;&amp;#26159;&amp;#19968;&amp;#20010;&amp;#36828;&amp;#31243;&amp;#30340;&amp;#25991;&amp;#20214;url;&amp;#10;&amp;#60;dest&amp;#62; &amp;#26159;container&amp;#20013;&amp;#30340;&amp;#32477;&amp;#23545;&amp;#36335;&amp;#24452;&amp;#10;&amp;#10;&amp;#65288;10&amp;#65289;VOLUME&amp;#65288;&amp;#25351;&amp;#23450;&amp;#25346;&amp;#36733;&amp;#28857;)&amp;#65289;&amp;#10;&amp;#35774;&amp;#32622;&amp;#25351;&amp;#20196;&amp;#65292;&amp;#20351;&amp;#23481;&amp;#22120;&amp;#20013;&amp;#30340;&amp;#19968;&amp;#20010;&amp;#30446;&amp;#24405;&amp;#20855;&amp;#26377;&amp;#25345;&amp;#20037;&amp;#21270;&amp;#23384;&amp;#20648;&amp;#25968;&amp;#25454;&amp;#30340;&amp;#21151;&amp;#33021;&amp;#65292;&amp;#35813;&amp;#30446;&amp;#24405;&amp;#21487;&amp;#20197;&amp;#34987;&amp;#23481;&amp;#22120;&amp;#26412;&amp;#36523;&amp;#20351;&amp;#29992;&amp;#65292;&amp;#20063;&amp;#21487;&amp;#20197;&amp;#20849;&amp;#20139;&amp;#32473;&amp;#20854;&amp;#20182;&amp;#23481;&amp;#22120;&amp;#20351;&amp;#29992;&amp;#12290;&amp;#25105;&amp;#20204;&amp;#30693;&amp;#36947;&amp;#23481;&amp;#22120;&amp;#20351;&amp;#29992;&amp;#30340;&amp;#26159;AUFS&amp;#65292;&amp;#36825;&amp;#31181;&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#19981;&amp;#33021;&amp;#25345;&amp;#20037;&amp;#21270;&amp;#25968;&amp;#25454;&amp;#65292;&amp;#24403;&amp;#23481;&amp;#22120;&amp;#20851;&amp;#38381;&amp;#21518;&amp;#65292;&amp;#25152;&amp;#26377;&amp;#30340;&amp;#26356;&amp;#25913;&amp;#37117;&amp;#20250;&amp;#20002;&amp;#22833;&amp;#12290;&amp;#24403;&amp;#23481;&amp;#22120;&amp;#20013;&amp;#30340;&amp;#24212;&amp;#29992;&amp;#26377;&amp;#25345;&amp;#20037;&amp;#21270;&amp;#25968;&amp;#25454;&amp;#30340;&amp;#38656;&amp;#27714;&amp;#26102;&amp;#21487;&amp;#20197;&amp;#22312;Dockerfile&amp;#20013;&amp;#20351;&amp;#29992;&amp;#35813;&amp;#25351;&amp;#20196;&amp;#12290;&amp;#10;&amp;#26684;&amp;#24335;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/dest&gt;&lt;/src&gt;&lt;/p&gt;
&lt;p&gt;VOLUME [“&lt;mountpoint&gt;“]&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/mountpoint&gt;&lt;/p&gt;
&lt;p&gt;FROM base&lt;br&gt;VOLUME [“/tmp/data”]&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#36816;&amp;#34892;&amp;#36890;&amp;#36807;&amp;#35813;Dockerfile&amp;#29983;&amp;#25104;image&amp;#30340;&amp;#23481;&amp;#22120;&amp;#65292;/tmp/data&amp;#30446;&amp;#24405;&amp;#20013;&amp;#30340;&amp;#25968;&amp;#25454;&amp;#22312;&amp;#23481;&amp;#22120;&amp;#20851;&amp;#38381;&amp;#21518;&amp;#65292;&amp;#37324;&amp;#38754;&amp;#30340;&amp;#25968;&amp;#25454;&amp;#36824;&amp;#23384;&amp;#22312;&amp;#12290;&amp;#20363;&amp;#22914;&amp;#21478;&amp;#19968;&amp;#20010;&amp;#23481;&amp;#22120;&amp;#20063;&amp;#26377;&amp;#25345;&amp;#20037;&amp;#21270;&amp;#25968;&amp;#25454;&amp;#30340;&amp;#38656;&amp;#27714;&amp;#65292;&amp;#19988;&amp;#24819;&amp;#20351;&amp;#29992;&amp;#19978;&amp;#38754;&amp;#23481;&amp;#22120;&amp;#20849;&amp;#20139;&amp;#30340;/tmp/data&amp;#30446;&amp;#24405;&amp;#65292;&amp;#37027;&amp;#20040;&amp;#21487;&amp;#20197;&amp;#36816;&amp;#34892;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#21629;&amp;#20196;&amp;#21551;&amp;#21160;&amp;#19968;&amp;#20010;&amp;#23481;&amp;#22120;&amp;#65306;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;docker run -t -i -rm -volumes-from container1 image2 bash&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;container1&amp;#20026;&amp;#31532;&amp;#19968;&amp;#20010;&amp;#23481;&amp;#22120;&amp;#30340;ID&amp;#65292;image2&amp;#20026;&amp;#31532;&amp;#20108;&amp;#20010;&amp;#23481;&amp;#22120;&amp;#36816;&amp;#34892;image&amp;#30340;&amp;#21517;&amp;#23383;&amp;#12290;&amp;#10;&amp;#10;&amp;#65288;11&amp;#65289;WORKDIR&amp;#65288;&amp;#20999;&amp;#25442;&amp;#30446;&amp;#24405;&amp;#65289;&amp;#10;&amp;#35774;&amp;#32622;&amp;#25351;&amp;#20196;&amp;#65292;&amp;#21487;&amp;#20197;&amp;#22810;&amp;#27425;&amp;#20999;&amp;#25442;(&amp;#30456;&amp;#24403;&amp;#20110;cd&amp;#21629;&amp;#20196;)&amp;#65292;&amp;#23545;RUN,CMD,ENTRYPOINT&amp;#29983;&amp;#25928;&amp;#12290;&amp;#10;&amp;#26684;&amp;#24335;:&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;WORKDIR /path/to/workdir  &lt;/p&gt;
&lt;h1 id=&quot;u5728_/p1/p2__u4E0B_u6267_u884C_vim_a-txt&quot;&gt;&lt;a href=&quot;#u5728_/p1/p2__u4E0B_u6267_u884C_vim_a-txt&quot; class=&quot;headerlink&quot; title=&quot;在 /p1/p2 下执行 vim a.txt&quot;&gt;&lt;/a&gt;在 /p1/p2 下执行 vim a.txt&lt;/h1&gt;&lt;p&gt;WORKDIR /p1 WORKDIR p2 RUN vim a.txt&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#10;&amp;#65288;12&amp;#65289;ONBUILD&amp;#65288;&amp;#22312;&amp;#23376;&amp;#38236;&amp;#20687;&amp;#20013;&amp;#25191;&amp;#34892;&amp;#65289;&amp;#10;``` &amp;#10;ONBUILD &amp;#60;Dockerfile&amp;#20851;&amp;#38190;&amp;#23383;&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;ONBUILD 指定的命令在构建镜像时并不执行，而是在它的子镜像中执行。&lt;br&gt;详细资料可参考&lt;a href=&quot;https://www.dockboard.org/docker-quicktip-3-onbuild&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://www.dockboard.org/docker-quicktip-3-onbuild&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;2_u3001_u521B_u5EFADockerfile_uFF0C_u6784_u5EFAshadowsocks_u73AF_u5883&quot;&gt;&lt;a href=&quot;#2_u3001_u521B_u5EFADockerfile_uFF0C_u6784_u5EFAshadowsocks_u73AF_u5883&quot; class=&quot;headerlink&quot; title=&quot;2、创建Dockerfile，构建shadowsocks环境&quot;&gt;&lt;/a&gt;2、创建Dockerfile，构建shadowsocks环境&lt;/h3&gt;&lt;p&gt;Dockerfile文件&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Version: 0.0.1&amp;#10;&amp;#10;# Pull base image&amp;#10;FROM centos:6&amp;#10;&amp;#10;MAINTAINER Gao Xiong &amp;#34;growdane@gmail.com&amp;#34;&amp;#10;&amp;#10;# Install openssl-devel&amp;#10;RUN yum -y install openssl-devel&amp;#10;&amp;#10;# Install make and another devople tools&amp;#10;RUN yum -y install gcc gcc-c++ automake autoconf libtool make&amp;#10;&amp;#10;# Install git &amp;#10;RUN yum -y install git&amp;#10;&amp;#10;# Pull shadowsocks and install&amp;#10;RUN cd /root &amp;#38;&amp;#38; git clone https://github.com/madeye/shadowsocks-libev.git&amp;#10;RUN cd /root/shadowsocks-libev &amp;#38;&amp;#38; ./configure &amp;#38;&amp;#38; make &amp;#38;&amp;#38; make install&amp;#10;&amp;#10;# Expose ports&amp;#10;EXPOSE 8388&amp;#10;&amp;#10;# Define default command&amp;#10;ENTRYPOINT cd /root/shadowsocks-libev &amp;#38;&amp;#38; ss-server -p 8388 -k fuckgfw10086&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;3_u3001_u6784_u5EFA_u955C_u50CF&quot;&gt;&lt;a href=&quot;#3_u3001_u6784_u5EFA_u955C_u50CF&quot; class=&quot;headerlink&quot; title=&quot;3、构建镜像&quot;&gt;&lt;/a&gt;3、构建镜像&lt;/h3&gt;&lt;p&gt;Dockerfile写好了，就可以在宿主的命令行中构建这个镜像了，构建命令如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker build -t growdane/shadowsocks .&amp;#10;# docker run -d -p 8388:8388 growdane/shadowsocks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行完上面的命令就可以直接在需要shadowsock的地方连接他了，密码就是ENTRYPOINT中，-k参数设置的。&lt;/p&gt;
&lt;h3 id=&quot;4_u3001_u955C_u50CF_u4E0A_u4F20&quot;&gt;&lt;a href=&quot;#4_u3001_u955C_u50CF_u4E0A_u4F20&quot; class=&quot;headerlink&quot; title=&quot;4、镜像上传&quot;&gt;&lt;/a&gt;4、镜像上传&lt;/h3&gt;&lt;p&gt;镜像上传有多种办法，第一种是通过docker直接在命令行将生成好的镜像上传到 docker.io这种方法会稍微慢一点，还有种方法是将dockerfile上传到github，然后通过自动构建来在docker.io上生成镜像。两种方法的shell命令如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker login&amp;#10;# docker push growdane/shadowsocks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第二种方法&lt;br&gt;这种方法不好用命令来说明，直接在用文字来说吧，现在github上创建一个新得Repository，然后将Dockerfile上传到github上就可以了。上面的这个Dockerfile我已经上传到&lt;a href=&quot;https://github.com/hsiun/dockerfile-shadowsocks。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/hsiun/dockerfile-shadowsocks。&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;5_u3001_u955C_u50CF_u62C9_u53D6&quot;&gt;&lt;a href=&quot;#5_u3001_u955C_u50CF_u62C9_u53D6&quot; class=&quot;headerlink&quot; title=&quot;5、镜像拉取&quot;&gt;&lt;/a&gt;5、镜像拉取&lt;/h3&gt;&lt;p&gt;现在镜像已经创建成功了，如果需要的话可以通过下面的命令来拉取&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# docker pull growdane/shadowsocks&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;1_u3001_u521B_u5EFADocker_u955C_u50CF_u7684_u4E00_u4E9B_u8BF4_u660E&quot;&gt;&lt;a href=&quot;#1_u3001_u521B_u5EFADocker_u955C_u50CF_u7684_u4E00_u4E
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>云直播（ULive）初体验</title>
    <link href="http://zone.gaospot.com/2016/05/09/%E4%BA%91%E7%9B%B4%E6%92%AD%EF%BC%88ULive%EF%BC%89%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>http://zone.gaospot.com/2016/05/09/云直播（ULive）初体验/</id>
    <published>2016-05-09T09:45:00.000Z</published>
    <updated>2016-05-09T09:49:44.250Z</updated>
    
    <content type="html">&lt;p&gt;这篇博客旨在通过一个简单是使用例子来初步说明ULive这个产品的使用方法，产品文档的说明主要是针对产品的，而这篇博客则主要是从用户业务的角度来做说明。&lt;/p&gt;
&lt;h3 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h3&gt;&lt;p&gt;这里通过obs（一个开源的直播软件）来录视频（产生直播流），当然也可以通过sdk来开发推流客户端。直播流推流到UCloud提供专门用于测试的推流地址，播放是通过支持rtmp协议串流播放的vlc（开源播放器）来做的。有其他更多需求比如说弹幕啊什么的其实是通过在播放客户端中做的，这个可以自行实现。下面通过图示来说明这个过程（图略丑，见谅：）&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/%E6%A6%82%E8%BF%B0.png&quot; alt=&quot;推流和拉流过程说明&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u51C6_u5907_u548C_u524D_u63D0_u6761_u4EF6&quot;&gt;&lt;a href=&quot;#u51C6_u5907_u548C_u524D_u63D0_u6761_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;准备和前提条件&quot;&gt;&lt;/a&gt;准备和前提条件&lt;/h3&gt;&lt;p&gt;推流和播放软件：&lt;br&gt;obs和vlc&lt;/p&gt;
&lt;p&gt;用于测试的推流和播放地址：&lt;br&gt;推流地址：rtmp://publish3.cdn.ucloud.com.cn/ucloud/流id&lt;br&gt;rtmp播放地址：rtmp://vlive3.rtmp.cdn.ucloud.com.cn/ucloud/流id&lt;br&gt;hls播放地址：&lt;a href=&quot;http://vlive3.hls.cdn.ucloud.com.cn/ucloud/流id/playlist.m3u8&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://vlive3.hls.cdn.ucloud.com.cn/ucloud/流id/playlist.m3u8&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;其中，流id是您可以任意指定的（仅限于英文字母、数字、下划线），比如aaa、xyz等。因为测试地址是公共的，为了不与其他客户的测试冲突，建议您使用带有自定义前缀（如公司英文名）的流id。&lt;/p&gt;
&lt;h3 id=&quot;u89C6_u9891_u5F55_u5236_u548C_u63A8_u6D41&quot;&gt;&lt;a href=&quot;#u89C6_u9891_u5F55_u5236_u548C_u63A8_u6D41&quot; class=&quot;headerlink&quot; title=&quot;视频录制和推流&quot;&gt;&lt;/a&gt;视频录制和推流&lt;/h3&gt;&lt;p&gt;这里使用的是obs来录制视频并推流，obs的具体使用不做太多的说明，只说明直播服务器相关地方的说明。首先是点设定，弹出设定对话框，然后选择广播设定，设定FMS URL，和播放路径这两项。FMS URL填的测试推流地址：rtmp://publish3.cdn.ucloud.com.cn/ucloud/，播放路径就是Ulive所说的流id，我这里写的是gaospot。具体说明见下面的文档。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/%E6%8E%A8%E6%B5%81.png&quot; alt=&quot;视频录制和推流&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;u64AD_u653E_u548C_u62C9_u6D41&quot;&gt;&lt;a href=&quot;#u64AD_u653E_u548C_u62C9_u6D41&quot; class=&quot;headerlink&quot; title=&quot;播放和拉流&quot;&gt;&lt;/a&gt;播放和拉流&lt;/h3&gt;&lt;p&gt;这里使用vlc来播放我们的直播，媒体-》打开网络串流。就到如下所示的对话框，这个和上面推流地址是相关的，播放地址就是推流地址加流id，我这里具体来说就是rtmp://vlive3.rtmp.cdn.ucloud.com.cn/ucloud/gaospot&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/%E6%8B%89%E6%B5%81.png&quot; alt=&quot;播放和拉流&quot;&gt;&lt;/p&gt;
&lt;p&gt;了解了上面的姿势之后在看官方文档（&lt;a href=&quot;https://docs.ucloud.cn/upd-docs/ulive/index.html）的说明就能完全掌握这个产品的使用了。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://docs.ucloud.cn/upd-docs/ulive/index.html）的说明就能完全掌握这个产品的使用了。&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博客旨在通过一个简单是使用例子来初步说明ULive这个产品的使用方法，产品文档的说明主要是针对产品的，而这篇博客则主要是从用户业务的角度来做说明。&lt;/p&gt;
&lt;h3 id=&quot;u6982_u8FF0&quot;&gt;&lt;a href=&quot;#u6982_u8FF0&quot; class=&quot;header
    
    </summary>
    
    
      <category term="产品说明" scheme="http://zone.gaospot.com/tags/%E4%BA%A7%E5%93%81%E8%AF%B4%E6%98%8E/"/>
    
  </entry>
  
  <entry>
    <title>Mysql常见问题排查</title>
    <link href="http://zone.gaospot.com/2016/05/04/Mysql%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%8E%92%E9%94%99/"/>
    <id>http://zone.gaospot.com/2016/05/04/Mysql常见问题排错/</id>
    <published>2016-05-04T03:35:00.000Z</published>
    <updated>2016-05-04T03:40:12.576Z</updated>
    
    <content type="html">&lt;p&gt;解决UDB主从同步不一致&lt;br&gt;1、: “开启super权限：update mysql.user set super_priv = ‘Y’ where user = ‘root’; flush privileges;”,&lt;br&gt;2、: “停止slave: stop slave;”,&lt;br&gt;3、: “设置跳过slave同步语句数： set global sql_slave_skip_counter = 1;”,&lt;br&gt;4、: “启动slave： start slave;”,&lt;br&gt;5、: “确认同步是否正确： show slave status G 确认”,&lt;br&gt;6、: “若同步还是出错重复第2-5步，若同步正确则结束”&lt;/p&gt;
&lt;p&gt;数据库上可以在哪里查询最近执行较慢的sql？&lt;/p&gt;
&lt;p&gt;1、可以通过这个命令查看：select * from mysql.slow_log where start_time &amp;gt;= ‘xxxx-xx-xx’;&lt;br&gt;2、如何查看MySQL数据库的死锁信息&lt;br&gt;3、服务器运行一天后，就开始频繁报错：Deadlock found when trying to get to lock; try restarting transaction.&lt;br&gt;4、使用终端或命令提示符登录到MySQL，输入命令：mysql -h xxxx.xxx.xxx -P 3306 -u username -p password&lt;br&gt;5、在MySQL客户端下输入命令：show engine innodb status \G;&lt;br&gt;6、在打印出来的信息中找到“LATEST DETECTED DEADLOCK”一节内容&lt;br&gt;7、分析其中的内容，我们就可以知道最近导致死锁的事务有哪些.&lt;/p&gt;
&lt;p&gt;Mysql 5.6内存问题&lt;/p&gt;
&lt;p&gt;mysql5.6版本的，内存少于3G的，内存使用率100%一般是正常情况，可以尝试设置performance_schema=0，重启&lt;br&gt;原因：&lt;br&gt;5.6版本本来就比较消耗内存，用户的内存配置又低，可以尝试修改performance_schema=0，并降低缓冲池大小，或建议用户增大内存。&lt;br&gt;5.6的启动内存大约就需要500M，缓冲区内存900M，当缓冲区填满以后内存就肯定在100%了，并且不会再下降 以后如果是mysql5.6，如果它的总内存在2G以内的，数据量超过900M的，都会引起内存使用超过100%并且不会再下降的情况。&lt;/p&gt;
&lt;p&gt;如果是这样，可以：1 减少缓冲池大小 2 禁用performance_schema=0 3 增大内存  &lt;/p&gt;
&lt;p&gt;三种方法 2-3G的内存一般会遇到&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;解决UDB主从同步不一致&lt;br&gt;1、: “开启super权限：update mysql.user set super_priv = ‘Y’ where user = ‘root’; flush privileges;”,&lt;br&gt;2、: “停止slave: stop slav
    
    </summary>
    
    
      <category term="数据库管理" scheme="http://zone.gaospot.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>如何成为一名优秀的技术支持</title>
    <link href="http://zone.gaospot.com/2016/05/03/%E5%A6%82%E4%BD%95%E6%88%90%E4%B8%BA%E4%B8%80%E5%90%8D%E4%BC%98%E7%A7%80%E7%9A%84%E6%8A%80%E6%9C%AF%E6%94%AF%E6%8C%81/"/>
    <id>http://zone.gaospot.com/2016/05/03/如何成为一名优秀的技术支持/</id>
    <published>2016-05-03T15:35:00.000Z</published>
    <updated>2016-05-05T12:13:47.796Z</updated>
    
    <content type="html">&lt;p&gt;我曾经在知乎上搜过这个问题，好像有人问了，却没有人给出好的答案，我自己曾经想过这个问题，倒想回答下这个问题，任何事情做到一定程度就会想从方法论的角度来改进做事方法。按照我一贯的形式方法，这篇文章会写的比较主观，随意，掺杂很多个人主观想法和经历在里面。&lt;br&gt;选择技术支持这一职业其实纯属偶然，一开始并不喜欢这份工作，当然说我现在有多热爱，也是假话，但我想把这件事做好，这就我的行事风格。刚开始经历了一段痛苦期，现在进入到风平浪静的事情，是时候反思下自己的所作所为以此来提升自己。&lt;br&gt;技术支持其实可以分开成为两个词来讲，技术和支持，这两个词，我认为是做好这份工作的两个方面。首先是技术，什么是技术，云计算的背后是云技术在支撑，用户业务的背后是用户程序（代码）和云环境（运行环境）在共同支撑。所以技术支持要学好技术便成了必要因素，在这里技术包含了两个方面，公司产品的技术背景和用户业务的技术背景。首先从公司产品角度来说技术支持，对公司的产品没有足够的了解显然是无法完成这份工作的。在进一步来讲，一个好的技术支持对于本公司所售产品的实现应该是了解的（现在正在学习这方面的知识），不需要熟悉到每一个代码，但对整体设计应该是明白的。在其次是对用户所使用技术的理解，用户可能采用各种各样的解决方案，也许自己并不熟悉，但遇到问题，需要需要我们这边提供支持的时候应该怎么做，这里面又有一个方法论的问题了，虽然并不是每一个问题都是我们所熟悉的，但解决问题的方法是一样的，比如说排除网络问题，有排查网络问题的一个思路和方法。碰到类似问题按照这样的方法来定位就好了，综上来讲技术就两方面，&lt;br&gt;另外一个词是支持，支持是一个动词，强调的是一个动作或过程，它包含有沟通，协助教育等等意思，沟通交流是技术支持的工作方法，工作手段和工具。没有交流，技术支持的工作无法开展，沟通交流是渠道是基础，因此沟通是基础技能。其次是协助，协助是技术支持工作的主意内容，通过独立分析问题，最后协助用户解决问题，协助使技术支持的工作产生价值。最后是教育，是进阶内容，其实是经过上两步认为就完成了一次支持工作，教育不是独立的第三步，其可以认为作为一个指导or something，贯穿在整个过程中，在交流的过程影响用户，这就是教育，大公司都懂得教育用户，通过广告等等方式，比如说某某公司，大家会说它怎么怎么样，它天生就是这样吗？不是的，是它把用户教育成这样认为的，如果它在确实是这样做的，事实上就是这样的，最终用户也就这样认为了，没了。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我曾经在知乎上搜过这个问题，好像有人问了，却没有人给出好的答案，我自己曾经想过这个问题，倒想回答下这个问题，任何事情做到一定程度就会想从方法论的角度来改进做事方法。按照我一贯的形式方法，这篇文章会写的比较主观，随意，掺杂很多个人主观想法和经历在里面。&lt;br&gt;选择技术支持这一
    
    </summary>
    
    
      <category term="个人总结" scheme="http://zone.gaospot.com/tags/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>无EIP云主机访问外网</title>
    <link href="http://zone.gaospot.com/2016/04/25/%E6%97%A0EIP%E4%BA%91%E4%B8%BB%E6%9C%BA%E8%AE%BF%E9%97%AE%E5%A4%96%E7%BD%91/"/>
    <id>http://zone.gaospot.com/2016/04/25/无EIP云主机访问外网/</id>
    <published>2016-04-25T14:23:40.000Z</published>
    <updated>2016-05-04T03:12:37.299Z</updated>
    
    <content type="html">&lt;p&gt;在UCloud平台使用云主机的时候，如果需要访问外网，一种比较直接的方式就是绑定EIP，但是在某些情况下我们并不希望给没给云主机都绑定一个EIP，比如说安装需要从外网下载软件的时候。这个时候我们该如何实现这个需求呢，在这种情况下，我们要求最少需要有一个EIP，这样可以通过一定的设置方式让其他云主机使用这个EIP作为出口，这里介绍两种方法，一种是通过UCloud平台提供的路由器产品（免费），还有一个是使用绑定了EIP的云主机作为网关来实现。&lt;/p&gt;
&lt;h3 id=&quot;u4E00_u3001_u4F7F_u7528_u5177_u6709EIP_u4E91_u4E3B_u673A_u505A_u7F51_u5173_u5B9E_u73B0_u5916_u7F51_u8BBF_u95EE&quot;&gt;&lt;a href=&quot;#u4E00_u3001_u4F7F_u7528_u5177_u6709EIP_u4E91_u4E3B_u673A_u505A_u7F51_u5173_u5B9E_u73B0_u5916_u7F51_u8BBF_u95EE&quot; class=&quot;headerlink&quot; title=&quot;一、使用具有EIP云主机做网关实现外网访问&quot;&gt;&lt;/a&gt;一、使用具有EIP云主机做网关实现外网访问&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;测试环境介绍（两台主机都在北京二可用区C，系统均为centos6.5）：&lt;/strong&gt;&lt;br&gt;云主机A（做网关）：内网IP: 10.10.229.85 外网IP: 123.59.150.107 BGP&lt;br&gt;云主机B：内网IP: 10.10.246.62&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现目标：&lt;/strong&gt;&lt;br&gt;主机A可以访问外网，但是主机B没有EIP也没有做任何设置不可以访问外网。现在要通过修改主机B网关的方式实现主机B访问外网。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;步骤概述：&lt;/strong&gt;&lt;br&gt;1.网关机器打开内核里面的ip forward参数&lt;br&gt;2.网关机器做iptables，完成nat映射&lt;br&gt;3.后端机器修改网关地址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;具体操作步骤：&lt;/strong&gt;&lt;br&gt;1、打开具备外网IP的云主机A（作为转发路由）的转发功能，编辑/etc/sysctl.conf文件，打开配置  net.ipv4.ip_forward=1。 &lt;/p&gt;
&lt;p&gt;2、执行  sysctl -p 使配置生效&lt;/p&gt;
&lt;p&gt;3、在路由机器云主机A（具备外网IP）设置iptables转发 iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;/p&gt;
&lt;p&gt;4、修改需要访问外网的内网机器云主机B， 编辑/etc/sysconfig/network-scripts/ifcfg-eth0文件，修改默认路由为路由机器云主机A（具备外网IP）内网IP，例如：gateway 10.10.229.85。&lt;/p&gt;
&lt;p&gt;5、执行 service network restart 使配置生效&lt;/p&gt;
&lt;p&gt;6、通过ping一个外网域名来验证，外网可达性，比如说，ping www.baidu.com&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;副作用及解决（&lt;a href=&quot;https://docs.ucloud.cn/upd-docs/unetwork/faq.html#id27&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用某台云主机做外网网关后, 是否需要添加其他路由&lt;/a&gt;）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;会影响云主机和其他产品的内网通信，解决办法是添加静态路由。说明如下：云主机的流量可分为纵向流量: 外网流量以及ULB/UDB/UMem访问流量. 横向流量: 云主机间内网通讯. 默认路由修改到做网关的云主机后, 所有流量都会变为横向流量, 不仅影响纵向流量的效率, 也会导致无法和ULB/UDB/UMem通讯(因为内网IP伪造的安全规则会不通过). 解决方法是添加静态路由.&lt;/p&gt;
&lt;p&gt;Linux添加路由示例&lt;br&gt;华东机房&lt;br&gt;ip ro add 10.255.0.0/16 via 10.4.0.1&lt;br&gt;ip ro add 10.4.0.0/16 via 10.4.0.1&lt;br&gt;echo “ip ro add 10.255.0.0/16 via 10.4.0.1” &amp;gt;&amp;gt; /etc/rc.local&lt;br&gt;echo “ip ro add 10.4.0.0/16 via 10.4.0.1” &amp;gt;&amp;gt; /etc/rc.local&lt;/p&gt;
&lt;p&gt;北京BGP-A机房&lt;br&gt;ip ro add 10.255.0.0/16 via 10.6.0.1&lt;br&gt;ip ro add 10.6.0.0/16 via 10.6.0.1&lt;br&gt;echo “ip ro add 10.255.0.0/16 via 10.6.0.1” &amp;gt;&amp;gt; /etc/rc.local&lt;br&gt;echo “ip ro add 10.6.0.0/16 via 10.6.0.1” &amp;gt;&amp;gt; /etc/rc.local&lt;/p&gt;
&lt;p&gt;Windows添加路由示例&lt;br&gt;华东机房&lt;br&gt;route add 10.255.0.0 mask 255.255.0.0 10.4.0.1 /p&lt;br&gt;route add 10.4.0.0 mask 255.255.0.0 10.4.0.1 /p&lt;/p&gt;
&lt;p&gt;北京BGP-A机房&lt;br&gt;route add 10.255.0.0 mask 255.255.0.0 10.6.0.1 /p&lt;br&gt;route add 10.6.0.0 mask 255.255.0.0 10.6.0.1 /p&lt;/p&gt;
&lt;h3 id=&quot;u4E8C_u3001_u4F7F_u7528_u8DEF_u7531_u5668_u5B9E_u73B0_u5916_u7F51_u8BBF_u95EE&quot;&gt;&lt;a href=&quot;#u4E8C_u3001_u4F7F_u7528_u8DEF_u7531_u5668_u5B9E_u73B0_u5916_u7F51_u8BBF_u95EE&quot; class=&quot;headerlink&quot; title=&quot;二、使用路由器实现外网访问&quot;&gt;&lt;/a&gt;二、使用路由器实现外网访问&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;具体操作步骤：&lt;/strong&gt;&lt;br&gt;1、登录控制台，选择网络Unet下的路由器选项，点击创建路由器； &lt;/p&gt;
&lt;p&gt;2、在弹出的创建路由器页面中输入路由器名称，点击确认完成路由器创建；&lt;/p&gt;
&lt;p&gt;3、申请弹性EIP，将EIP绑定已经创建好的路由器；&lt;/p&gt;
&lt;p&gt;4、此时路由器列表页面中显示了与路由器关联的弹性外网IP和子网信息。如果子网机器需要访问外网，可以根据需要将创建的子网连接到路由器&lt;/p&gt;
&lt;p&gt;5、点击进入路由器的端口转发,添加转发规则。&lt;/p&gt;
&lt;p&gt;说明：采用第二种方法来实现外网访问可能有一点难以理解的地方，一般人可能会认为转发规则不应该是把外部的请求转发到内部主机吗，为什么这个可以实现由内到外的转发呢？其实是这样的，通过配置转发规则，相当于告诉SDN（UCloud的内网架构使用的就是SDN技术）这些流量是要通过路由出外网的，当流量发往默认网关的时候，SDN发现这些流量是要出外网的，于是通过SDN内部机制这些流量发往外网了。在借助路由器的情况下其实还有另外一种实现方式就是通过修改主机内部的网关，直接把流量引向路由，这样也可以实现我们的需求。&lt;/p&gt;
&lt;p&gt;补充：一台uhost能否同时既绑EIP又通过vrouter访问外网？&lt;br&gt;不能，目前主动出外网的方式分为两种，一个是直接绑定eip,通过nat转发,一个是通过vrouter端口转发，走vrouter。由于下一跳是二选一的，所以二者不能兼容。我们的产品策略是直接绑定eip优先级高于端口转发，所以同时做了端口转发和绑定eip,那么端口转发是不生效的。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.05do.com/blog/content/190&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解决Ucloud没有弹性IP的内网主机访问外网的问题&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://docs.ucloud.cn/upd-docs/uhost/guide.html#id9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现外网对大数据机型云主机&amp;amp;物理主机的访问&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在UCloud平台使用云主机的时候，如果需要访问外网，一种比较直接的方式就是绑定EIP，但是在某些情况下我们并不希望给没给云主机都绑定一个EIP，比如说安装需要从外网下载软件的时候。这个时候我们该如何实现这个需求呢，在这种情况下，我们要求最少需要有一个EIP，这样可以通过一
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装</title>
    <link href="http://zone.gaospot.com/2016/04/24/Docker%E5%AE%89%E8%A3%85/"/>
    <id>http://zone.gaospot.com/2016/04/24/Docker安装/</id>
    <published>2016-04-24T09:11:00.000Z</published>
    <updated>2016-04-24T09:12:34.862Z</updated>
    
    <content type="html">&lt;p&gt;记录在我的云主机上安装Docker的过程，安装过程是通过软件包管理器来安装的，所有安装过程比较简单，过程参考了Docker官方文档和其他一些内容。&lt;/p&gt;
&lt;h3 id=&quot;u524D_u63D0_u6761_u4EF6&quot;&gt;&lt;a href=&quot;#u524D_u63D0_u6761_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;p&gt;由于Docker对操作系统的一些底层功能有依赖，所有并不是所有的Linux发行版都可以用来安装Docker的，我这里选择的是Ubuntu14.04 64bit，因为Ubuntu本身使用用户量比较大，而且也是我自己常用的系统。具体要求在列表中给出：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;必须是64位系统，不论是AMD还是X86_64，总之一定要是64位的；&lt;/li&gt;
&lt;li&gt;内核版本最起码是3.10，小版本最低的3.10都行；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u66F4_u65B0APT_u6E90&quot;&gt;&lt;a href=&quot;#u66F4_u65B0APT_u6E90&quot; class=&quot;headerlink&quot; title=&quot;更新APT源&quot;&gt;&lt;/a&gt;更新APT源&lt;/h3&gt;&lt;p&gt;为了安装最新的docker版本，这里并没有使用ubuntu官方的源来安装docker，而是使用了其他的源，添加过程如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&amp;#10;$ sudo apt-get install apt-transport-https ca-certificates&amp;#10;$ sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D&amp;#10;$ vim /etc/apt/sources.list.d/docker.list #&amp;#28155;&amp;#21152;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#20869;&amp;#23481;&amp;#65292;&amp;#22240;&amp;#20026;&amp;#25105;&amp;#26159;14.04&amp;#30340;&amp;#10;&amp;#10;deb https://apt.dockerproject.org/repo ubuntu-trusty main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其他版本的添加的源如下：&lt;br&gt;在Ubuntu Precise 12.04 (LTS)中，添加下面的源&lt;/p&gt;
&lt;p&gt;deb &lt;a href=&quot;https://apt.dockerproject.org/repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://apt.dockerproject.org/repo&lt;/a&gt; ubuntu-precise main&lt;br&gt;在Ubuntu Trusty 14.04 (LTS)中，添加下面的源&lt;/p&gt;
&lt;p&gt;deb &lt;a href=&quot;https://apt.dockerproject.org/repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://apt.dockerproject.org/repo&lt;/a&gt; ubuntu-trusty main&lt;br&gt;Ubuntu Wily 15.10&lt;/p&gt;
&lt;p&gt;deb &lt;a href=&quot;https://apt.dockerproject.org/repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://apt.dockerproject.org/repo&lt;/a&gt; ubuntu-wily main&lt;br&gt;Ubuntu Xenial 16.04 (LTS)&lt;/p&gt;
&lt;p&gt;deb &lt;a href=&quot;https://apt.dockerproject.org/repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://apt.dockerproject.org/repo&lt;/a&gt; ubuntu-xenial main&lt;/p&gt;
&lt;p&gt;保存并退出之后更新本地源缓存，我记得apt好像是有缓存：）。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u5B89_u88C5&quot;&gt;&lt;a href=&quot;#u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;在进行完上面的准备工作之后就可安装了，安装过程非常简单就是一条apt命令，安装之后对docker做一个简单检查。还有ufw的问题，ufw是Ubuntu下的防火墙，类似Centos下iptables，在我的主机上，这个防火墙是关闭的，所有可以不用担心它。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install docker-engine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装之后启动服务&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo service docker start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过运行一个Docker容器，检查Docker是否正常安装&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo docker run hello-world&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看Docker信息&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo docker info&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面就是我安装过程的一个记录，安装好Docker之后可以尽情的折腾了，遇到问题解决不了的话，直接重装系统吧：）。然后又可以愉快的玩耍了。有问题可以参考官方文档，链接在下面，官方文档说的特别详细，考虑了很多方面，我这里针对我本地需要和本地环境做了一些简化。哈哈，小偷了一下懒。不过也没什么影响，总的来说Docker安装过程还是非常简单的。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://docs.docker.com/engine/installation/linux/ubuntulinux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Installation on Ubuntu&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;记录在我的云主机上安装Docker的过程，安装过程是通过软件包管理器来安装的，所有安装过程比较简单，过程参考了Docker官方文档和其他一些内容。&lt;/p&gt;
&lt;h3 id=&quot;u524D_u63D0_u6761_u4EF6&quot;&gt;&lt;a href=&quot;#u524D_u63D0_u676
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Linux磁盘管理</title>
    <link href="http://zone.gaospot.com/2016/04/21/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    <id>http://zone.gaospot.com/2016/04/21/Linux磁盘管理/</id>
    <published>2016-04-20T23:30:57.000Z</published>
    <updated>2016-04-20T23:32:32.771Z</updated>
    
    <content type="html">&lt;p&gt;这篇博客是在系统的层次对Linux下磁盘做一个说明的，磁盘是计算机系统中非常基础的一个硬件，对于磁盘的管理和使用，操作系统完成了管理的大部分工作，而使用部分由于每个人操作磁盘的目的不同，那么使用方法也就自然不同。文章中的大部分内容来自于鸟哥的Linux私房菜，在参考部分给出了这篇文章的连接。&lt;/p&gt;
&lt;h3 id=&quot;EXT2_u6587_u4EF6_u7CFB_u7EDF&quot;&gt;&lt;a href=&quot;#EXT2_u6587_u4EF6_u7CFB_u7EDF&quot; class=&quot;headerlink&quot; title=&quot;EXT2文件系统&quot;&gt;&lt;/a&gt;EXT2文件系统&lt;/h3&gt;&lt;p&gt;文件系统可以认为是操作系统安装在磁盘上用来对磁盘进行管理的软件，&lt;strong&gt;文件系统是会占用磁盘空间的。&lt;/strong&gt; EXT2文件系统已经是一个比较古老的文件系统了，现在比较常用的已经是EXT4文件系统了，包括最新版的centos和ubunt使用的都是EXT4文件系统了。EXT4文件系统是在EXT2文件系统的基础上进化出来的。EXT2文件系统上的概念在EXT4上也是通用的。比如说data block, inode table, superblock在EXT4上也是存在的。&lt;/p&gt;
&lt;h3 id=&quot;u78C1_u76D8_u7BA1_u7406&quot;&gt;&lt;a href=&quot;#u78C1_u76D8_u7BA1_u7406&quot; class=&quot;headerlink&quot; title=&quot;磁盘管理&quot;&gt;&lt;/a&gt;磁盘管理&lt;/h3&gt;&lt;p&gt;硬盘需要分区，格式化并挂载后方能使用，Linux 下硬盘上的每个分区表示为一个设备文件。在Linux系统中这三个步骤分别对应fdisk，mkfs和mount。一块新的硬盘被加到系统中。必需要经过上面的这3步操作系统才能使用磁盘（指使用磁盘进行读取和写入操作），但其中第一个分区不是必需。物理磁盘在接入到计算机系统中之后其实只要进行格式化和挂载就能使用。&lt;/p&gt;
&lt;p&gt;####分区 ####&lt;br&gt;分区使用命令fdisk来实现，分区其实不是必需的，linux下分区的概念和Windows中把一块磁盘分成C，D，E…各个分区是一个概念。分区的目的是为了将一块完整的磁盘划分出多个独立的分区来，每一个分区相当于是一块新的磁盘。这样的好处就是我们可以在每个磁盘中安装不同的系统。在我们这里应用的时候不要安装其他系统在磁盘上，分区其实就可以省略了，整个磁盘就当做一块磁盘来用这样没有任何问题，例子中就使用了这种方式来使用我们新的磁盘。一般来说在linux下的分区工具就是fdisk，下面是fdisk常见使用方法的说明，在不同系统下用法可能不同。如有不同以使用系统版本的文档为准。&lt;br&gt;列出当前系统下的磁盘和其分区：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fdisk -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对某块磁盘进行分区操作：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fdisk /dev/vdb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入上面命令会使我们进入到fdisk的操作界面，fdisk分区的使用方法还是非常简单的。它会自动打印出命令的说明，跟进自身需求，执行上面的命令就可以了。&lt;/p&gt;
&lt;h4 id=&quot;u683C_u5F0F_u5316&quot;&gt;&lt;a href=&quot;#u683C_u5F0F_u5316&quot; class=&quot;headerlink&quot; title=&quot;格式化&quot;&gt;&lt;/a&gt;格式化&lt;/h4&gt;&lt;p&gt;linux系统支持众多的文件系统，不同的系统版本默认使用的文件系统可能也不一样，比如说centos6默认使用的ext4文件系统，而centos7默认使用的则是xfs。磁盘必须经过格式化才能使用，格式化的过程就相当于是将文件系统安装到磁盘中的过程。&lt;br&gt;常用的格式化命令示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkfs -t ext4 /dev/vdb #&amp;#23558;vdb&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#20026;ext4&amp;#10;mkfs.xfs /dev/vdb #&amp;#23558;vdb&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#20026;xfs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u6302_u8F7D&quot;&gt;&lt;a href=&quot;#u6302_u8F7D&quot; class=&quot;headerlink&quot; title=&quot;挂载&quot;&gt;&lt;/a&gt;挂载&lt;/h4&gt;&lt;p&gt;格式化好之后文件系统还不能在linux中使用，要使用的话必须要经过挂载才行。linux的文件系统是树状的文件系统，每个目录相当于是树枝的一个分叉点。我们必须把经过格式化的磁盘挂载在现有的文件系统下才能使用。文件系统的挂载使用mount命令，这个命令接受两个参数，磁盘和挂载点，挂载点是进入新磁盘的入口，要使用新磁盘必须在挂载点之下才可以。也就是说只有在挂载点目录之下新建文件，文件占用的才是新挂载上了的磁盘空间。挂载还有和他相对的一个操作卸载，有一些磁盘操作需要对磁盘进行卸载之后才能进行，下面是这两条命令的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mount /dev/vdb /data  #&amp;#23558;vdb&amp;#25346;&amp;#36733;&amp;#21040;/data&amp;#10;umount /dev/vdb       #&amp;#21368;&amp;#36733;vdb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u663E_u793A_u78C1_u76D8_u7A7A_u95F4_u5360_u7528_u60C5_u51B5&quot;&gt;&lt;a href=&quot;#u663E_u793A_u78C1_u76D8_u7A7A_u95F4_u5360_u7528_u60C5_u51B5&quot; class=&quot;headerlink&quot; title=&quot;显示磁盘空间占用情况&quot;&gt;&lt;/a&gt;显示磁盘空间占用情况&lt;/h4&gt;&lt;p&gt;在 Linux 和 AIX 系统上，都提供了一个 df 命令。df 的功能是检查文件系统的磁盘空间占用情况以及可用性，通常还包挂载点。管理员能利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。 下面是df常见几个用法的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;df -ihT #i&amp;#34920;&amp;#31034;inode&amp;#20449;&amp;#24687;&amp;#65292;h&amp;#24050;&amp;#38405;&amp;#35835;&amp;#21451;&amp;#22909;&amp;#30340;&amp;#26041;&amp;#24335;&amp;#26174;&amp;#31034;&amp;#65292;T&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#31867;&amp;#22411;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有一个用来显示文件占用大小的命令du，带 -a 选项的 du 命令将从当前目录开始沿着目录结构向下直到列出所有目录和文件的容量为止。du可用于找出当前文件系统中占用磁盘空间最多的文件，或者说找出大文件。&lt;/p&gt;
&lt;h4 id=&quot;u4F8B_u5B50_uFF1A_u65B0_u52A0_u5165_u4E00_u5757_u78C1_u76D8_u5230linux_u7CFB_u7EDF_u4E2D&quot;&gt;&lt;a href=&quot;#u4F8B_u5B50_uFF1A_u65B0_u52A0_u5165_u4E00_u5757_u78C1_u76D8_u5230linux_u7CFB_u7EDF_u4E2D&quot; class=&quot;headerlink&quot; title=&quot;例子：新加入一块磁盘到linux系统中&quot;&gt;&lt;/a&gt;例子：新加入一块磁盘到linux系统中&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkfs -t ext4 /dev/vdb #&amp;#23558;vdb&amp;#30340;&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#20026;ext4&amp;#10;mount /dev/vdb /data/ #&amp;#23558;vdb&amp;#25346;&amp;#36733;&amp;#21040;/data&amp;#30446;&amp;#24405;&amp;#19979;&amp;#10;vim /etc/fstab #&amp;#32534;&amp;#36753;fstab&amp;#23558;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#35821;&amp;#21477;&amp;#20889;&amp;#20837;fstab&amp;#20013;&amp;#10;/dev/vdb   /data  ext4  defaults,noatime 0 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6700_u540E_u8865_u5145_u4E00_u4E2A_u5728UCloud_u5E73_u53F0_u5347_u7EA7_u78C1_u76D8_u5927_u5C0F_u7684_u8BF4_u660E&quot;&gt;&lt;a href=&quot;#u6700_u540E_u8865_u5145_u4E00_u4E2A_u5728UCloud_u5E73_u53F0_u5347_u7EA7_u78C1_u76D8_u5927_u5C0F_u7684_u8BF4_u660E&quot; class=&quot;headerlink&quot; title=&quot;最后补充一个在UCloud平台升级磁盘大小的说明&quot;&gt;&lt;/a&gt;最后补充一个在UCloud平台升级磁盘大小的说明&lt;/h3&gt;&lt;p&gt;在平台完成升级磁盘操作后，并不能直接在系统中使用。因为磁盘扩容的操作相当于是对物理硬盘进行了扩展，由于是在物理硬件层次的扩展，新增加的磁盘其实是没有进行格式化的，通过前面的说明我们可以知道没有进行格式化的磁盘在操作系统中是无法使用的，因此我们需要在系统中对扩容的磁盘进行一个格式化的操作才能使用。格式化操作一般是会丢失数据的，我们这里使用的resize2fs命令相当于是在不影响之前部分的前提下对新的磁盘空间进行格式化。&lt;br&gt;在Linux的主机上进行扩容大概步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查看文件系统类型&lt;/li&gt;
&lt;li&gt;卸载文件系统&lt;/li&gt;
&lt;li&gt;运行磁盘检查程序&lt;/li&gt;
&lt;li&gt;格式化扩容的分区&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;命令如下&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;df -ihT #&amp;#26597;&amp;#30475;&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#20998;&amp;#21306;&amp;#31867;&amp;#22411;&amp;#10;umount /dev/vdb #&amp;#21368;&amp;#36733;vdb&amp;#20998;&amp;#21306;&amp;#10;e2fsck -f /dev/vdb #&amp;#30913;&amp;#30424;&amp;#26816;&amp;#26597;&amp;#65292;&amp;#21518;&amp;#19968;&amp;#26465;&amp;#21629;&amp;#20196;&amp;#20197;&amp;#36825;&amp;#26465;&amp;#21629;&amp;#20196;&amp;#20026;&amp;#21069;&amp;#25552;&amp;#10;resize2fs /dev/vdb #&amp;#26684;&amp;#24335;&amp;#21270;&amp;#25193;&amp;#23637;&amp;#30340;&amp;#20998;&amp;#21306;&amp;#10;mount /dev/vdb #&amp;#25346;&amp;#36733;&amp;#20998;&amp;#21306;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;http://vbird.dic.ksu.edu.tw/linux_basic/0230filesystem.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux 磁盘与文件系统管理&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/aix/library/0907_unixdisk_litt/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unix/Linux 系统自动化管理: 磁盘管理篇（上）&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博客是在系统的层次对Linux下磁盘做一个说明的，磁盘是计算机系统中非常基础的一个硬件，对于磁盘的管理和使用，操作系统完成了管理的大部分工作，而使用部分由于每个人操作磁盘的目的不同，那么使用方法也就自然不同。文章中的大部分内容来自于鸟哥的Linux私房菜，在参考部分给出
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>单机Web服务器性能</title>
    <link href="http://zone.gaospot.com/2016/04/16/%E5%8D%95%E6%9C%BAWeb%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD/"/>
    <id>http://zone.gaospot.com/2016/04/16/单机Web服务器性能/</id>
    <published>2016-04-15T17:37:23.000Z</published>
    <updated>2016-04-15T17:38:01.311Z</updated>
    
    <content type="html">&lt;p&gt;当网站部署好之后，开始上线运行的时候。一开始可能一切都是正常的，慢慢的随着时间和访问量的增加，可能会出现一些比较明显的性能问题。一旦出现这样的问题，轻则影响用户访问速度，重则可能整个网站就瘫痪了，比如说有后端的应用，数据出现死锁等等情况是，这时一般整个网站一般都是不可用的。&lt;/p&gt;
&lt;p&gt;###1、 影响Web应用访问速度的因素 ###&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;网络延时&lt;br&gt;任何Web应用的使用者都要通过网络来访问应用，那么网络延时就成为了一个会影响Web应用访问速度的重要因素。从Web应用服务器到用户之间涉及到两端网络的情况，用户和服务器的网络不理想都会影响最终的访问速度，这里用户和服务器的网络情况主要指的就是用户和服务器网络带宽问题，检查的工具一般是ping。一般来说如果用户端网络有问题，那么用户访问任何网站都是卡的，验证方法是通过ping大型网站来测试，比如说百度，一般这样的网站都是使用了cdn技术的，如果ping延迟非常大，比如说上百毫秒，基本上可以认为是本地网络有问题了。而服务器网络问题的检测可以通过17ce这样的测试网站的分布式ping来实现，因为需要测试是否是服务端问题，我们一般希望能有较多访问点来进行测试，如果全国各地的访问都是慢的，我们可以认为是服务器的网络有问题（首先要排除服务器处理速度没有问题）。当然也有服务器网络和用户网络都是正常的情况。这时我们认为是服务器和用户之间存在单点网络故障。单点网络问题多出在运营商之间，由于国内各运营商互联互通问题导致的单点问题时有发生。检查这样问题的工具一般来说是使用mtr或者traceroute这样的网络链路检查的工具。当然以上一切问题的定位都可以借助神器tcpdump来实现，抓包一般来说对应定位网络问题非常有利。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;请求处理时间&lt;br&gt;这里涉及的就是服务器端的问题，我们假设网络都是正常的，且所有用户访问都会出现卡慢的现象。这里还假设主机是正常的，没有发生如oom，卡死等状况，只是单纯的由于服务器处理时间长导致的卡慢。由于一个web请求过来一般来说不是由于某个单纯的部分来完成这个请求的，而是会涉及到各个组件之间的一个相互配合问题。一般来说定位问题和解决的办法是分析各个组件日志来定位问题。针对服务器问题我们提出下面的解决方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u63D0_u5347_u670D_u52A1_u5668_u6027_u80FD_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u63D0_u5347_u670D_u52A1_u5668_u6027_u80FD_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;提升服务器性能方法&quot;&gt;&lt;/a&gt;提升服务器性能方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用缓存系统&lt;br&gt;使用如Redis等等key/value内存数据库可以有效的提升应用的性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用高性能数据库架构&lt;br&gt;常见的高性能数据库架构如主从复制和读写分离，以及对数据库进行水平和垂直划分等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用高性能的Web组件&lt;br&gt;这里推荐的是Nginx搭配php-fpm的组合，Nginx的特点就是轻量级，可以维护更多的http长连接。至于这两个软件的安装既可以采用源码安装，也可以使用系统的软件包管理器安装，这个取决于个人需要。这里推荐的测试工具是ab，是Apache自带的一个测试工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u76D1_u63A7_u670D_u52A1_u5668_u7684_u5404_u9879_u6307_u6807&quot;&gt;&lt;a href=&quot;#u76D1_u63A7_u670D_u52A1_u5668_u7684_u5404_u9879_u6307_u6807&quot; class=&quot;headerlink&quot; title=&quot;监控服务器的各项指标&quot;&gt;&lt;/a&gt;监控服务器的各项指标&lt;/h3&gt;&lt;p&gt;这里主要是介绍几个Linux下面常用的，用于监控服务器性能的几个工具。&lt;br&gt;top 宏观的获取服务器性能信息&lt;br&gt;vmstat和sar 服务器磁盘读写情况展现&lt;br&gt;netstat 查看网络服务，一般用来查看特点端口是否有监听&lt;/p&gt;
&lt;p&gt;注：这篇博客是根据《微信公众平台应用开发实践》这边书籍的第11章内容写成的，可以认为是一篇笔记&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;当网站部署好之后，开始上线运行的时候。一开始可能一切都是正常的，慢慢的随着时间和访问量的增加，可能会出现一些比较明显的性能问题。一旦出现这样的问题，轻则影响用户访问速度，重则可能整个网站就瘫痪了，比如说有后端的应用，数据出现死锁等等情况是，这时一般整个网站一般都是不可用的。
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Win2008搭建Web和FTP服务</title>
    <link href="http://zone.gaospot.com/2016/04/11/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFTP%E6%9C%8D%E5%8A%A1/"/>
    <id>http://zone.gaospot.com/2016/04/11/Win2008搭建Web和FTP服务/</id>
    <published>2016-04-10T18:32:55.000Z</published>
    <updated>2016-04-10T18:37:12.812Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;本篇博客介绍的是在UCloud的云主机上通过IIS搭建Web和FTP服务器的过程，这里的Web服务器只支持最简单的html页面，如果需要其他支持，请自行安装所需软件。&lt;/p&gt;
&lt;p&gt;###创建和连接主机&lt;br&gt;&lt;strong&gt;1、创建win2008的主机&lt;/strong&gt;&lt;br&gt;在UCloud平台上创建win2008主机的过程和创建其他系统主机过程一样，但是要注意的是，默认的镜像不是Windows系统的，所以在安装过程中需要注意选择下Windows系统的镜像。这里使用的是Win2008 R2 64bit的一个镜像系统。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A1.png&quot; alt=&quot;Win2008搭建Web和FTP服务&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、使用mstsc连接管理主机&lt;/strong&gt;&lt;br&gt;UCloud平台提供了Web连接主机的方式，这种连接方式并不推荐用来管理主机，而比较适合在应急的情况下登录，检查主机状况，由于控制登录与主机网络状态是无关的，这种登录方式在主机网络异常的情况下，可以非常方便的通过其登录主机检查主机的网络设置。在正常情况下我们还是使用mstsc（远程桌面连接）来管理主机。首先打开远程桌面软件，通过按下win key + r，然后输入mstsc就可以了。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A11.png&quot; alt=&quot;Win2008搭建Web和FTP服务&quot;&gt;&lt;/p&gt;
&lt;p&gt;打开远程连接界面后，下面有个小三角形，点击打开更大选项，输入相关参数。输入示例如下：&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A12.png&quot; alt=&quot;Win2008搭建Web和FTP服务&quot;&gt;&lt;/p&gt;
&lt;p&gt;输入都正确以后，会弹出一个关于正式的对话框，点是忽略这个证书问题就可以了，然后就能顺利的连接上主机。&lt;/p&gt;
&lt;p&gt;###创建Web和ftp服务器&lt;br&gt;1、服务器登录上去之后会自动打开服务器管理界面。第一件事先添加一个角色。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A13.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、点击下一步，勾选Web服务器（IIS）这一项，然后点击下一步。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A14.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;3、由于这里还要安装ftp服务，把ftp相关的勾选上。在点击下一步就会开始安装了，安装过程很快，大概一两分钟的样子。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A15.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;4、添加完角色之后就可以添加站点了，右键点击箭头标出的地方，然后选择新建站点就可以了。其实这个时候就可以直接访问了，可以访问到默认站点。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A16.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;5、站点的设置。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A17.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;6、本地访问测试默认站点。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A18.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;7、下面的步骤介绍的是建立ftp服务器的过程，首先新建一个ftp站点。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A19.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;8、ftp站点的基本设置，站点名和站点（物理）路径。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A110.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;9、ssl设置，由于我没有证书，没办法使用https模式。所以ssl这个选无。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A111.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;10、访问和授权设置。这里不限制用户访问，给所有访问这个ftp站点的用户读取站点文件的权限。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A112.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;11、在外网测试ftp服务器，这里假设防火墙端口已经打开。在UCloud平台上，Windows内部的防火墙默认是关闭了的，但是平台提供的防火墙是开着的，而且默认防火墙21端口是没有打开的。如果不清楚防火墙打开过程可以参考下面的说明。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A113.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;###打开外网防火墙&lt;br&gt;打开外网防火墙的说明在之前博客中有介绍，这里就不在赘述，过程都是一样的，具体参考前面的博客&lt;a href=&quot;http://zone.gaospot.com/2016/03/30/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95/&quot;&gt;UCloud上LAMP小型网站搭建与测试&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;参考：&lt;a href=&quot;http://ce.sysu.edu.cn/hope/Item/91192.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows server 2008 r2搭建FTP服务器&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;本篇博客介绍的是在UCloud的云主机上通过IIS搭建Web和FTP服务器的过程，这里的Web服务器只支
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>UCloud上LNMP小型网站搭建</title>
    <link href="http://zone.gaospot.com/2016/04/01/UCloud%E4%B8%8ALNMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    <id>http://zone.gaospot.com/2016/04/01/UCloud上LNMP小型网站搭建/</id>
    <published>2016-03-31T18:22:24.000Z</published>
    <updated>2016-04-02T10:49:01.426Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u76EE_u5F55&quot;&gt;&lt;a href=&quot;#u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;LNMP环境搭建&lt;/li&gt;
&lt;li&gt;打开UCloud防火墙&lt;/li&gt;
&lt;li&gt;Discuz!安装&lt;/li&gt;
&lt;li&gt;应用测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;这篇博客是之前&lt;a href=&quot;http://zone.gaospot.com/2016/03/30/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95/&quot;&gt;UCloud上LAMP小型网站搭建与测试&lt;/a&gt;的姐妹篇，重点在于通过介绍在UCloud云主机上安装Discuz!来介绍LNMP环境的搭建，这里Discuz!可以换成任何用户自己的应用，过程都是类似的。&lt;/p&gt;
&lt;h3 id=&quot;LNMP_u73AF_u5883_u642D_u5EFA&quot;&gt;&lt;a href=&quot;#LNMP_u73AF_u5883_u642D_u5EFA&quot; class=&quot;headerlink&quot; title=&quot;LNMP环境搭建&quot;&gt;&lt;/a&gt;LNMP环境搭建&lt;/h3&gt;&lt;p&gt;关于主机的创建，登录和管理可以参考之前的那篇博客，这里直接就介绍在主机上安装NMP环境，安装步骤如下：&lt;/p&gt;
&lt;p&gt;1、Uhost环境&lt;br&gt;CentOS-6.5 x86_64&lt;/p&gt;
&lt;p&gt;2、安装NMP&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# yum install -y nginx mysql-server php php-gd php-xml php-fpm php-mysql php-bcmath php-mbstring php-mcrypt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、配置Nginx&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# vim /etc/nginx/nginx.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user nginx;&amp;#10;worker_processes  1;&amp;#10;error_log /var/log/nginx/error.log;&amp;#10;pid /var/run/nginx.pid;&amp;#10;&amp;#10;events &amp;#123;&amp;#10;    use epoll;&amp;#10;    worker_connections 1024;&amp;#10;&amp;#125;&amp;#10;&amp;#10;http &amp;#123;&amp;#10;    include /etc/nginx/mime.types;&amp;#10;    default_type application/octet-stream;&amp;#10;    sendfile on;&amp;#10;    tcp_nopush on;&amp;#10;    keepalive_timeout 65;&amp;#10;    gzip on;&amp;#10;    include /etc/nginx/conf.d/*.conf;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加虚拟主机&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# vim/etc/nginx/conf.d/virtual.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&amp;#10;    listen       80;&amp;#10;    server_name  www.domain.com;&amp;#10;    root /var/www/html;&amp;#10;    index index.html index.htm index.php;&amp;#10;    access_log  /var/log/nginx/domain-acess.log;&amp;#10;&amp;#10;    location ~ .*\.php?$ &amp;#123;&amp;#10;        include fastcgi.conf;&amp;#10;        fastcgi_pass 127.0.0.1:9000;&amp;#10;        fastcgi_index index.php;&amp;#10;        access_log off;&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$ &amp;#123;&amp;#10;        expires 15d;&amp;#10;    &amp;#125;&amp;#10;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4、配置PHP&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# sed -i &#39;s#;date.timezone =#date.timezone = Asia/Shanghai#&#39; /etc/php.ini&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# sed -n &#39;s#user = apache#user = nginx#p&#39; /etc/php-fpm.d/www.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# sed -n &#39;s#group = apache#group = nginx#p&#39; /etc/php-fpm.d/www.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5、启动服务&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# service nginx start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# chkconfig nginx on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# service php-fpm start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# chkconfig nginx on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# echo “&amp;lt;?php phpinfo();” &amp;gt; /var/www/html/phpinfo.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开浏览器，输入下面URL(记得解析DNS，或者修改hosts文件)&lt;br&gt;&lt;a href=&quot;http://www.domain.com/phpinfo.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.domain.com/phpinfo.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、启动MySQL&lt;br&gt;MySQL默认有生成几个配置文件，可以根据自己的硬件情况把文件复制到/etc/my.cnf&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ls /usr/share/mysql/*.cnf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# service mysqld start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# chkconfig mysqld on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6253_u5F00UCloud_u9632_u706B_u5899&quot;&gt;&lt;a href=&quot;#u6253_u5F00UCloud_u9632_u706B_u5899&quot; class=&quot;headerlink&quot; title=&quot;打开UCloud防火墙&quot;&gt;&lt;/a&gt;打开UCloud防火墙&lt;/h3&gt;&lt;p&gt;UCloud平台防火墙的打开可以参考之前那篇博客&lt;a href=&quot;http://zone.gaospot.com/2016/03/30/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95/&quot;&gt;UCloud上LAMP小型网站搭建与测试&lt;/a&gt;，上面有详细的说明。平台上面默认的防火墙是不允许修改规则的，所以要添加新的规则，需要新建防火墙。&lt;/p&gt;
&lt;h3 id=&quot;Discuz_21_u5B89_u88C5&quot;&gt;&lt;a href=&quot;#Discuz_21_u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;Discuz!安装&quot;&gt;&lt;/a&gt;Discuz!安装&lt;/h3&gt;&lt;p&gt;1、下载Discuz，并解压。将upload 这个目录下面的所有文件拷贝到网站根目录，或者是其他二级目录也行。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# wget http://download.comsenz.com/DiscuzX/3.1/Discuz_X3.1_SC_UTF8.zip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、文件成功解压到网站根目录后，通过在浏览器中运行安装向导来安装Discuz系统。然后一步步按提示向下安装。&lt;/p&gt;
&lt;p&gt;3、安装好后就可以在浏览器访问您的论坛了！&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.discuz.net/thread-3456887-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Discuz!X3.1 全新安装图文教程 &lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5E94_u7528_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u5E94_u7528_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;应用测试&quot;&gt;&lt;/a&gt;应用测试&lt;/h3&gt;&lt;p&gt;测试不是必要的过程，但为了更好的掌握应用的负载能力还是建议进行测试的，以对应用状况有比较好的了解。测试工具和测试方法网上有很多，可以自行Google，也可以参考上面一篇博客介绍的方法。最后说一点是没有完全正确的测试，测试只能模拟高并发是的情况，但与真实访问时候还是有差距的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u76EE_u5F55&quot;&gt;&lt;a href=&quot;#u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;LNMP环境搭建&lt;/li&gt;
&lt;li&gt;打开UCloud防火墙&lt;/li&gt;
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>UCloud上LAMP小型网站搭建与测试</title>
    <link href="http://zone.gaospot.com/2016/03/30/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95/"/>
    <id>http://zone.gaospot.com/2016/03/30/UCloud上LAMP小型网站搭建与测试/</id>
    <published>2016-03-30T09:57:23.000Z</published>
    <updated>2016-03-31T15:38:37.121Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u76EE_u5F55&quot;&gt;&lt;a href=&quot;#u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;LAMP环境搭建&lt;/li&gt;
&lt;li&gt;打开UCloud防火墙&lt;/li&gt;
&lt;li&gt;WordPress安装&lt;/li&gt;
&lt;li&gt;应用测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;本篇博客旨在通过介绍搭建一个WordPress博客的过程介绍在UCloud的云主机（UHOST）上搭建单机Web服务的过程。WordPress作为一个著名的CMS系统，有着广泛的应用。其作为博客也是非常常见的用法。所以这里使用WordPress作为示例软件来说明。在UHost上安装LAMP环境和在其他的linux下安装过程类似，但是要&lt;strong&gt;注意UCloud平台提供的防火墙，记得开放相应端口&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;LAMP_u73AF_u5883_u642D_u5EFA&quot;&gt;&lt;a href=&quot;#LAMP_u73AF_u5883_u642D_u5EFA&quot; class=&quot;headerlink&quot; title=&quot;LAMP环境搭建&quot;&gt;&lt;/a&gt;LAMP环境搭建&lt;/h3&gt;&lt;p&gt;在UCloud上安装Linux主机，这里安装的是Centos6.5 x64系统。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建主机，根据您需要选择相应的机房，在相应的机房下创建主机。一开始只是测试用的话，可以选择按需付费，在决定使用后在改成月付或者年付，主机和网络的配置选默认配置。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%951.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;是xshell登录管理云主机，xshell是一个ssh远程管理工具，针对个人用户是免费的。ssh工具还有其他的如，putty和secureCRT等，大家可以根据自己的需求和爱好选用。使用xshell的话，首先创建一个会话过程如下所示，在后面进行连接是，会提示保存证书，然后输入linux系统的账号和密码就可以连接到主机，然后通过ssh来管理主机了。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%952.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;下面介绍安装AMP的过程，安装方法是通过在shell中执行下面的命令实现的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安装AMP&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&amp;#10;# yum install -y nginx mysql-server php php-gd php-xml php-mysql php-bcmath php-mbstring php-mcrypt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 修改PHP的时区&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# sed -i &amp;#39;s#;date.timezone =#date.timezone = Asia/Shanghai#&amp;#39; /etc/php.ini&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置Apache&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# rm -rf /etc/httpd/conf.d/README&amp;#10;# rm -rf /etc/httpd/conf.d/welcome.conf&amp;#10;# vim /etc/httpd/conf.d/vhost.conf&amp;#10;&amp;#28155;&amp;#21152;&amp;#22914;&amp;#19979;&amp;#20869;&amp;#23481;&amp;#65306;&amp;#10;&amp;#60;VirtualHost *:80&amp;#62;&amp;#10;ServerName www.domain.com&amp;#10;DocumentRoot /var/www/html/&amp;#10;    ErrorLog /var/log/httpd/error.log&amp;#10;    CustomLog /var/log/httpd/access.log common&amp;#10;&amp;#60;/VirtualHost&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动Apache&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# service httpd restart&amp;#10;# chkconfig httpd on&amp;#10;# echo &amp;#8220;&amp;#60;?php phpinfo();&amp;#8221; &amp;#62; /var/www/html/phpinfo.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开浏览器，输入下面URL(记得解析DNS，或者修改hosts文件)&lt;br&gt;&lt;a href=&quot;http://www.domain.com/phpinfo.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.domain.com/phpinfo.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;启动MySQL&lt;br&gt;MySQL默认有生成几个配置文件，可以根据自己的硬件情况把文件复制到/etc/my.cnf&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ls /usr/share/mysql/*.cnf&amp;#10;# service mysqld start&amp;#10;# chkconfig mysqld on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6253_u5F00UCloud_u9632_u706B_u5899&quot;&gt;&lt;a href=&quot;#u6253_u5F00UCloud_u9632_u706B_u5899&quot; class=&quot;headerlink&quot; title=&quot;打开UCloud防火墙&quot;&gt;&lt;/a&gt;打开UCloud防火墙&lt;/h3&gt;&lt;p&gt;UCloud平台提供了一个防火墙，在控制台打开，初次使用的很容易忽略这个问题，导致业务无法再外网访问。基本的方法是创建一个新的防火墙，然后绑定到主机上。防火墙字网络UNET下，找到外网防火墙。点创建防火墙按钮，创建一个新的防火墙。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%953.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;创建防火墙规则&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%954.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;在主机页面将新建的防火墙绑定到主机。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%955.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;WordPress_u5B89_u88C5_uFF08_u53C2_u8003_u81EAWordPress_u5B98_u65B9_u6587_u6863_uFF09&quot;&gt;&lt;a href=&quot;#WordPress_u5B89_u88C5_uFF08_u53C2_u8003_u81EAWordPress_u5B98_u65B9_u6587_u6863_uFF09&quot; class=&quot;headerlink&quot; title=&quot;WordPress安装（参考自WordPress官方文档）&quot;&gt;&lt;/a&gt;WordPress安装（&lt;a href=&quot;https://codex.wordpress.org/zh-cn:%E5%AE%89%E8%A3%85_WordPress&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考自WordPress官方文档&lt;/a&gt;）&lt;/h3&gt;&lt;p&gt;1、下载并解压缩WordPress程序安装包。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# wget http://wordpress.org/latest.tar.gz&amp;#10;# tar -xzvf latest.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、在你的网页服务器上为WordPress创建一个数据库, 并且也创建一个MySQL 拥有所有权限可以进入和修改的用户.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysql -u adminusername -p&amp;#10;Enter password:&amp;#10;Welcome to the MySQL monitor.  Commands end with ; or \g.&amp;#10;Your MySQL connection id is 5340 to server version: 3.23.54&amp;#10; &amp;#10;Type &amp;#39;help;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the buffer.&amp;#10; &amp;#10;mysql&amp;#62; CREATE DATABASE databasename;&amp;#10;Query OK, 1 row affected (0.00 sec)&amp;#10; &amp;#10;mysql&amp;#62; GRANT ALL PRIVILEGES ON databasename.* TO &amp;#34;wordpressusername&amp;#34;@&amp;#34;hostname&amp;#34;&amp;#10;    -&amp;#62; IDENTIFIED BY &amp;#34;password&amp;#34;;&amp;#10;Query OK, 0 rows affected (0.00 sec)&amp;#10;  &amp;#10;mysql&amp;#62; FLUSH PRIVILEGES;&amp;#10;Query OK, 0 rows affected (0.01 sec)&amp;#10;&amp;#10;mysql&amp;#62; EXIT&amp;#10;Bye&amp;#10;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、 重命名 wp-config-sample.php 文件为 wp-config.php.用你最喜欢的 文本编辑器 打开 wp-config.php ，填上你的数据库信息。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# mv wp-config-sample.php wp-config.php&amp;#10;# vim wp-config.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4、 把WordPress文件夹放在你服务器上想要放的地方:如果你想把通过顶级域名来访问你的WordPress博客 (例如 &lt;a href=&quot;http://example.com/),移动或上传所有解压后的WordPress文件夹里面的文件(但不包括WordPress文件夹本身&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.com/),移动或上传所有解压后的WordPress文件夹里面的文件(但不包括WordPress文件夹本身&lt;/a&gt;) 到你服务器的根目录下.&lt;/p&gt;
&lt;p&gt;5、 在你喜欢的浏览器中访问wp-admin/install.php 以便启动安装程序.如果你在根目录下安装WordPress,，你应该访问: &lt;a href=&quot;http://example.com/wp-admin/install.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.com/wp-admin/install.php&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Web_u6027_u80FD_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#Web_u6027_u80FD_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;Web性能测试&quot;&gt;&lt;/a&gt;Web性能测试&lt;/h3&gt;&lt;p&gt;PS：网站性能压力测试是性能调优过程中必不可少的一环。只有让服务器处在高压情况下才能真正体现出各种设置所暴露的问题。Apache中有个自带的，名为ab的程序，可以对Apache或其它类型的服务器进行网站访问压力测试。&lt;/p&gt;
&lt;p&gt;ApacheBench命令原理：&lt;/p&gt;
&lt;p&gt;ab命令会创建很多的并发访问线程，模拟多个访问者同时对某一URL地址进行访问。它的测试目标是基于URL的，因此，既可以用来测试Apache的负载压力，也可以测试nginx、lighthttp、tomcat、IIS等其它Web服务器的压力。&lt;/p&gt;
&lt;p&gt;ab命令对发出负载的计算机要求很低，既不会占用很高CPU，也不会占用很多内存，但却会给目标服务器造成巨大的负载，其原理类似CC攻击。自己测试使用也须注意，否则一次上太多的负载，可能造成目标服务器因资源耗完，严重时甚至导致死机。&lt;/p&gt;
&lt;p&gt;ApacheBench用法详解：&lt;/p&gt;
&lt;p&gt;在Linux系统，一般安装好Apache后可以直接执行；&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ab -n 4000 -c 1000 http://www.ha97.com/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是Win系统下，打开cmd命令行窗口，cd到apache安装目录的bin目录下；&lt;/p&gt;
&lt;p&gt;-n后面的4000代表总共发出4000个请求；-c后面的1000表示采用1000个并发（模拟1000个人同时访问），后面的网址表示测试的目标URL。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.ha97.com/4617.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web性能压力测试工具之ApacheBench（ab）详解&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u76EE_u5F55&quot;&gt;&lt;a href=&quot;#u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;LAMP环境搭建&lt;/li&gt;
&lt;li&gt;打开UCloud防火墙&lt;/li&gt;
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Redmine介绍</title>
    <link href="http://zone.gaospot.com/2016/02/17/Redmine%E4%BB%8B%E7%BB%8D/"/>
    <id>http://zone.gaospot.com/2016/02/17/Redmine介绍/</id>
    <published>2016-02-17T12:01:53.000Z</published>
    <updated>2016-03-31T15:38:21.930Z</updated>
    
    <content type="html">&lt;p&gt;每天记Redmine是我现在的工作内容之一，之前一直没有深入的了解Redmine究竟是用来干嘛的的，直到最近看到有人分享了一篇&lt;a href=&quot;http://www.jianshu.com/p/cd7a12fa09bb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《最佳工程实践－基于Redmine的项目管理平台》&lt;/a&gt;的文章，于是对Redmine这个东西又起了一些兴趣。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Redmine是一个基于web免费且开源的项目管理和问题追踪工具。它一些用户管理多个项目已经和他相关的子项目。它的特点包括每一个项目的wikis和论坛，时间追踪，和灵活的基于角色的访问控制。它包括日历和甘特图去对项目和他们的期限提供可视化视角。Redmine正好了多种版本控制系统并且包括了一个库浏览工具和diff查看器。——引用自Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过《最佳工程实践－基于Redmine的项目管理平台》这篇文章，认识了一个叫做&lt;a href=&quot;https://bitnami.com/stack/redmine&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bitnami&lt;/a&gt; 的。这上面提供了一个安装Redmine的集成环境，并且还提供了已经安装好Redmine的VMware镜像。不知道什么时候会不会提供docker镜像：）。&lt;/p&gt;
&lt;p&gt;bitnami上提供了Redmine试用，bitnami会自动在aws上安装好Redmine，然后会提供给你一个连接，直接使用就可以了。如果想自己安装Redmine可以安装bitnami官方提供的教程。&lt;/p&gt;
&lt;h2 id=&quot;u5B89_u88C5_u8FC7_u7A0B&quot;&gt;&lt;a href=&quot;#u5B89_u88C5_u8FC7_u7A0B&quot; class=&quot;headerlink&quot; title=&quot;安装过程&quot;&gt;&lt;/a&gt;安装过程&lt;/h2&gt;&lt;p&gt;下载Redmine安装包&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://downloads.bitnami.com/files/stacks/redmine/&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/bitnami-redmine-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;-linux-x64-installer.run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod u+x bitnami-redmine-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;-linux-x64-installer.run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./bitnami-redmine-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;-linux-x64-installer.run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;依照上面的步骤一步一步下来就可以安装Redmine了。安装完之后可以安装插件，更新数据。也可以直接访问。&lt;/p&gt;
&lt;h2 id=&quot;u8BBF_u95EE&quot;&gt;&lt;a href=&quot;#u8BBF_u95EE&quot; class=&quot;headerlink&quot; title=&quot;访问&quot;&gt;&lt;/a&gt;访问&lt;/h2&gt;&lt;p&gt;在服务器本地可以在&lt;a href=&quot;http://127.0.0.1:80访问，如果是在公网环境下可以通过服务器的公网ip访问。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:80访问，如果是在公网环境下可以通过服务器的公网ip访问。&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;每天记Redmine是我现在的工作内容之一，之前一直没有深入的了解Redmine究竟是用来干嘛的的，直到最近看到有人分享了一篇&lt;a href=&quot;http://www.jianshu.com/p/cd7a12fa09bb&quot; target=&quot;_blank&quot; rel=&quot;exter
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo —— 我的个人博客搭建记录</title>
    <link href="http://zone.gaospot.com/2016/01/15/Hello%20Hexo%20%E2%80%94%E2%80%94%20%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>http://zone.gaospot.com/2016/01/15/Hello Hexo —— 我的个人博客搭建记录/</id>
    <published>2016-01-15T09:49:42.000Z</published>
    <updated>2016-05-05T12:14:31.673Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;是一个Node编写的，可以根据Markdown语法生成静态文件的博客系统，这篇博客是根据网上教程，使用Hexo + Github搭建个人博客过程的记录。Hexo搭建过程非常简单，官方文档写的非常清楚。这篇 博客的写作原因仅仅在于记录自己的安装过程。作为一个记录。&lt;/p&gt;
&lt;h3 id=&quot;u524D_u63D0_u6761_u4EF6&quot;&gt;&lt;a href=&quot;#u524D_u63D0_u6761_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;p&gt;Hexo的安装过程依赖Node.js和Git，所以安装Hexo前需要先安装着两个软件。他们的下载地址可以参考下面的链接。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/git-scm.com&quot;&gt;Git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装过程非常简单，也就是下载两个软件包安装就可以了。其中node.js的安装，可以先安装nvm，通过nvm来安装node.js。&lt;/p&gt;
&lt;h3 id=&quot;Hexo_u7684_u5B89_u88C5&quot;&gt;&lt;a href=&quot;#Hexo_u7684_u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;Hexo的安装&quot;&gt;&lt;/a&gt;Hexo的安装&lt;/h3&gt;&lt;p&gt;hexo安装可以在命令行下完成。通过借助使用git bash来执行下列命令，git bash的启动在任意一个目录中右键，找到git bash点击就可运行。这个方法在使用github管理代码的时候，生成本地证书的时候还会用到。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u4F7F_u7528Hexo_u5EFA_u7AD9&quot;&gt;&lt;a href=&quot;#u4F7F_u7528Hexo_u5EFA_u7AD9&quot; class=&quot;headerlink&quot; title=&quot;使用Hexo建站&quot;&gt;&lt;/a&gt;使用Hexo建站&lt;/h3&gt;&lt;p&gt;首先创建好需要存放站点的目录，在这里是&lt;folder&gt;。通过下面命令可以在&lt;folder&gt;目录下生成建站所需的文件&lt;/folder&gt;&lt;/folder&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u4F7F_u7528git_u7BA1_u7406_u4EE3_u7801&quot;&gt;&lt;a href=&quot;#u4F7F_u7528git_u7BA1_u7406_u4EE3_u7801&quot; class=&quot;headerlink&quot; title=&quot;使用git管理代码&quot;&gt;&lt;/a&gt;使用git管理代码&lt;/h3&gt;&lt;p&gt;修改&lt;folder&gt;目录下的_config.yml文件，添加下面行，表示使用git来管理代码，并把代码托管在github上。当然首先需要您在github上创建yourname.github.io项目。这里的托管方式借鉴网上一些方法，使用master分支来管理静态网站。code分支来管理生成静态文件的代码。&lt;/folder&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&amp;#10;  type: git&amp;#10;  repo: git@github.com:yourname/yourname.github.io.git&amp;#10;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u628A_u4EE3_u7801_u90E8_u7F72_u5230github&quot;&gt;&lt;a href=&quot;#u628A_u4EE3_u7801_u90E8_u7F72_u5230github&quot; class=&quot;headerlink&quot; title=&quot;把代码部署到github&quot;&gt;&lt;/a&gt;把代码部署到github&lt;/h3&gt;&lt;p&gt;运行下面命令就可以将代码部署到github了。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u8BBF_u95EEyourname-github-io_u89C2_u5BDF_u6548_u679C&quot;&gt;&lt;a href=&quot;#u8BBF_u95EEyourname-github-io_u89C2_u5BDF_u6548_u679C&quot; class=&quot;headerlink&quot; title=&quot;访问yourname.github.io观察效果&quot;&gt;&lt;/a&gt;访问yourname.github.io观察效果&lt;/h3&gt;&lt;p&gt;参考：&lt;a href=&quot;http://ibruce.info/2013/11/22/hexo-your-blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo你的博客&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;是一个Node编写的，可以根据Markdown语法生成静态文件的博客系统，这篇博客是根据网上教程，使用Hexo + Github搭建个人博客过程
    
    </summary>
    
    
      <category term="个人总结" scheme="http://zone.gaospot.com/tags/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
  <entry>
    <title>Centos6.5安装mysql5.6</title>
    <link href="http://zone.gaospot.com/2015/11/19/Centos6.5%E5%AE%89%E8%A3%85mysql5.6/"/>
    <id>http://zone.gaospot.com/2015/11/19/Centos6.5安装mysql5.6/</id>
    <published>2015-11-18T22:41:00.000Z</published>
    <updated>2016-04-29T07:32:08.535Z</updated>
    
    <content type="html">&lt;p&gt;centos6.5源默认的MySQL好像是5.1。如果需要安装其他版本的mysql可以通过下载mysql相应版本的rpm包来实现。这篇博客记录的就是使用yum在Centos6.5版本的系统上安装MySQL5.6。安装包是”架构相关的”因此应用需要32位（i386）或者64位（x86_64）的操作系统。&lt;/p&gt;
&lt;p&gt;操作时具体的环境&lt;br&gt;操作系统：Centos6.5&lt;br&gt;架构：X86_64&lt;/p&gt;
&lt;p&gt;依照下面的步骤可以安装Mysql5.6&lt;br&gt;第一步：登入到服务器中，并且下载yum的rpm包。（URL：&lt;a href=&quot;http://dev.mysql.com/downloads/repo/）&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dev.mysql.com/downloads/repo/）&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install wget  &amp;#10;wget http://repo.mysql.com/mysql-community-release-el6-5.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第二步：安装下载的rpm包&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;rpm -ivh mysql-community-release-el6-5.noarch.rpm&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第三步：在命令行中安装mysql5.6，使用yum的方式安装，依赖的软件包会一并安装。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;yum install mysql-server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第四步：安装完mysql服务器之后使用命令把服务启动起来&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/etc/init.d/mysqld start  &amp;#10;&amp;#25110;&amp;#32773;&amp;#10;&amp;#10;service mysqld start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;第五步：因为mysql服务器默认安装时没有密码的，必须从新设置mysql的密码&lt;br&gt;可以使用下面的命令来完成一系列的安全设置&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mysql_secure_installation  &amp;#10;&amp;#20063;&amp;#21487;&amp;#20197;&amp;#20351;&amp;#29992;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#26041;&amp;#27861;&amp;#10;&amp;#10;mysql -u root  &amp;#10;&amp;#10;mysql&amp;#62; use mysql;  &amp;#10;mysql&amp;#62; update user set password=PASSWORD(&amp;#34;GIVE-NEW-ROOT-PASSWORD&amp;#34;) where User=&amp;#39;root&amp;#39;;  &amp;#10;mysql&amp;#62; flush privileges;  &amp;#10;mysql&amp;#62; quit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;自此，mysql便安装完成了。过程还是非常简单的，做个记录供以后回顾。下面是mysql的一些基础知识。&lt;/p&gt;
&lt;p&gt;首先一点要说的是数据库和数据库实例的区别，他们两者之间的区别让我想到了程序和进程之间的区别，其实他们之间的区别是一样的。数据库就是指静态的在文件系统上存在的文件，而数据库实例指的则是运行在内存中的数据库后台线程和数据的内存区。这就像程序一般我们是讲静态的程序文件，而进程则是讲程序在内存中运行的状态。关于数据库和实例的定义这里借用《MySQL技术内幕》这本书中的相关说明：&lt;/p&gt;
&lt;p&gt;数据库：物理操作系统文件或其他形式文件类型的集合。在Mysql数据库中，数据库文件可以是frm，MYD，MYI，ibd结尾的文件。当使用NDB引擎时，数据库的文件可能不是操作系统上的文件，而是存放于内存之中的文件，但是定义仍然不变。&lt;br&gt;实例：Mysql数据库由后台线程以及一个共享内存区组成。共享内存可以被运行的后台线程所共享。需要牢记的是，数据库才是真正操作数据库文件的。&lt;/p&gt;
&lt;p&gt;Mysql进程：mysql被设计为一个但进程多线程架构的数据库。在linux系统中，创建进程所需的花销要远大于创建线程。进程的创建需要复制整个进程的所有数据，而新建线程的数据如文件描述符等是共享的。mysql在linux系统只会有一个进程，可以使用ps命令确认。&lt;/p&gt;
&lt;p&gt;ps -ef | grep mysqld&lt;br&gt;1&lt;br&gt;1&lt;br&gt;配置文件：当Mysql启动时，会去配置文件，然后根据配置文件中的参数来启动数据库，Mysql有系列的配置文件，他会根据一定的顺序依次读取。后面读取的配置后覆盖前面相同的配置。可以使用下面的命令确认。&lt;/p&gt;
&lt;p&gt;mysql –help | grep my.cnf&lt;br&gt;1&lt;br&gt;1&lt;br&gt;数据文件：在配置文件中有数据所在位置的参数，具体参数名叫做datadir的。在linux中默认是/usr/local/mysql/data。这个参数是可以修改的，默认是一个链接。可以使用下面命令验证，在mysql命令行中使用bash命令，可以通过在命令前加system关键字的方式实现。&lt;/p&gt;
&lt;p&gt;SHOW VARIABLES LIKE ‘datadir’\G;&lt;br&gt;1&lt;br&gt;1&lt;br&gt;其他&lt;a href=&quot;http://dev.mysql.com/doc/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dev.mysql.com/doc/&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;centos6.5源默认的MySQL好像是5.1。如果需要安装其他版本的mysql可以通过下载mysql相应版本的rpm包来实现。这篇博客记录的就是使用yum在Centos6.5版本的系统上安装MySQL5.6。安装包是”架构相关的”因此应用需要32位（i386）或者64位
    
    </summary>
    
    
      <category term="数据库管理" scheme="http://zone.gaospot.com/tags/%E6%95%B0%E6%8D%AE%E5%BA%93%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习过程中的问题</title>
    <link href="http://zone.gaospot.com/2015/10/22/Yavide%E9%80%9A%E8%BF%87vim%E5%AE%9E%E7%8E%B0%E7%9A%84C%20C++%E7%8E%B0%E4%BB%A3IDE/"/>
    <id>http://zone.gaospot.com/2015/10/22/Yavide通过vim实现的C C++现代IDE/</id>
    <published>2015-10-22T15:42:00.000Z</published>
    <updated>2016-04-29T07:28:10.246Z</updated>
    
    <content type="html">&lt;p&gt;vim有大量为了开发者的插件，并且当他们整合在一起vim就变得比除此以外任何IDE都要强大。另外的优点就是资源消费少，和Eclipse或者NetBeans比较是它是最低的。这也使得基于vim的IDE的主意适合远程编程。Yavide是一个认真使用vim插件的新项目，并且尝试把所有的事情打包到一起。它也致力于提供一些在其他IDE不可用的功能。它现在的状态（在这篇文章写作时），Yavide看起来像是spf13-vim的下一步。Yavide仍然是在开发阶段并且还没看到他的第一个版本。然而，作者正致力于缺失和被要求的功能。&lt;br&gt;功能：&lt;br&gt;对C/C++做了捆绑和调整（计划支持Python和Java）&lt;br&gt;项目管理和项目浏览&lt;br&gt;当前单元定义的类符的概览（如，宏，结构体，类，方法，命名空间，等）&lt;br&gt;源码自动补全（后端有真实的C/C++编译器检查正确性）&lt;br&gt;源码导航（全自动后端标签系统保证最好的UI体验）&lt;br&gt;源码静态分析&lt;br&gt;版本控制集成（集成git）&lt;br&gt;构建工具（集成make）&lt;br&gt;为不同的操作定制快捷键&lt;br&gt;其他特性：&lt;br&gt;                语法高亮&lt;br&gt;                高亮当前行&lt;br&gt;                括号自动补全&lt;br&gt;                基于上下文的自动补全&lt;br&gt;                多文本编辑支持&lt;br&gt;                模板代码补全&lt;br&gt;                grep支持&lt;br&gt;                bash集成&lt;br&gt;                彩色主题支持&lt;/p&gt;
&lt;p&gt;插件&lt;br&gt;下面vim插件是在编写本文时已经集成了插件：&lt;br&gt;A&lt;br&gt;Clang_complete&lt;br&gt;NERDTree&lt;br&gt;NERDCommenter&lt;br&gt;SuerTab&lt;br&gt;Tagbar&lt;br&gt;vim-airline&lt;br&gt;UltiSnips&lt;br&gt;vim-autoclose&lt;br&gt;vim-fugitive&lt;br&gt;vim-gitgutter&lt;br&gt;vim-multiple-cursors&lt;br&gt;vim-pathogen&lt;/p&gt;
&lt;p&gt;安装&lt;br&gt;在基于Ubuntu的系统上安装Yavide，运行：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install build-essential vim-gnome python2.7 git libclang-dev python-dev &amp;#10;``` &amp;#10;&amp;#10;&amp;#36816;&amp;#34892;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#21629;&amp;#20196;&amp;#20174;git&amp;#20179;&amp;#24211;&amp;#20811;&amp;#38534;yavide&amp;#24182;&amp;#23433;&amp;#35013;&amp;#23427;&amp;#65306;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;$ cd ~/ &amp;amp;&amp;amp; git clone &lt;a href=&quot;https://github.com/JBakamovic/yavide.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/JBakamovic/yavide.git&lt;/a&gt;&lt;br&gt;$ cd yavide &amp;amp;&amp;amp; ./install.sh&lt;br&gt;```&lt;/p&gt;
&lt;p&gt;修改你想要安装yavide的位置。默认是/opt。yavide将创建它自己的目录并且安装文件在里面。&lt;/p&gt;
&lt;p&gt;在GitHub上：Yavide&lt;/p&gt;
&lt;p&gt;本文翻译自：YAVIDE: MODERN C C++ IDE OVER VIM&lt;/p&gt;
&lt;p&gt;为什么要弄这么一篇文章呢，因为我也想写一个包含各种我需要的插件的vim的IDE，按照我的想法来构建，遵守我的使用习惯，并且在我需要的任何时候我都可以快速的从github上clone下来，完成个性化ide的搭建。this all.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;vim有大量为了开发者的插件，并且当他们整合在一起vim就变得比除此以外任何IDE都要强大。另外的优点就是资源消费少，和Eclipse或者NetBeans比较是它是最低的。这也使得基于vim的IDE的主意适合远程编程。Yavide是一个认真使用vim插件的新项目，并且尝试把
    
    </summary>
    
    
      <category term="开发工具" scheme="http://zone.gaospot.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Linux和Android启动过程</title>
    <link href="http://zone.gaospot.com/2014/10/15/Linux%E5%92%8CAndroid%E5%90%AF%E5%8A%A8%E8%BF%87%E7%A8%8B/"/>
    <id>http://zone.gaospot.com/2014/10/15/Linux和Android启动过程/</id>
    <published>2014-10-15T11:36:00.000Z</published>
    <updated>2016-04-29T07:28:15.715Z</updated>
    
    <content type="html">&lt;p&gt;X86架构的PC机的启动过程&lt;br&gt;按下电源按钮的直到欢迎页出来之后，linux总共做的事可以分为五步来完成。&lt;br&gt;　　1、  BIOS加电自检：&lt;br&gt;　　加电自检，检测硬件设备。然后按照cmos上面的顺序来搜索处在活动状态下的可以引导的设备。可以是光驱、软盘、USB等。&lt;br&gt;　　2、  加载主引导加载程序（MBR）：&lt;br&gt;　　主引导程序是一个512字节的映像。包含一点机器码还有一个小的分区。&lt;br&gt;　　主引导程序的任务就是查找并且加载处在硬盘分区上的次引导程序。通过分区表查找活动分区，并将处在活动分区的次引导加载程序读取到内存里面运行。&lt;br&gt;　　3、  加载次引导记载程序（GRUB）&lt;br&gt;　　次引导加载程序只要就是加载linux内核。&lt;br&gt;　　上一阶段结束之后次引导加载程序就会在内存里面跑起来。就会出现GRUB图形界面，让用户选择加载什么样的内核。&lt;br&gt;　　4、  linux内核映像：&lt;br&gt;　　用户选择要加载的内核之后，次引导加载程序（GRUB）就会根据/boot/grub.conf配置文件中所设置的信息，从/boot/所在的分区上读取Linux内核映像，然后把内核映像加载到内存中并把控制权交给Linux内核。&lt;br&gt;　　linux内核获得控制权之后开始干自己的事&lt;br&gt;　　1、  检测硬件&lt;br&gt;　　2、  解压缩自己并安装必要驱动&lt;br&gt;　　3、  初始化与文件系统相关的虚拟设备，LVM或RAID&lt;br&gt;　　4、  装载根文件系统，挂在根目录下面&lt;br&gt;　　5、  完成之后，linux在进程空间里面加载init程序，下面轮到init干活&lt;br&gt;　　5、  init进程&lt;br&gt;　　init是所有进程的发起者和控制者，所有的进程都由此衍生。&lt;br&gt;　　init进程获得控制权之后，它会执行/etc/rc.d/rc.sysinit脚本，根据里面的代码设置环境变量、网络、启动swap、检查并挂载文件系统、执行其他初始化工作。&lt;/p&gt;
&lt;p&gt;　　至此，linux启动完成。&lt;/p&gt;
&lt;p&gt;ARM架构的Android启动过程&lt;br&gt;当按下开机键后，Android的启动过程可以大致分为以下四步。&lt;br&gt;1、引导ROM加载第一级引导加载程序：&lt;br&gt;位于引导ROM（read-only-memory）中的的特定代码会找到第一级的引导加载程序（即主引导加载程序），并将其加载到存储器中。引导ROM是一个ASIC芯片，其中含有固化在芯片中的代码。&lt;/p&gt;
&lt;p&gt;2、第一级引导加载程序利用存储器初始化程序启动第二级引导加载程序：&lt;br&gt;引导加载程序会检查安全标记是否开启（S-ON）。如果已经开启，那么引导程序只会加载被标记（官方）内核。如果安全标记是关闭的（S-OFF），那么引导加载程序就不在检查标记了。将安全标记设置为S-&lt;/p&gt;
&lt;p&gt;3、引导加载程序将Linux内核和定制化内容加载到存储器&lt;br&gt;引导加载程序将对硬件的控制权转给了Linux内核。Linux内核以及定制的软件和固件通常都打包在一起。这就是我们刷机的时候说的ROM。但其实刷入的地方（NAND存储器）并非是只读的。&lt;/p&gt;
&lt;p&gt; 4、最后一步是初始化（INIT）进程。INIT进程是设备上运行的其他所有进程的前提。他会初始化基础硬件房屋i设备功能所需的所有进程。他还会启动用来执行大多数应用程序的Dalvik虚拟机。&lt;/p&gt;
&lt;p&gt;总结：Linux和Android启动的区别&lt;br&gt;整个的来看Android的启动过程和Linux的启动过程大同小异，比毕竟他们大体上是一样的只是运行在不同架构的硬件上而已吧。&lt;/p&gt;
&lt;p&gt;补充:Recovery程序&lt;br&gt;Recovery程序是一段独立代码，它存在于一个引导分区中（正常的启动过程并不会启动到Recovery程序，我的理解），用来更新Android和维护设备。几乎所有的Android设备都有一个用来引导的Recovery程序。Recovery程序可以做很多有用的事情，比如讲设备恢复为出厂、清楚数据缓存以及安装Android操作系统的官方更新。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;X86架构的PC机的启动过程&lt;br&gt;按下电源按钮的直到欢迎页出来之后，linux总共做的事可以分为五步来完成。&lt;br&gt;　　1、  BIOS加电自检：&lt;br&gt;　　加电自检，检测硬件设备。然后按照cmos上面的顺序来搜索处在活动状态下的可以引导的设备。可以是光驱、软盘、USB等
    
    </summary>
    
    
      <category term="Linux学习" scheme="http://zone.gaospot.com/tags/Linux%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Linux下的局域网小工具</title>
    <link href="http://zone.gaospot.com/2014/10/06/Linux%E4%B8%8B%E7%9A%84%E5%B1%80%E5%9F%9F%E7%BD%91%E5%B0%8F%E5%B7%A5%E5%85%B7/"/>
    <id>http://zone.gaospot.com/2014/10/06/Linux下的局域网小工具/</id>
    <published>2014-10-06T07:36:00.000Z</published>
    <updated>2016-04-29T07:15:52.881Z</updated>
    
    <content type="html">&lt;p&gt;1、Sniffer工作原理&lt;br&gt;在本地网卡设置成“混杂”模式时，网卡会接收所有在网络中的所有的帧，这就构成了监听。如果局域网中的某一台主机被设置成了这种监听模式，它就成了一个Sniffer。根据Sniffer的原理，如果一个帧没有被发送到指定的网卡上，那么就无法监听到该帧。所以Sniffer所能监听的信息仅限于同一个物理网络内传输的数据。&lt;/p&gt;
&lt;p&gt;2、Sniffit的安装&lt;br&gt;在Debian可以使用软件源安装。命令如下：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo aptitude install sniffit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;当然也可以下载源文件进行编译安装。&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo tar -zxvf sniffit.version.tar.gz&amp;#10;cd sniffti.version&amp;#10;./configure &amp;#38;&amp;#38; make&amp;#10;./sniffit&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;3、TcpDump&lt;br&gt;安装过程类似于上面安装sniffit的过程。&lt;br&gt;不添加任何参数直接运行TcpDump，系统将监视网络中所有流过的数据包，这是TcpDump最简单的应用。&lt;/p&gt;
&lt;p&gt;tcpdump/libpcap的包过滤规则也支持更多通用分组表达式，在这些表达式中，包中的任意字节范围都可以使用关系或二进制操作符进行检查。对于字节范围表达，你可以使用以下格式：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;proto [ expr : size ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;“proto”可以是熟知的协议之一（如ip，arp，tcp，udp，icmp，ipv6），“expr”表示与指定的协议头开头相关的字节偏移量。有我们熟知的直接偏移量如tcpflags，也有取值常量如tcp-syn，tcp-ack或者tcp-fin。“size”是可选的，表示从字节偏移量开始检查的字节数量。&lt;/p&gt;
&lt;p&gt;只捕获TCP SYN包：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# tcpdump -i &amp;#60;interface&amp;#62; &amp;#34;tcp[tcpflags] &amp;#38; (tcp-syn) != 0&amp;#34;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;4、EtherApe&lt;br&gt;安装过程也类似于上面可以采用软件源安装和源码安装两种方式。&lt;br&gt;EtherApe是一个图形化的网络嗅探器。主要是用在验证主机与主机之间的连接，EtherApe能够图形化的显示网络目前所处的状态，且使用不同颜色的线来表示位于不同主机之间的连接，二通过连线的粗细可以判断主机数据量的大小。&lt;/p&gt;
&lt;p&gt;5、netstat&lt;br&gt;netstat是系统只带的工具，可以用于显示于IP，TCP，UDP和ICMP协议相关的统计数据，一般用于检验本地2计算机各端口的网络连接情况。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、Sniffer工作原理&lt;br&gt;在本地网卡设置成“混杂”模式时，网卡会接收所有在网络中的所有的帧，这就构成了监听。如果局域网中的某一台主机被设置成了这种监听模式，它就成了一个Sniffer。根据Sniffer的原理，如果一个帧没有被发送到指定的网卡上，那么就无法监听到该帧
    
    </summary>
    
    
      <category term="计算机网络" scheme="http://zone.gaospot.com/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title>第一个Java Google engine程序</title>
    <link href="http://zone.gaospot.com/2014/04/29/%E7%AC%AC%E4%B8%80%E4%B8%AAJava%20Google%20engine%E7%A8%8B%E5%BA%8F/"/>
    <id>http://zone.gaospot.com/2014/04/29/第一个Java Google engine程序/</id>
    <published>2014-04-29T01:08:00.000Z</published>
    <updated>2016-04-29T07:09:07.327Z</updated>
    
    <content type="html">&lt;p&gt;1、搭建相应的开发环境，添加Eclipse的google app engine plugin。&lt;br&gt;方法1：在线添加，方法如下。（试了多次不行，自己解决不了）&lt;br&gt;打开Eclipse，选择Help〉Install new software..在work with中添加站点地址是&lt;a href=&quot;http://dl.google.com/eclipse/plugin/3.6&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://dl.google.com/eclipse/plugin/3.6&lt;/a&gt;&lt;br&gt;方法2：离线安装，分别下载GAE SDK和Plugin for Eclipse。&lt;br&gt;具体的安装方法详见这里。&lt;/p&gt;
&lt;p&gt;2、新建一个google web application。&lt;br&gt;和创建普通的web工程一样，设置好相应的参数，一个google web application就建好了。&lt;/p&gt;
&lt;p&gt;3、部署你的app到Google app engine&lt;br&gt;右击 你的应用&amp;gt; Google &amp;gt; Deploy to app engine.输入google帐号名，和密码，点击部署即可。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://blog.csdn.net/xiaojianpitt/article/details/4193064&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;如何开发你的第一个Java Google App Engine 程序&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、搭建相应的开发环境，添加Eclipse的google app engine plugin。&lt;br&gt;方法1：在线添加，方法如下。（试了多次不行，自己解决不了）&lt;br&gt;打开Eclipse，选择Help〉Install new software..在work with中添加站
    
    </summary>
    
    
      <category term="Java编程学习" scheme="http://zone.gaospot.com/tags/Java%E7%BC%96%E7%A8%8B%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>C语言中strcpy和memcpy</title>
    <link href="http://zone.gaospot.com/2014/04/22/C%E8%AF%AD%E8%A8%80%E4%B8%ADstrcpy%E5%92%8Cmemcpy/"/>
    <id>http://zone.gaospot.com/2014/04/22/C语言中strcpy和memcpy/</id>
    <published>2014-04-22T00:31:00.000Z</published>
    <updated>2016-04-29T07:03:31.475Z</updated>
    
    <content type="html">&lt;p&gt;strcpy和memcpy都是标准C库函数，且都可用于字符串复制。&lt;/p&gt;
&lt;p&gt;strcpy提供了字符串的复制。即strcpy只用于字符串复制，并且它不仅复制字符串内容之外，还会复制字符串的结束符。strcpy的复制正是在遇到字符串的结束符时终止的。&lt;br&gt;memcpy提供了一般内存的复制。即memcpy对于需要复制的内容没有限制，因此用途更广。其结束以参数n的大小为准。&lt;/p&gt;
&lt;p&gt;其所包含的头文件，和函数声明如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;#60;string.h&amp;#62;  &amp;#10;  &amp;#10;char *strcpy(char *dest, const char *src);  &amp;#10;char *strncpy(char *dest, const char *src, size_t n);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;#60;string.h&amp;#62;  &amp;#10;  &amp;#10;void *memcpy(void *dest, const void *src, size_t n);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;strcpy和memcpy主要有以下3方面的区别。&lt;br&gt;1、复制的内容不同。strcpy只能复制字符串，而memcpy可以复制任意内容，例如字符数组、整型、结构体、类等。&lt;br&gt;2、复制的方法不同。strcpy不需要指定长度，它遇到被复制字符的串结束符”\0”才结束，所以容易溢出。memcpy则是根据其第3个参数决定复制的长度。&lt;br&gt;3、用途不同。通常在复制字符串时用strcpy，而需要复制其他类型数据时则一般用memcpy&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;strcpy和memcpy都是标准C库函数，且都可用于字符串复制。&lt;/p&gt;
&lt;p&gt;strcpy提供了字符串的复制。即strcpy只用于字符串复制，并且它不仅复制字符串内容之外，还会复制字符串的结束符。strcpy的复制正是在遇到字符串的结束符时终止的。&lt;br&gt;memcpy提
    
    </summary>
    
    
      <category term="C语言学习" scheme="http://zone.gaospot.com/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>使用git上传已有的代码到github上</title>
    <link href="http://zone.gaospot.com/2014/04/14/%E4%BD%BF%E7%94%A8git%E4%B8%8A%E4%BC%A0%E5%B7%B2%E6%9C%89%E7%9A%84%E4%BB%A3%E7%A0%81%E5%88%B0github%E4%B8%8A/"/>
    <id>http://zone.gaospot.com/2014/04/14/使用git上传已有的代码到github上/</id>
    <published>2014-04-14T14:42:00.000Z</published>
    <updated>2016-04-29T06:59:52.710Z</updated>
    
    <content type="html">&lt;p&gt;1、使用已有的github账户，在上面创建一个项目。进入github官网后在右下角，有一个名为New repository的绿色按钮，点击便可创建一个github项目。&lt;/p&gt;
&lt;p&gt;2、然后就是填写一些相关的信息了。按照自己的想法填就是了。&lt;/p&gt;
&lt;p&gt;3、创建SSH密匙&lt;br&gt;在shell下，输入以下命令。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh-keygen -C &amp;#39;your@email.address&amp;#39; -t rsa&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;确认使用默认路径，然后输入两次你要是用的密码就行（一般直接敲几个回车不使用密码）&lt;/p&gt;
&lt;p&gt;4、提交密匙&lt;br&gt;现在又要回到github的页面上，在右上方工具栏里找到Account Settings。在这个页面上有一个SSH Keys标签，选择Add SSH key。Title随便取，Key就是开始生成的一段东西。找到id_rsa.pub文件（一般是在用户的主目录下），把它打开可以看到一堆文字，拷贝下来黏贴到github页面key的空白处。然后Apply，就好了。&lt;/p&gt;
&lt;p&gt;可以使用以下命令测试连接&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ssh -v git@github.com&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;5、上传代码&lt;br&gt;最后就是上传你的代码了~ bash切换到你的项目目录下，输入以下命令。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;git remote add origin git@github.com:&amp;#20320;&amp;#30340;github&amp;#29992;&amp;#25143;&amp;#21517;/&amp;#20320;&amp;#30340;github&amp;#39033;&amp;#30446;&amp;#21517;.git  &amp;#10;git push origin master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;现在再去&lt;a href=&quot;http://github.com/你的github用户名/你的github项目&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://github.com/你的github用户名/你的github项目&lt;/a&gt; 就可以看到你的项目了~ Good luck&lt;br&gt;当然这是从无到有，如果你有一个Git的repo，想添加到github上，那就直接使用第8步的命令就可以了（不要忘记密匙的相关工作）。话说很多初学者应该会和我一样，在初期搞不清git和github的关系，git是和CVS,SVN并列的一个概念，而github是和Google Code, sourceforge并列的一个概念，在具体点说，git是一个代码管理工具，而github是一个代码托管平台，这样说就明白了吧。所以，git的学习的话，参见这里。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、使用已有的github账户，在上面创建一个项目。进入github官网后在右下角，有一个名为New repository的绿色按钮，点击便可创建一个github项目。&lt;/p&gt;
&lt;p&gt;2、然后就是填写一些相关的信息了。按照自己的想法填就是了。&lt;/p&gt;
&lt;p&gt;3、创建SSH密
    
    </summary>
    
    
      <category term="开发工具" scheme="http://zone.gaospot.com/tags/%E5%BC%80%E5%8F%91%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
</feed>
