<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GaoSpot</title>
  <subtitle>————写写生活，聊聊技术</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://zone.gaospot.com/"/>
  <updated>2016-04-25T14:24:44.089Z</updated>
  <id>http://zone.gaospot.com/</id>
  
  <author>
    <name>Gao Xiong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>无EIP云主机外网访问</title>
    <link href="http://zone.gaospot.com/2016/04/25/%E6%97%A0EIP%E4%BA%91%E4%B8%BB%E6%9C%BA%E5%A4%96%E7%BD%91%E8%AE%BF%E9%97%AE/"/>
    <id>http://zone.gaospot.com/2016/04/25/无EIP云主机外网访问/</id>
    <published>2016-04-25T14:23:40.000Z</published>
    <updated>2016-04-25T14:24:44.089Z</updated>
    
    <content type="html">&lt;p&gt;在UCloud平台使用云主机的时候，如果需要访问外网，一种比较直接的方式就是绑定EIP，但是在某些情况下我们并不希望给没给云主机都绑定一个EIP，比如说安装需要从外网下载软件的时候。这个时候我们该如何实现这个需求呢，在这种情况下，我们要求最少需要有一个EIP，这样可以通过一定的设置方式让其他云主机使用这个EIP作为出口，这里介绍两种方法，一种是通过UCloud平台提供的路由器产品（免费），还有一个是使用绑定了EIP的云主机作为网关来实现。&lt;/p&gt;
&lt;h3 id=&quot;u4E00_u3001_u4F7F_u7528_u5177_u6709EIP_u4E91_u4E3B_u673A_u505A_u7F51_u5173_u5B9E_u73B0_u5916_u7F51_u8BBF_u95EE&quot;&gt;&lt;a href=&quot;#u4E00_u3001_u4F7F_u7528_u5177_u6709EIP_u4E91_u4E3B_u673A_u505A_u7F51_u5173_u5B9E_u73B0_u5916_u7F51_u8BBF_u95EE&quot; class=&quot;headerlink&quot; title=&quot;一、使用具有EIP云主机做网关实现外网访问&quot;&gt;&lt;/a&gt;一、使用具有EIP云主机做网关实现外网访问&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;测试环境介绍（两台主机都在北京二可用区C，系统均为centos6.5）：&lt;/strong&gt;&lt;br&gt;云主机A（做网关）：内网IP: 10.10.229.85 外网IP: 123.59.150.107 BGP&lt;br&gt;云主机B：内网IP: 10.10.246.62&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;实现目标：&lt;/strong&gt;&lt;br&gt;主机A可以访问外网，但是主机B没有EIP也没有做任何设置不可以访问外网。现在要通过修改主机B网关的方式实现主机B访问外网。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;步骤概述：&lt;/strong&gt;&lt;br&gt;1.网关机器打开内核里面的ip forward参数&lt;br&gt;2.网关机器做iptables，完成nat映射&lt;br&gt;3.后端机器修改网关地址&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;具体操作步骤：&lt;/strong&gt;&lt;br&gt;1、打开具备外网IP的云主机A（作为转发路由）的转发功能，编辑/etc/sysctl.conf文件，打开配置  net.ipv4.ip_forward=1。 &lt;/p&gt;
&lt;p&gt;2、执行  sysctl -p 使配置生效&lt;/p&gt;
&lt;p&gt;3、在路由机器云主机A（具备外网IP）设置iptables转发 iptables -t nat -A POSTROUTING -o eth0 -j MASQUERADE&lt;/p&gt;
&lt;p&gt;4、修改需要访问外网的内网机器云主机B， 编辑/etc/sysconfig/network-scripts/ifcfg-eth0文件，修改默认路由为路由机器云主机A（具备外网IP）内网IP，例如：gateway 10.10.229.85。&lt;/p&gt;
&lt;p&gt;5、执行 service network restart 使配置生效&lt;/p&gt;
&lt;p&gt;6、通过ping一个外网域名来验证，外网可达性，比如说，ping www.baidu.com&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;副作用及解决（&lt;a href=&quot;https://docs.ucloud.cn/upd-docs/unetwork/faq.html#id27&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用某台云主机做外网网关后, 是否需要添加其他路由&lt;/a&gt;）&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;会影响云主机和其他产品的内网通信，解决办法是添加静态路由。说明如下：云主机的流量可分为纵向流量: 外网流量以及ULB/UDB/UMem访问流量. 横向流量: 云主机间内网通讯. 默认路由修改到做网关的云主机后, 所有流量都会变为横向流量, 不仅影响纵向流量的效率, 也会导致无法和ULB/UDB/UMem通讯(因为内网IP伪造的安全规则会不通过). 解决方法是添加静态路由.&lt;/p&gt;
&lt;p&gt;Linux添加路由示例&lt;br&gt;华东机房&lt;br&gt;ip ro add 10.255.0.0/16 via 10.4.0.1&lt;br&gt;ip ro add 10.4.0.0/16 via 10.4.0.1&lt;br&gt;echo “ip ro add 10.255.0.0/16 via 10.4.0.1” &amp;gt;&amp;gt; /etc/rc.local&lt;br&gt;echo “ip ro add 10.4.0.0/16 via 10.4.0.1” &amp;gt;&amp;gt; /etc/rc.local&lt;/p&gt;
&lt;p&gt;北京BGP-A机房&lt;br&gt;ip ro add 10.255.0.0/16 via 10.6.0.1&lt;br&gt;ip ro add 10.6.0.0/16 via 10.6.0.1&lt;br&gt;echo “ip ro add 10.255.0.0/16 via 10.6.0.1” &amp;gt;&amp;gt; /etc/rc.local&lt;br&gt;echo “ip ro add 10.6.0.0/16 via 10.6.0.1” &amp;gt;&amp;gt; /etc/rc.local&lt;/p&gt;
&lt;p&gt;Windows添加路由示例&lt;br&gt;华东机房&lt;br&gt;route add 10.255.0.0 mask 255.255.0.0 10.4.0.1 /p&lt;br&gt;route add 10.4.0.0 mask 255.255.0.0 10.4.0.1 /p&lt;/p&gt;
&lt;p&gt;北京BGP-A机房&lt;br&gt;route add 10.255.0.0 mask 255.255.0.0 10.6.0.1 /p&lt;br&gt;route add 10.6.0.0 mask 255.255.0.0 10.6.0.1 /p&lt;/p&gt;
&lt;h3 id=&quot;u4E8C_u3001_u4F7F_u7528_u8DEF_u7531_u5668_u5B9E_u73B0_u5916_u7F51_u8BBF_u95EE_uFF08_u5F85_u9A8C_u8BC1_uFF09&quot;&gt;&lt;a href=&quot;#u4E8C_u3001_u4F7F_u7528_u8DEF_u7531_u5668_u5B9E_u73B0_u5916_u7F51_u8BBF_u95EE_uFF08_u5F85_u9A8C_u8BC1_uFF09&quot; class=&quot;headerlink&quot; title=&quot;二、使用路由器实现外网访问（待验证）&quot;&gt;&lt;/a&gt;二、使用路由器实现外网访问（待验证）&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;具体操作步骤：&lt;/strong&gt;&lt;br&gt;1、登录控制台，选择网络Unet下的路由器选项，点击创建路由器； &lt;/p&gt;
&lt;p&gt;2、在弹出的创建路由器页面中输入路由器名称，点击确认完成路由器创建；&lt;/p&gt;
&lt;p&gt;3、申请弹性EIP，将EIP绑定已经创建好的路由器；&lt;/p&gt;
&lt;p&gt;4、此时路由器列表页面中显示了与路由器关联的弹性外网IP和子网信息。如果子网机器需要访问外网，可以根据需要将创建的子网连接到路由器&lt;/p&gt;
&lt;p&gt;5、点击进入路由器的端口转发,添加转发规则。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.05do.com/blog/content/190&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;解决Ucloud没有弹性IP的内网主机访问外网的问题&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://docs.ucloud.cn/upd-docs/uhost/guide.html#id9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;实现外网对大数据机型云主机&amp;amp;物理主机的访问&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在UCloud平台使用云主机的时候，如果需要访问外网，一种比较直接的方式就是绑定EIP，但是在某些情况下我们并不希望给没给云主机都绑定一个EIP，比如说安装需要从外网下载软件的时候。这个时候我们该如何实现这个需求呢，在这种情况下，我们要求最少需要有一个EIP，这样可以通过一
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Docker安装</title>
    <link href="http://zone.gaospot.com/2016/04/24/Docker%E5%AE%89%E8%A3%85/"/>
    <id>http://zone.gaospot.com/2016/04/24/Docker安装/</id>
    <published>2016-04-24T09:11:00.000Z</published>
    <updated>2016-04-24T09:12:34.862Z</updated>
    
    <content type="html">&lt;p&gt;记录在我的云主机上安装Docker的过程，安装过程是通过软件包管理器来安装的，所有安装过程比较简单，过程参考了Docker官方文档和其他一些内容。&lt;/p&gt;
&lt;h3 id=&quot;u524D_u63D0_u6761_u4EF6&quot;&gt;&lt;a href=&quot;#u524D_u63D0_u6761_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;p&gt;由于Docker对操作系统的一些底层功能有依赖，所有并不是所有的Linux发行版都可以用来安装Docker的，我这里选择的是Ubuntu14.04 64bit，因为Ubuntu本身使用用户量比较大，而且也是我自己常用的系统。具体要求在列表中给出：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;必须是64位系统，不论是AMD还是X86_64，总之一定要是64位的；&lt;/li&gt;
&lt;li&gt;内核版本最起码是3.10，小版本最低的3.10都行；&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u66F4_u65B0APT_u6E90&quot;&gt;&lt;a href=&quot;#u66F4_u65B0APT_u6E90&quot; class=&quot;headerlink&quot; title=&quot;更新APT源&quot;&gt;&lt;/a&gt;更新APT源&lt;/h3&gt;&lt;p&gt;为了安装最新的docker版本，这里并没有使用ubuntu官方的源来安装docker，而是使用了其他的源，添加过程如下所示：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&amp;#10;$ sudo apt-get install apt-transport-https ca-certificates&amp;#10;$ sudo apt-key adv --keyserver hkp://p80.pool.sks-keyservers.net:80 --recv-keys 58118E89F3A912897C070ADBF76221572C52609D&amp;#10;$ vim /etc/apt/sources.list.d/docker.list #&amp;#28155;&amp;#21152;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#20869;&amp;#23481;&amp;#65292;&amp;#22240;&amp;#20026;&amp;#25105;&amp;#26159;14.04&amp;#30340;&amp;#10;&amp;#10;deb https://apt.dockerproject.org/repo ubuntu-trusty main&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;其他版本的添加的源如下：&lt;br&gt;在Ubuntu Precise 12.04 (LTS)中，添加下面的源&lt;/p&gt;
&lt;p&gt;deb &lt;a href=&quot;https://apt.dockerproject.org/repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://apt.dockerproject.org/repo&lt;/a&gt; ubuntu-precise main&lt;br&gt;在Ubuntu Trusty 14.04 (LTS)中，添加下面的源&lt;/p&gt;
&lt;p&gt;deb &lt;a href=&quot;https://apt.dockerproject.org/repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://apt.dockerproject.org/repo&lt;/a&gt; ubuntu-trusty main&lt;br&gt;Ubuntu Wily 15.10&lt;/p&gt;
&lt;p&gt;deb &lt;a href=&quot;https://apt.dockerproject.org/repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://apt.dockerproject.org/repo&lt;/a&gt; ubuntu-wily main&lt;br&gt;Ubuntu Xenial 16.04 (LTS)&lt;/p&gt;
&lt;p&gt;deb &lt;a href=&quot;https://apt.dockerproject.org/repo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://apt.dockerproject.org/repo&lt;/a&gt; ubuntu-xenial main&lt;/p&gt;
&lt;p&gt;保存并退出之后更新本地源缓存，我记得apt好像是有缓存：）。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get update&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u5B89_u88C5&quot;&gt;&lt;a href=&quot;#u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;p&gt;在进行完上面的准备工作之后就可安装了，安装过程非常简单就是一条apt命令，安装之后对docker做一个简单检查。还有ufw的问题，ufw是Ubuntu下的防火墙，类似Centos下iptables，在我的主机上，这个防火墙是关闭的，所有可以不用担心它。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo apt-get install docker-engine&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;安装之后启动服务&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo service docker start&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;通过运行一个Docker容器，检查Docker是否正常安装&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo docker run hello-world&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查看Docker信息&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ sudo docker info&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面就是我安装过程的一个记录，安装好Docker之后可以尽情的折腾了，遇到问题解决不了的话，直接重装系统吧：）。然后又可以愉快的玩耍了。有问题可以参考官方文档，链接在下面，官方文档说的特别详细，考虑了很多方面，我这里针对我本地需要和本地环境做了一些简化。哈哈，小偷了一下懒。不过也没什么影响，总的来说Docker安装过程还是非常简单的。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;https://docs.docker.com/engine/installation/linux/ubuntulinux/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Installation on Ubuntu&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;记录在我的云主机上安装Docker的过程，安装过程是通过软件包管理器来安装的，所有安装过程比较简单，过程参考了Docker官方文档和其他一些内容。&lt;/p&gt;
&lt;h3 id=&quot;u524D_u63D0_u6761_u4EF6&quot;&gt;&lt;a href=&quot;#u524D_u63D0_u676
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Linux磁盘管理</title>
    <link href="http://zone.gaospot.com/2016/04/21/Linux%E7%A3%81%E7%9B%98%E7%AE%A1%E7%90%86/"/>
    <id>http://zone.gaospot.com/2016/04/21/Linux磁盘管理/</id>
    <published>2016-04-20T23:30:57.000Z</published>
    <updated>2016-04-20T23:32:32.771Z</updated>
    
    <content type="html">&lt;p&gt;这篇博客是在系统的层次对Linux下磁盘做一个说明的，磁盘是计算机系统中非常基础的一个硬件，对于磁盘的管理和使用，操作系统完成了管理的大部分工作，而使用部分由于每个人操作磁盘的目的不同，那么使用方法也就自然不同。文章中的大部分内容来自于鸟哥的Linux私房菜，在参考部分给出了这篇文章的连接。&lt;/p&gt;
&lt;h3 id=&quot;EXT2_u6587_u4EF6_u7CFB_u7EDF&quot;&gt;&lt;a href=&quot;#EXT2_u6587_u4EF6_u7CFB_u7EDF&quot; class=&quot;headerlink&quot; title=&quot;EXT2文件系统&quot;&gt;&lt;/a&gt;EXT2文件系统&lt;/h3&gt;&lt;p&gt;文件系统可以认为是操作系统安装在磁盘上用来对磁盘进行管理的软件，&lt;strong&gt;文件系统是会占用磁盘空间的。&lt;/strong&gt; EXT2文件系统已经是一个比较古老的文件系统了，现在比较常用的已经是EXT4文件系统了，包括最新版的centos和ubunt使用的都是EXT4文件系统了。EXT4文件系统是在EXT2文件系统的基础上进化出来的。EXT2文件系统上的概念在EXT4上也是通用的。比如说data block, inode table, superblock在EXT4上也是存在的。&lt;/p&gt;
&lt;h3 id=&quot;u78C1_u76D8_u7BA1_u7406&quot;&gt;&lt;a href=&quot;#u78C1_u76D8_u7BA1_u7406&quot; class=&quot;headerlink&quot; title=&quot;磁盘管理&quot;&gt;&lt;/a&gt;磁盘管理&lt;/h3&gt;&lt;p&gt;硬盘需要分区，格式化并挂载后方能使用，Linux 下硬盘上的每个分区表示为一个设备文件。在Linux系统中这三个步骤分别对应fdisk，mkfs和mount。一块新的硬盘被加到系统中。必需要经过上面的这3步操作系统才能使用磁盘（指使用磁盘进行读取和写入操作），但其中第一个分区不是必需。物理磁盘在接入到计算机系统中之后其实只要进行格式化和挂载就能使用。&lt;/p&gt;
&lt;p&gt;####分区 ####&lt;br&gt;分区使用命令fdisk来实现，分区其实不是必需的，linux下分区的概念和Windows中把一块磁盘分成C，D，E…各个分区是一个概念。分区的目的是为了将一块完整的磁盘划分出多个独立的分区来，每一个分区相当于是一块新的磁盘。这样的好处就是我们可以在每个磁盘中安装不同的系统。在我们这里应用的时候不要安装其他系统在磁盘上，分区其实就可以省略了，整个磁盘就当做一块磁盘来用这样没有任何问题，例子中就使用了这种方式来使用我们新的磁盘。一般来说在linux下的分区工具就是fdisk，下面是fdisk常见使用方法的说明，在不同系统下用法可能不同。如有不同以使用系统版本的文档为准。&lt;br&gt;列出当前系统下的磁盘和其分区：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fdisk -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;对某块磁盘进行分区操作：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;fdisk /dev/vdb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输入上面命令会使我们进入到fdisk的操作界面，fdisk分区的使用方法还是非常简单的。它会自动打印出命令的说明，跟进自身需求，执行上面的命令就可以了。&lt;/p&gt;
&lt;h4 id=&quot;u683C_u5F0F_u5316&quot;&gt;&lt;a href=&quot;#u683C_u5F0F_u5316&quot; class=&quot;headerlink&quot; title=&quot;格式化&quot;&gt;&lt;/a&gt;格式化&lt;/h4&gt;&lt;p&gt;linux系统支持众多的文件系统，不同的系统版本默认使用的文件系统可能也不一样，比如说centos6默认使用的ext4文件系统，而centos7默认使用的则是xfs。磁盘必须经过格式化才能使用，格式化的过程就相当于是将文件系统安装到磁盘中的过程。&lt;br&gt;常用的格式化命令示例如下：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkfs -t ext4 /dev/vdb #&amp;#23558;vdb&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#20026;ext4&amp;#10;mkfs.xfs /dev/vdb #&amp;#23558;vdb&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#20026;xfs&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u6302_u8F7D&quot;&gt;&lt;a href=&quot;#u6302_u8F7D&quot; class=&quot;headerlink&quot; title=&quot;挂载&quot;&gt;&lt;/a&gt;挂载&lt;/h4&gt;&lt;p&gt;格式化好之后文件系统还不能在linux中使用，要使用的话必须要经过挂载才行。linux的文件系统是树状的文件系统，每个目录相当于是树枝的一个分叉点。我们必须把经过格式化的磁盘挂载在现有的文件系统下才能使用。文件系统的挂载使用mount命令，这个命令接受两个参数，磁盘和挂载点，挂载点是进入新磁盘的入口，要使用新磁盘必须在挂载点之下才可以。也就是说只有在挂载点目录之下新建文件，文件占用的才是新挂载上了的磁盘空间。挂载还有和他相对的一个操作卸载，有一些磁盘操作需要对磁盘进行卸载之后才能进行，下面是这两条命令的示例：&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mount /dev/vdb /data  #&amp;#23558;vdb&amp;#25346;&amp;#36733;&amp;#21040;/data&amp;#10;umount /dev/vdb       #&amp;#21368;&amp;#36733;vdb&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;u663E_u793A_u78C1_u76D8_u7A7A_u95F4_u5360_u7528_u60C5_u51B5&quot;&gt;&lt;a href=&quot;#u663E_u793A_u78C1_u76D8_u7A7A_u95F4_u5360_u7528_u60C5_u51B5&quot; class=&quot;headerlink&quot; title=&quot;显示磁盘空间占用情况&quot;&gt;&lt;/a&gt;显示磁盘空间占用情况&lt;/h4&gt;&lt;p&gt;在 Linux 和 AIX 系统上，都提供了一个 df 命令。df 的功能是检查文件系统的磁盘空间占用情况以及可用性，通常还包挂载点。管理员能利用该命令来获取硬盘被占用了多少空间，目前还剩下多少空间等信息。 下面是df常见几个用法的例子：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;df -ihT #i&amp;#34920;&amp;#31034;inode&amp;#20449;&amp;#24687;&amp;#65292;h&amp;#24050;&amp;#38405;&amp;#35835;&amp;#21451;&amp;#22909;&amp;#30340;&amp;#26041;&amp;#24335;&amp;#26174;&amp;#31034;&amp;#65292;T&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#31867;&amp;#22411;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;还有一个用来显示文件占用大小的命令du，带 -a 选项的 du 命令将从当前目录开始沿着目录结构向下直到列出所有目录和文件的容量为止。du可用于找出当前文件系统中占用磁盘空间最多的文件，或者说找出大文件。&lt;/p&gt;
&lt;h4 id=&quot;u4F8B_u5B50_uFF1A_u65B0_u52A0_u5165_u4E00_u5757_u78C1_u76D8_u5230linux_u7CFB_u7EDF_u4E2D&quot;&gt;&lt;a href=&quot;#u4F8B_u5B50_uFF1A_u65B0_u52A0_u5165_u4E00_u5757_u78C1_u76D8_u5230linux_u7CFB_u7EDF_u4E2D&quot; class=&quot;headerlink&quot; title=&quot;例子：新加入一块磁盘到linux系统中&quot;&gt;&lt;/a&gt;例子：新加入一块磁盘到linux系统中&lt;/h4&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;mkfs -t ext4 /dev/vdb #&amp;#23558;vdb&amp;#30340;&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#26684;&amp;#24335;&amp;#21270;&amp;#20026;ext4&amp;#10;mount /dev/vdb /data/ #&amp;#23558;vdb&amp;#25346;&amp;#36733;&amp;#21040;/data&amp;#30446;&amp;#24405;&amp;#19979;&amp;#10;vim /etc/fstab #&amp;#32534;&amp;#36753;fstab&amp;#23558;&amp;#19979;&amp;#38754;&amp;#30340;&amp;#35821;&amp;#21477;&amp;#20889;&amp;#20837;fstab&amp;#20013;&amp;#10;/dev/vdb   /data  ext4  defaults,noatime 0 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6700_u540E_u8865_u5145_u4E00_u4E2A_u5728UCloud_u5E73_u53F0_u5347_u7EA7_u78C1_u76D8_u5927_u5C0F_u7684_u8BF4_u660E&quot;&gt;&lt;a href=&quot;#u6700_u540E_u8865_u5145_u4E00_u4E2A_u5728UCloud_u5E73_u53F0_u5347_u7EA7_u78C1_u76D8_u5927_u5C0F_u7684_u8BF4_u660E&quot; class=&quot;headerlink&quot; title=&quot;最后补充一个在UCloud平台升级磁盘大小的说明&quot;&gt;&lt;/a&gt;最后补充一个在UCloud平台升级磁盘大小的说明&lt;/h3&gt;&lt;p&gt;在平台完成升级磁盘操作后，并不能直接在系统中使用。因为磁盘扩容的操作相当于是对物理硬盘进行了扩展，由于是在物理硬件层次的扩展，新增加的磁盘其实是没有进行格式化的，通过前面的说明我们可以知道没有进行格式化的磁盘在操作系统中是无法使用的，因此我们需要在系统中对扩容的磁盘进行一个格式化的操作才能使用。格式化操作一般是会丢失数据的，我们这里使用的resize2fs命令相当于是在不影响之前部分的前提下对新的磁盘空间进行格式化。&lt;br&gt;在Linux的主机上进行扩容大概步骤如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;查看文件系统类型&lt;/li&gt;
&lt;li&gt;卸载文件系统&lt;/li&gt;
&lt;li&gt;运行磁盘检查程序&lt;/li&gt;
&lt;li&gt;格式化扩容的分区&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;命令如下&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;df -ihT #&amp;#26597;&amp;#30475;&amp;#25991;&amp;#20214;&amp;#31995;&amp;#32479;&amp;#20998;&amp;#21306;&amp;#31867;&amp;#22411;&amp;#10;umount /dev/vdb #&amp;#21368;&amp;#36733;vdb&amp;#20998;&amp;#21306;&amp;#10;e2fsck -f /dev/vdb #&amp;#30913;&amp;#30424;&amp;#26816;&amp;#26597;&amp;#65292;&amp;#21518;&amp;#19968;&amp;#26465;&amp;#21629;&amp;#20196;&amp;#20197;&amp;#36825;&amp;#26465;&amp;#21629;&amp;#20196;&amp;#20026;&amp;#21069;&amp;#25552;&amp;#10;resize2fs /dev/vdb #&amp;#26684;&amp;#24335;&amp;#21270;&amp;#25193;&amp;#23637;&amp;#30340;&amp;#20998;&amp;#21306;&amp;#10;mount /dev/vdb #&amp;#25346;&amp;#36733;&amp;#20998;&amp;#21306;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;参考&lt;br&gt;&lt;a href=&quot;http://vbird.dic.ksu.edu.tw/linux_basic/0230filesystem.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux 磁盘与文件系统管理&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://www.ibm.com/developerworks/cn/aix/library/0907_unixdisk_litt/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unix/Linux 系统自动化管理: 磁盘管理篇（上）&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这篇博客是在系统的层次对Linux下磁盘做一个说明的，磁盘是计算机系统中非常基础的一个硬件，对于磁盘的管理和使用，操作系统完成了管理的大部分工作，而使用部分由于每个人操作磁盘的目的不同，那么使用方法也就自然不同。文章中的大部分内容来自于鸟哥的Linux私房菜，在参考部分给出
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>单机Web服务器性能</title>
    <link href="http://zone.gaospot.com/2016/04/16/%E5%8D%95%E6%9C%BAWeb%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%80%A7%E8%83%BD/"/>
    <id>http://zone.gaospot.com/2016/04/16/单机Web服务器性能/</id>
    <published>2016-04-15T17:37:23.000Z</published>
    <updated>2016-04-15T17:38:01.311Z</updated>
    
    <content type="html">&lt;p&gt;当网站部署好之后，开始上线运行的时候。一开始可能一切都是正常的，慢慢的随着时间和访问量的增加，可能会出现一些比较明显的性能问题。一旦出现这样的问题，轻则影响用户访问速度，重则可能整个网站就瘫痪了，比如说有后端的应用，数据出现死锁等等情况是，这时一般整个网站一般都是不可用的。&lt;/p&gt;
&lt;p&gt;###1、 影响Web应用访问速度的因素 ###&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;网络延时&lt;br&gt;任何Web应用的使用者都要通过网络来访问应用，那么网络延时就成为了一个会影响Web应用访问速度的重要因素。从Web应用服务器到用户之间涉及到两端网络的情况，用户和服务器的网络不理想都会影响最终的访问速度，这里用户和服务器的网络情况主要指的就是用户和服务器网络带宽问题，检查的工具一般是ping。一般来说如果用户端网络有问题，那么用户访问任何网站都是卡的，验证方法是通过ping大型网站来测试，比如说百度，一般这样的网站都是使用了cdn技术的，如果ping延迟非常大，比如说上百毫秒，基本上可以认为是本地网络有问题了。而服务器网络问题的检测可以通过17ce这样的测试网站的分布式ping来实现，因为需要测试是否是服务端问题，我们一般希望能有较多访问点来进行测试，如果全国各地的访问都是慢的，我们可以认为是服务器的网络有问题（首先要排除服务器处理速度没有问题）。当然也有服务器网络和用户网络都是正常的情况。这时我们认为是服务器和用户之间存在单点网络故障。单点网络问题多出在运营商之间，由于国内各运营商互联互通问题导致的单点问题时有发生。检查这样问题的工具一般来说是使用mtr或者traceroute这样的网络链路检查的工具。当然以上一切问题的定位都可以借助神器tcpdump来实现，抓包一般来说对应定位网络问题非常有利。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;请求处理时间&lt;br&gt;这里涉及的就是服务器端的问题，我们假设网络都是正常的，且所有用户访问都会出现卡慢的现象。这里还假设主机是正常的，没有发生如oom，卡死等状况，只是单纯的由于服务器处理时间长导致的卡慢。由于一个web请求过来一般来说不是由于某个单纯的部分来完成这个请求的，而是会涉及到各个组件之间的一个相互配合问题。一般来说定位问题和解决的办法是分析各个组件日志来定位问题。针对服务器问题我们提出下面的解决方法。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u63D0_u5347_u670D_u52A1_u5668_u6027_u80FD_u65B9_u6CD5&quot;&gt;&lt;a href=&quot;#u63D0_u5347_u670D_u52A1_u5668_u6027_u80FD_u65B9_u6CD5&quot; class=&quot;headerlink&quot; title=&quot;提升服务器性能方法&quot;&gt;&lt;/a&gt;提升服务器性能方法&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;使用缓存系统&lt;br&gt;使用如Redis等等key/value内存数据库可以有效的提升应用的性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用高性能数据库架构&lt;br&gt;常见的高性能数据库架构如主从复制和读写分离，以及对数据库进行水平和垂直划分等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;使用高性能的Web组件&lt;br&gt;这里推荐的是Nginx搭配php-fpm的组合，Nginx的特点就是轻量级，可以维护更多的http长连接。至于这两个软件的安装既可以采用源码安装，也可以使用系统的软件包管理器安装，这个取决于个人需要。这里推荐的测试工具是ab，是Apache自带的一个测试工具。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u76D1_u63A7_u670D_u52A1_u5668_u7684_u5404_u9879_u6307_u6807&quot;&gt;&lt;a href=&quot;#u76D1_u63A7_u670D_u52A1_u5668_u7684_u5404_u9879_u6307_u6807&quot; class=&quot;headerlink&quot; title=&quot;监控服务器的各项指标&quot;&gt;&lt;/a&gt;监控服务器的各项指标&lt;/h3&gt;&lt;p&gt;这里主要是介绍几个Linux下面常用的，用于监控服务器性能的几个工具。&lt;br&gt;top 宏观的获取服务器性能信息&lt;br&gt;vmstat和sar 服务器磁盘读写情况展现&lt;br&gt;netstat 查看网络服务，一般用来查看特点端口是否有监听&lt;/p&gt;
&lt;p&gt;注：这篇博客是根据《微信公众平台应用开发实践》这边书籍的第11章内容写成的，可以认为是一篇笔记&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;当网站部署好之后，开始上线运行的时候。一开始可能一切都是正常的，慢慢的随着时间和访问量的增加，可能会出现一些比较明显的性能问题。一旦出现这样的问题，轻则影响用户访问速度，重则可能整个网站就瘫痪了，比如说有后端的应用，数据出现死锁等等情况是，这时一般整个网站一般都是不可用的。
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Win2008搭建Web和FTP服务</title>
    <link href="http://zone.gaospot.com/2016/04/11/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFTP%E6%9C%8D%E5%8A%A1/"/>
    <id>http://zone.gaospot.com/2016/04/11/Win2008搭建Web和FTP服务/</id>
    <published>2016-04-10T18:32:55.000Z</published>
    <updated>2016-04-10T18:37:12.812Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;本篇博客介绍的是在UCloud的云主机上通过IIS搭建Web和FTP服务器的过程，这里的Web服务器只支持最简单的html页面，如果需要其他支持，请自行安装所需软件。&lt;/p&gt;
&lt;p&gt;###创建和连接主机&lt;br&gt;&lt;strong&gt;1、创建win2008的主机&lt;/strong&gt;&lt;br&gt;在UCloud平台上创建win2008主机的过程和创建其他系统主机过程一样，但是要注意的是，默认的镜像不是Windows系统的，所以在安装过程中需要注意选择下Windows系统的镜像。这里使用的是Win2008 R2 64bit的一个镜像系统。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A1.png&quot; alt=&quot;Win2008搭建Web和FTP服务&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、使用mstsc连接管理主机&lt;/strong&gt;&lt;br&gt;UCloud平台提供了Web连接主机的方式，这种连接方式并不推荐用来管理主机，而比较适合在应急的情况下登录，检查主机状况，由于控制登录与主机网络状态是无关的，这种登录方式在主机网络异常的情况下，可以非常方便的通过其登录主机检查主机的网络设置。在正常情况下我们还是使用mstsc（远程桌面连接）来管理主机。首先打开远程桌面软件，通过按下win key + r，然后输入mstsc就可以了。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A11.png&quot; alt=&quot;Win2008搭建Web和FTP服务&quot;&gt;&lt;/p&gt;
&lt;p&gt;打开远程连接界面后，下面有个小三角形，点击打开更大选项，输入相关参数。输入示例如下：&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A12.png&quot; alt=&quot;Win2008搭建Web和FTP服务&quot;&gt;&lt;/p&gt;
&lt;p&gt;输入都正确以后，会弹出一个关于正式的对话框，点是忽略这个证书问题就可以了，然后就能顺利的连接上主机。&lt;/p&gt;
&lt;p&gt;###创建Web和ftp服务器&lt;br&gt;1、服务器登录上去之后会自动打开服务器管理界面。第一件事先添加一个角色。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A13.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;2、点击下一步，勾选Web服务器（IIS）这一项，然后点击下一步。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A14.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;3、由于这里还要安装ftp服务，把ftp相关的勾选上。在点击下一步就会开始安装了，安装过程很快，大概一两分钟的样子。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A15.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;4、添加完角色之后就可以添加站点了，右键点击箭头标出的地方，然后选择新建站点就可以了。其实这个时候就可以直接访问了，可以访问到默认站点。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A16.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;5、站点的设置。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A17.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;6、本地访问测试默认站点。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A18.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;7、下面的步骤介绍的是建立ftp服务器的过程，首先新建一个ftp站点。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A19.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;8、ftp站点的基本设置，站点名和站点（物理）路径。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A110.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;9、ssl设置，由于我没有证书，没办法使用https模式。所以ssl这个选无。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A111.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;10、访问和授权设置。这里不限制用户访问，给所有访问这个ftp站点的用户读取站点文件的权限。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A112.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;11、在外网测试ftp服务器，这里假设防火墙端口已经打开。在UCloud平台上，Windows内部的防火墙默认是关闭了的，但是平台提供的防火墙是开着的，而且默认防火墙21端口是没有打开的。如果不清楚防火墙打开过程可以参考下面的说明。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/Win2008%E6%90%AD%E5%BB%BAWeb%E5%92%8CFtp%E6%9C%8D%E5%8A%A113.png&quot; alt=&quot;创建Web和ftp服务器&quot;&gt;&lt;/p&gt;
&lt;p&gt;###打开外网防火墙&lt;br&gt;打开外网防火墙的说明在之前博客中有介绍，这里就不在赘述，过程都是一样的，具体参考前面的博客&lt;a href=&quot;http://zone.gaospot.com/2016/03/30/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95/&quot;&gt;UCloud上LAMP小型网站搭建与测试&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;参考：&lt;a href=&quot;http://ce.sysu.edu.cn/hope/Item/91192.aspx&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Windows server 2008 r2搭建FTP服务器&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;本篇博客介绍的是在UCloud的云主机上通过IIS搭建Web和FTP服务器的过程，这里的Web服务器只支
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>UCloud上LNMP小型网站搭建</title>
    <link href="http://zone.gaospot.com/2016/04/01/UCloud%E4%B8%8ALNMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA/"/>
    <id>http://zone.gaospot.com/2016/04/01/UCloud上LNMP小型网站搭建/</id>
    <published>2016-03-31T18:22:24.000Z</published>
    <updated>2016-04-02T10:49:01.426Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u76EE_u5F55&quot;&gt;&lt;a href=&quot;#u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;LNMP环境搭建&lt;/li&gt;
&lt;li&gt;打开UCloud防火墙&lt;/li&gt;
&lt;li&gt;Discuz!安装&lt;/li&gt;
&lt;li&gt;应用测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;这篇博客是之前&lt;a href=&quot;http://zone.gaospot.com/2016/03/30/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95/&quot;&gt;UCloud上LAMP小型网站搭建与测试&lt;/a&gt;的姐妹篇，重点在于通过介绍在UCloud云主机上安装Discuz!来介绍LNMP环境的搭建，这里Discuz!可以换成任何用户自己的应用，过程都是类似的。&lt;/p&gt;
&lt;h3 id=&quot;LNMP_u73AF_u5883_u642D_u5EFA&quot;&gt;&lt;a href=&quot;#LNMP_u73AF_u5883_u642D_u5EFA&quot; class=&quot;headerlink&quot; title=&quot;LNMP环境搭建&quot;&gt;&lt;/a&gt;LNMP环境搭建&lt;/h3&gt;&lt;p&gt;关于主机的创建，登录和管理可以参考之前的那篇博客，这里直接就介绍在主机上安装NMP环境，安装步骤如下：&lt;/p&gt;
&lt;p&gt;1、Uhost环境&lt;br&gt;CentOS-6.5 x86_64&lt;/p&gt;
&lt;p&gt;2、安装NMP&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# yum install -y nginx mysql-server php php-gd php-xml php-fpm php-mysql php-bcmath php-mbstring php-mcrypt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、配置Nginx&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# vim /etc/nginx/nginx.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;修改如下内容：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;user nginx;&amp;#10;worker_processes  1;&amp;#10;error_log /var/log/nginx/error.log;&amp;#10;pid /var/run/nginx.pid;&amp;#10;&amp;#10;events &amp;#123;&amp;#10;    use epoll;&amp;#10;    worker_connections 1024;&amp;#10;&amp;#125;&amp;#10;&amp;#10;http &amp;#123;&amp;#10;    include /etc/nginx/mime.types;&amp;#10;    default_type application/octet-stream;&amp;#10;    sendfile on;&amp;#10;    tcp_nopush on;&amp;#10;    keepalive_timeout 65;&amp;#10;    gzip on;&amp;#10;    include /etc/nginx/conf.d/*.conf;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;添加虚拟主机&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# vim/etc/nginx/conf.d/virtual.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;server &amp;#123;&amp;#10;    listen       80;&amp;#10;    server_name  www.domain.com;&amp;#10;    root /var/www/html;&amp;#10;    index index.html index.htm index.php;&amp;#10;    access_log  /var/log/nginx/domain-acess.log;&amp;#10;&amp;#10;    location ~ .*\.php?$ &amp;#123;&amp;#10;        include fastcgi.conf;&amp;#10;        fastcgi_pass 127.0.0.1:9000;&amp;#10;        fastcgi_index index.php;&amp;#10;        access_log off;&amp;#10;    &amp;#125;&amp;#10;&amp;#10;    location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|js|css)$ &amp;#123;&amp;#10;        expires 15d;&amp;#10;    &amp;#125;&amp;#10;&amp;#10;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4、配置PHP&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# sed -i &#39;s#;date.timezone =#date.timezone = Asia/Shanghai#&#39; /etc/php.ini&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# sed -n &#39;s#user = apache#user = nginx#p&#39; /etc/php-fpm.d/www.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# sed -n &#39;s#group = apache#group = nginx#p&#39; /etc/php-fpm.d/www.conf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;5、启动服务&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# service nginx start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# chkconfig nginx on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# service php-fpm start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# chkconfig nginx on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# echo “&amp;lt;?php phpinfo();” &amp;gt; /var/www/html/phpinfo.php&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开浏览器，输入下面URL(记得解析DNS，或者修改hosts文件)&lt;br&gt;&lt;a href=&quot;http://www.domain.com/phpinfo.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.domain.com/phpinfo.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;6、启动MySQL&lt;br&gt;MySQL默认有生成几个配置文件，可以根据自己的硬件情况把文件复制到/etc/my.cnf&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ls /usr/share/mysql/*.cnf&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# service mysqld start&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# chkconfig mysqld on&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6253_u5F00UCloud_u9632_u706B_u5899&quot;&gt;&lt;a href=&quot;#u6253_u5F00UCloud_u9632_u706B_u5899&quot; class=&quot;headerlink&quot; title=&quot;打开UCloud防火墙&quot;&gt;&lt;/a&gt;打开UCloud防火墙&lt;/h3&gt;&lt;p&gt;UCloud平台防火墙的打开可以参考之前那篇博客&lt;a href=&quot;http://zone.gaospot.com/2016/03/30/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95/&quot;&gt;UCloud上LAMP小型网站搭建与测试&lt;/a&gt;，上面有详细的说明。平台上面默认的防火墙是不允许修改规则的，所以要添加新的规则，需要新建防火墙。&lt;/p&gt;
&lt;h3 id=&quot;Discuz_21_u5B89_u88C5&quot;&gt;&lt;a href=&quot;#Discuz_21_u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;Discuz!安装&quot;&gt;&lt;/a&gt;Discuz!安装&lt;/h3&gt;&lt;p&gt;1、下载Discuz，并解压。将upload 这个目录下面的所有文件拷贝到网站根目录，或者是其他二级目录也行。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# wget http://download.comsenz.com/DiscuzX/3.1/Discuz_X3.1_SC_UTF8.zip&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、文件成功解压到网站根目录后，通过在浏览器中运行安装向导来安装Discuz系统。然后一步步按提示向下安装。&lt;/p&gt;
&lt;p&gt;3、安装好后就可以在浏览器访问您的论坛了！&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.discuz.net/thread-3456887-1-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Discuz!X3.1 全新安装图文教程 &lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;u5E94_u7528_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#u5E94_u7528_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;应用测试&quot;&gt;&lt;/a&gt;应用测试&lt;/h3&gt;&lt;p&gt;测试不是必要的过程，但为了更好的掌握应用的负载能力还是建议进行测试的，以对应用状况有比较好的了解。测试工具和测试方法网上有很多，可以自行Google，也可以参考上面一篇博客介绍的方法。最后说一点是没有完全正确的测试，测试只能模拟高并发是的情况，但与真实访问时候还是有差距的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u76EE_u5F55&quot;&gt;&lt;a href=&quot;#u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;LNMP环境搭建&lt;/li&gt;
&lt;li&gt;打开UCloud防火墙&lt;/li&gt;
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>UCloud上LAMP小型网站搭建与测试</title>
    <link href="http://zone.gaospot.com/2016/03/30/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%95/"/>
    <id>http://zone.gaospot.com/2016/03/30/UCloud上LAMP小型网站搭建与测试/</id>
    <published>2016-03-30T09:57:23.000Z</published>
    <updated>2016-03-31T15:38:37.121Z</updated>
    
    <content type="html">&lt;h3 id=&quot;u76EE_u5F55&quot;&gt;&lt;a href=&quot;#u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;LAMP环境搭建&lt;/li&gt;
&lt;li&gt;打开UCloud防火墙&lt;/li&gt;
&lt;li&gt;WordPress安装&lt;/li&gt;
&lt;li&gt;应用测试&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;u4ECB_u7ECD&quot;&gt;&lt;a href=&quot;#u4ECB_u7ECD&quot; class=&quot;headerlink&quot; title=&quot;介绍&quot;&gt;&lt;/a&gt;介绍&lt;/h3&gt;&lt;p&gt;本篇博客旨在通过介绍搭建一个WordPress博客的过程介绍在UCloud的云主机（UHOST）上搭建单机Web服务的过程。WordPress作为一个著名的CMS系统，有着广泛的应用。其作为博客也是非常常见的用法。所以这里使用WordPress作为示例软件来说明。在UHost上安装LAMP环境和在其他的linux下安装过程类似，但是要&lt;strong&gt;注意UCloud平台提供的防火墙，记得开放相应端口&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&quot;LAMP_u73AF_u5883_u642D_u5EFA&quot;&gt;&lt;a href=&quot;#LAMP_u73AF_u5883_u642D_u5EFA&quot; class=&quot;headerlink&quot; title=&quot;LAMP环境搭建&quot;&gt;&lt;/a&gt;LAMP环境搭建&lt;/h3&gt;&lt;p&gt;在UCloud上安装Linux主机，这里安装的是Centos6.5 x64系统。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;创建主机，根据您需要选择相应的机房，在相应的机房下创建主机。一开始只是测试用的话，可以选择按需付费，在决定使用后在改成月付或者年付，主机和网络的配置选默认配置。如下图所示：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%951.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;是xshell登录管理云主机，xshell是一个ssh远程管理工具，针对个人用户是免费的。ssh工具还有其他的如，putty和secureCRT等，大家可以根据自己的需求和爱好选用。使用xshell的话，首先创建一个会话过程如下所示，在后面进行连接是，会提示保存证书，然后输入linux系统的账号和密码就可以连接到主机，然后通过ssh来管理主机了。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%952.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;ol&gt;
&lt;li&gt;下面介绍安装AMP的过程，安装方法是通过在shell中执行下面的命令实现的。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;安装AMP&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime&amp;#10;# yum install -y nginx mysql-server php php-gd php-xml php-mysql php-bcmath php-mbstring php-mcrypt&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt; 修改PHP的时区&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# sed -i &amp;#39;s#;date.timezone =#date.timezone = Asia/Shanghai#&amp;#39; /etc/php.ini&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;配置Apache&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# rm -rf /etc/httpd/conf.d/README&amp;#10;# rm -rf /etc/httpd/conf.d/welcome.conf&amp;#10;# vim /etc/httpd/conf.d/vhost.conf&amp;#10;&amp;#28155;&amp;#21152;&amp;#22914;&amp;#19979;&amp;#20869;&amp;#23481;&amp;#65306;&amp;#10;&amp;#60;VirtualHost *:80&amp;#62;&amp;#10;ServerName www.domain.com&amp;#10;DocumentRoot /var/www/html/&amp;#10;    ErrorLog /var/log/httpd/error.log&amp;#10;    CustomLog /var/log/httpd/access.log common&amp;#10;&amp;#60;/VirtualHost&amp;#62;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;启动Apache&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# service httpd restart&amp;#10;# chkconfig httpd on&amp;#10;# echo &amp;#8220;&amp;#60;?php phpinfo();&amp;#8221; &amp;#62; /var/www/html/phpinfo.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;打开浏览器，输入下面URL(记得解析DNS，或者修改hosts文件)&lt;br&gt;&lt;a href=&quot;http://www.domain.com/phpinfo.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.domain.com/phpinfo.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;启动MySQL&lt;br&gt;MySQL默认有生成几个配置文件，可以根据自己的硬件情况把文件复制到/etc/my.cnf&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ls /usr/share/mysql/*.cnf&amp;#10;# service mysqld start&amp;#10;# chkconfig mysqld on&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u6253_u5F00UCloud_u9632_u706B_u5899&quot;&gt;&lt;a href=&quot;#u6253_u5F00UCloud_u9632_u706B_u5899&quot; class=&quot;headerlink&quot; title=&quot;打开UCloud防火墙&quot;&gt;&lt;/a&gt;打开UCloud防火墙&lt;/h3&gt;&lt;p&gt;UCloud平台提供了一个防火墙，在控制台打开，初次使用的很容易忽略这个问题，导致业务无法再外网访问。基本的方法是创建一个新的防火墙，然后绑定到主机上。防火墙字网络UNET下，找到外网防火墙。点创建防火墙按钮，创建一个新的防火墙。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%953.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;创建防火墙规则&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%954.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;p&gt;在主机页面将新建的防火墙绑定到主机。&lt;br&gt;&lt;img src=&quot;http://7xr7kh.com1.z0.glb.clouddn.com/UCloud%E4%B8%8ALAMP%E5%B0%8F%E5%9E%8B%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA%E4%B8%8E%E6%B5%8B%E8%AF%955.png&quot; alt=&quot;这里写图片描述&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;WordPress_u5B89_u88C5_uFF08_u53C2_u8003_u81EAWordPress_u5B98_u65B9_u6587_u6863_uFF09&quot;&gt;&lt;a href=&quot;#WordPress_u5B89_u88C5_uFF08_u53C2_u8003_u81EAWordPress_u5B98_u65B9_u6587_u6863_uFF09&quot; class=&quot;headerlink&quot; title=&quot;WordPress安装（参考自WordPress官方文档）&quot;&gt;&lt;/a&gt;WordPress安装（&lt;a href=&quot;https://codex.wordpress.org/zh-cn:%E5%AE%89%E8%A3%85_WordPress&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考自WordPress官方文档&lt;/a&gt;）&lt;/h3&gt;&lt;p&gt;1、下载并解压缩WordPress程序安装包。&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# wget http://wordpress.org/latest.tar.gz&amp;#10;# tar -xzvf latest.tar.gz&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2、在你的网页服务器上为WordPress创建一个数据库, 并且也创建一个MySQL 拥有所有权限可以进入和修改的用户.&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ mysql -u adminusername -p&amp;#10;Enter password:&amp;#10;Welcome to the MySQL monitor.  Commands end with ; or \g.&amp;#10;Your MySQL connection id is 5340 to server version: 3.23.54&amp;#10; &amp;#10;Type &amp;#39;help;&amp;#39; or &amp;#39;\h&amp;#39; for help. Type &amp;#39;\c&amp;#39; to clear the buffer.&amp;#10; &amp;#10;mysql&amp;#62; CREATE DATABASE databasename;&amp;#10;Query OK, 1 row affected (0.00 sec)&amp;#10; &amp;#10;mysql&amp;#62; GRANT ALL PRIVILEGES ON databasename.* TO &amp;#34;wordpressusername&amp;#34;@&amp;#34;hostname&amp;#34;&amp;#10;    -&amp;#62; IDENTIFIED BY &amp;#34;password&amp;#34;;&amp;#10;Query OK, 0 rows affected (0.00 sec)&amp;#10;  &amp;#10;mysql&amp;#62; FLUSH PRIVILEGES;&amp;#10;Query OK, 0 rows affected (0.01 sec)&amp;#10;&amp;#10;mysql&amp;#62; EXIT&amp;#10;Bye&amp;#10;$&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;3、 重命名 wp-config-sample.php 文件为 wp-config.php.用你最喜欢的 文本编辑器 打开 wp-config.php ，填上你的数据库信息。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# mv wp-config-sample.php wp-config.php&amp;#10;# vim wp-config.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;4、 把WordPress文件夹放在你服务器上想要放的地方:如果你想把通过顶级域名来访问你的WordPress博客 (例如 &lt;a href=&quot;http://example.com/),移动或上传所有解压后的WordPress文件夹里面的文件(但不包括WordPress文件夹本身&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.com/),移动或上传所有解压后的WordPress文件夹里面的文件(但不包括WordPress文件夹本身&lt;/a&gt;) 到你服务器的根目录下.&lt;/p&gt;
&lt;p&gt;5、 在你喜欢的浏览器中访问wp-admin/install.php 以便启动安装程序.如果你在根目录下安装WordPress,，你应该访问: &lt;a href=&quot;http://example.com/wp-admin/install.php&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://example.com/wp-admin/install.php&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Web_u6027_u80FD_u6D4B_u8BD5&quot;&gt;&lt;a href=&quot;#Web_u6027_u80FD_u6D4B_u8BD5&quot; class=&quot;headerlink&quot; title=&quot;Web性能测试&quot;&gt;&lt;/a&gt;Web性能测试&lt;/h3&gt;&lt;p&gt;PS：网站性能压力测试是性能调优过程中必不可少的一环。只有让服务器处在高压情况下才能真正体现出各种设置所暴露的问题。Apache中有个自带的，名为ab的程序，可以对Apache或其它类型的服务器进行网站访问压力测试。&lt;/p&gt;
&lt;p&gt;ApacheBench命令原理：&lt;/p&gt;
&lt;p&gt;ab命令会创建很多的并发访问线程，模拟多个访问者同时对某一URL地址进行访问。它的测试目标是基于URL的，因此，既可以用来测试Apache的负载压力，也可以测试nginx、lighthttp、tomcat、IIS等其它Web服务器的压力。&lt;/p&gt;
&lt;p&gt;ab命令对发出负载的计算机要求很低，既不会占用很高CPU，也不会占用很多内存，但却会给目标服务器造成巨大的负载，其原理类似CC攻击。自己测试使用也须注意，否则一次上太多的负载，可能造成目标服务器因资源耗完，严重时甚至导致死机。&lt;/p&gt;
&lt;p&gt;ApacheBench用法详解：&lt;/p&gt;
&lt;p&gt;在Linux系统，一般安装好Apache后可以直接执行；&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# ab -n 4000 -c 1000 http://www.ha97.com/&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果是Win系统下，打开cmd命令行窗口，cd到apache安装目录的bin目录下；&lt;/p&gt;
&lt;p&gt;-n后面的4000代表总共发出4000个请求；-c后面的1000表示采用1000个并发（模拟1000个人同时访问），后面的网址表示测试的目标URL。&lt;/p&gt;
&lt;p&gt;参考：&lt;a href=&quot;http://www.ha97.com/4617.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Web性能压力测试工具之ApacheBench（ab）详解&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;u76EE_u5F55&quot;&gt;&lt;a href=&quot;#u76EE_u5F55&quot; class=&quot;headerlink&quot; title=&quot;目录&quot;&gt;&lt;/a&gt;目录&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;介绍&lt;/li&gt;
&lt;li&gt;LAMP环境搭建&lt;/li&gt;
&lt;li&gt;打开UCloud防火墙&lt;/li&gt;
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Redmine介绍</title>
    <link href="http://zone.gaospot.com/2016/02/17/Redmine%E4%BB%8B%E7%BB%8D/"/>
    <id>http://zone.gaospot.com/2016/02/17/Redmine介绍/</id>
    <published>2016-02-17T12:01:53.000Z</published>
    <updated>2016-03-31T15:38:21.930Z</updated>
    
    <content type="html">&lt;p&gt;每天记Redmine是我现在的工作内容之一，之前一直没有深入的了解Redmine究竟是用来干嘛的的，直到最近看到有人分享了一篇&lt;a href=&quot;http://www.jianshu.com/p/cd7a12fa09bb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;《最佳工程实践－基于Redmine的项目管理平台》&lt;/a&gt;的文章，于是对Redmine这个东西又起了一些兴趣。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Redmine是一个基于web免费且开源的项目管理和问题追踪工具。它一些用户管理多个项目已经和他相关的子项目。它的特点包括每一个项目的wikis和论坛，时间追踪，和灵活的基于角色的访问控制。它包括日历和甘特图去对项目和他们的期限提供可视化视角。Redmine正好了多种版本控制系统并且包括了一个库浏览工具和diff查看器。——引用自Wikipedia&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;通过《最佳工程实践－基于Redmine的项目管理平台》这篇文章，认识了一个叫做&lt;a href=&quot;https://bitnami.com/stack/redmine&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;bitnami&lt;/a&gt; 的。这上面提供了一个安装Redmine的集成环境，并且还提供了已经安装好Redmine的VMware镜像。不知道什么时候会不会提供docker镜像：）。&lt;/p&gt;
&lt;p&gt;bitnami上提供了Redmine试用，bitnami会自动在aws上安装好Redmine，然后会提供给你一个连接，直接使用就可以了。如果想自己安装Redmine可以安装bitnami官方提供的教程。&lt;/p&gt;
&lt;h2 id=&quot;u5B89_u88C5_u8FC7_u7A0B&quot;&gt;&lt;a href=&quot;#u5B89_u88C5_u8FC7_u7A0B&quot; class=&quot;headerlink&quot; title=&quot;安装过程&quot;&gt;&lt;/a&gt;安装过程&lt;/h2&gt;&lt;p&gt;下载Redmine安装包&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;wget https://downloads.bitnami.com/files/stacks/redmine/&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;/bitnami-redmine-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;-linux-x64-installer.run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;chmod u+x bitnami-redmine-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;-linux-x64-installer.run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./bitnami-redmine-&lt;span class=&quot;number&quot;&gt;3.2&lt;/span&gt;.&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;-&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;-linux-x64-installer.run&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;依照上面的步骤一步一步下来就可以安装Redmine了。安装完之后可以安装插件，更新数据。也可以直接访问。&lt;/p&gt;
&lt;h2 id=&quot;u8BBF_u95EE&quot;&gt;&lt;a href=&quot;#u8BBF_u95EE&quot; class=&quot;headerlink&quot; title=&quot;访问&quot;&gt;&lt;/a&gt;访问&lt;/h2&gt;&lt;p&gt;在服务器本地可以在&lt;a href=&quot;http://127.0.0.1:80访问，如果是在公网环境下可以通过服务器的公网ip访问。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://127.0.0.1:80访问，如果是在公网环境下可以通过服务器的公网ip访问。&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;每天记Redmine是我现在的工作内容之一，之前一直没有深入的了解Redmine究竟是用来干嘛的的，直到最近看到有人分享了一篇&lt;a href=&quot;http://www.jianshu.com/p/cd7a12fa09bb&quot; target=&quot;_blank&quot; rel=&quot;exter
    
    </summary>
    
    
      <category term="系统运维" scheme="http://zone.gaospot.com/tags/%E7%B3%BB%E7%BB%9F%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>Hello Hexo —— 我的个人博客搭建记录</title>
    <link href="http://zone.gaospot.com/2016/01/15/Hello%20Hexo%20%E2%80%94%E2%80%94%20%E6%88%91%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%AE%B0%E5%BD%95/"/>
    <id>http://zone.gaospot.com/2016/01/15/Hello Hexo —— 我的个人博客搭建记录/</id>
    <published>2016-01-15T09:49:42.000Z</published>
    <updated>2016-03-31T15:41:41.573Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;是一个Node编写的，可以根据Markdown语法生成静态文件的博客系统，这篇博客是根据网上教程，使用Hexo + Github搭建个人博客过程的记录。Hexo搭建过程非常简单，官方文档写的非常清楚。这篇 博客的写作原因仅仅在于记录自己的安装过程。作为一个记录。&lt;/p&gt;
&lt;h3 id=&quot;u524D_u63D0_u6761_u4EF6&quot;&gt;&lt;a href=&quot;#u524D_u63D0_u6761_u4EF6&quot; class=&quot;headerlink&quot; title=&quot;前提条件&quot;&gt;&lt;/a&gt;前提条件&lt;/h3&gt;&lt;p&gt;Hexo的安装过程依赖Node.js和Git，所以安装Hexo前需要先安装着两个软件。他们的下载地址可以参考下面的链接。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://nodejs.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Node.js&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;/git-scm.com&quot;&gt;Git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;安装过程非常简单，也就是下载两个软件包安装就可以了。其中node.js的安装，可以先安装nvm，通过nvm来安装node.js。&lt;/p&gt;
&lt;h3 id=&quot;Hexo_u7684_u5B89_u88C5&quot;&gt;&lt;a href=&quot;#Hexo_u7684_u5B89_u88C5&quot; class=&quot;headerlink&quot; title=&quot;Hexo的安装&quot;&gt;&lt;/a&gt;Hexo的安装&lt;/h3&gt;&lt;p&gt;hexo安装可以在命令行下完成。通过借助使用git bash来执行下列命令，git bash的启动在任意一个目录中右键，找到git bash点击就可运行。这个方法在使用github管理代码的时候，生成本地证书的时候还会用到。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm install -g hexo-cli&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u4F7F_u7528Hexo_u5EFA_u7AD9&quot;&gt;&lt;a href=&quot;#u4F7F_u7528Hexo_u5EFA_u7AD9&quot; class=&quot;headerlink&quot; title=&quot;使用Hexo建站&quot;&gt;&lt;/a&gt;使用Hexo建站&lt;/h3&gt;&lt;p&gt;首先创建好需要存放站点的目录，在这里是&lt;folder&gt;。通过下面命令可以在&lt;folder&gt;目录下生成建站所需的文件&lt;/folder&gt;&lt;/folder&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo init &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; &amp;lt;folder&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u4F7F_u7528git_u7BA1_u7406_u4EE3_u7801&quot;&gt;&lt;a href=&quot;#u4F7F_u7528git_u7BA1_u7406_u4EE3_u7801&quot; class=&quot;headerlink&quot; title=&quot;使用git管理代码&quot;&gt;&lt;/a&gt;使用git管理代码&lt;/h3&gt;&lt;p&gt;修改&lt;folder&gt;目录下的_config.yml文件，添加下面行，表示使用git来管理代码，并把代码托管在github上。当然首先需要您在github上创建yourname.github.io项目。这里的托管方式借鉴网上一些方法，使用master分支来管理静态网站。code分支来管理生成静态文件的代码。&lt;/folder&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&amp;#10;  type: git&amp;#10;  repo: git@github.com:yourname/yourname.github.io.git&amp;#10;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u628A_u4EE3_u7801_u90E8_u7F72_u5230github&quot;&gt;&lt;a href=&quot;#u628A_u4EE3_u7801_u90E8_u7F72_u5230github&quot; class=&quot;headerlink&quot; title=&quot;把代码部署到github&quot;&gt;&lt;/a&gt;把代码部署到github&lt;/h3&gt;&lt;p&gt;运行下面命令就可以将代码部署到github了。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;u8BBF_u95EEyourname-github-io_u89C2_u5BDF_u6548_u679C&quot;&gt;&lt;a href=&quot;#u8BBF_u95EEyourname-github-io_u89C2_u5BDF_u6548_u679C&quot; class=&quot;headerlink&quot; title=&quot;访问yourname.github.io观察效果&quot;&gt;&lt;/a&gt;访问yourname.github.io观察效果&lt;/h3&gt;&lt;p&gt;参考：&lt;a href=&quot;http://ibruce.info/2013/11/22/hexo-your-blog/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;hexo你的博客&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;是一个Node编写的，可以根据Markdown语法生成静态文件的博客系统，这篇博客是根据网上教程，使用Hexo + Github搭建个人博客过程
    
    </summary>
    
    
      <category term="个人笔记" scheme="http://zone.gaospot.com/tags/%E4%B8%AA%E4%BA%BA%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>gcc编译C程序的过程</title>
    <link href="http://zone.gaospot.com/2014/01/21/gcc%E7%BC%96%E8%AF%91C%E7%A8%8B%E5%BA%8F%E7%9A%84%E8%BF%87%E7%A8%8B/"/>
    <id>http://zone.gaospot.com/2014/01/21/gcc编译C程序的过程/</id>
    <published>2014-01-21T15:50:00.000Z</published>
    <updated>2016-04-29T06:27:33.426Z</updated>
    
    <content type="html">&lt;p&gt;我们在编译c程序的时候其过程一般点击一个图标，或者执行一个命令就完成了。但实际的过程可不是这么简单的。在使用gcc编译程序时，它就把这个过程分成了四布来完成。实际上gcc是一个编译环境包含这四步的工具，这四步分别是：&lt;br&gt;(1)预处理：（Pre-Processing）&lt;br&gt;(2)编译：（Compiling）&lt;br&gt;(3)汇编：（Assembling）&lt;br&gt;(4)链接：（Linking)&lt;br&gt;       使用gcc，我们可以根据需要让程序的编译停在任何的阶段。以便检查或使用编译器在该阶段输出的信息，或者对最后生成的文件进行控制，以便通过加入不同数量或种类的调试代码为今后的调试做准备。&lt;/p&gt;
&lt;p&gt;用一个最简单的程序编译程来观察编译器工作。下面是实验的源程序hello.c。&lt;br&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;preprocessor&quot;&gt;#&lt;span class=&quot;keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;  &lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello,world!&quot;&lt;/span&gt;);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;（1)在预处理阶段，预处理器（cpp）处理。输入的是C语言的源文件。这个阶段主要处理文件中的预处理语句，也就是通常由#开头的语句，如#include，#define，#ifdef等。这个过程会生成一个中间文件，但一般不会专门生成这种文件，所以在我们编译程序的时候不会看到类似的文件。如果必须要生成这样的文件，可以使用下面的Shell命令。
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gcc -E hello.c -o hello.i&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;pre&gt;&lt;code&gt; 使用这个命令生成的是一个仍然可以用vim察看的文件，只不过由一个只有7行代码的程序变成了一个有800多行代码的程序，原因是应为在生成的hello.i文件中把include进的库的相关代码导入了。

（2)在编译阶段，编译器（ccl）处理。编译器将中间文件hello.i，编译后生成汇编语言文件*.s，使用的Shell命令是。
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gcc -S hello.i -o hello.s&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这个过程生成的hello.s文件依然可以用vim或其他任何的文本编辑器打开。hello.s的内容如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    .file   &amp;#34;hello.c&amp;#34;  &amp;#10;    .section    .rodata  &amp;#10;.LC0:  &amp;#10;    .string &amp;#34;Hello,world!&amp;#34;  &amp;#10;    .text  &amp;#10;    .globl  main  &amp;#10;    .type   main, @function  &amp;#10;main:  &amp;#10;.LFB0:  &amp;#10;    .cfi_startproc  &amp;#10;    pushl   %ebp  &amp;#10;    .cfi_def_cfa_offset 8  &amp;#10;    .cfi_offset 5, -8  &amp;#10;    movl    %esp, %ebp  &amp;#10;    .cfi_def_cfa_register 5  &amp;#10;    andl    $-16, %esp  &amp;#10;    subl    $16, %esp  &amp;#10;    movl    $.LC0, (%esp)  &amp;#10;    call    printf  &amp;#10;    movl    $0, %eax  &amp;#10;    leave  &amp;#10;    .cfi_restore 5  &amp;#10;    .cfi_def_cfa 4, 4  &amp;#10;    ret  &amp;#10;    .cfi_endproc  &amp;#10;.LFE0:  &amp;#10;    .size   main, .-main  &amp;#10;    .ident  &amp;#34;GCC: (Debian 4.7.2-5) 4.7.2&amp;#34;  &amp;#10;    .section    .note.GNU-stack,&amp;#34;&amp;#34;,@progbits &amp;#10;&amp;#10;``` &amp;#10;       &amp;#65288;3)&amp;#22312;&amp;#27719;&amp;#32534;&amp;#38454;&amp;#27573;&amp;#65292;&amp;#27719;&amp;#32534;&amp;#22120;&amp;#65288;as&amp;#65289;&amp;#23558;&amp;#36755;&amp;#20837;&amp;#30340;hello.s&amp;#36716;&amp;#25442;&amp;#25104;&amp;#20108;&amp;#36827;&amp;#21046;&amp;#26426;&amp;#22120;&amp;#20195;&amp;#30721;&amp;#25991;&amp;#20214;*.o&amp;#12290;&amp;#36825;&amp;#20010;&amp;#38454;&amp;#27573;&amp;#25152;&amp;#20351;&amp;#29992;&amp;#30340;&amp;#21629;&amp;#20196;&amp;#26159;&amp;#12290;&amp;#10;```shell&amp;#10;gcc -c hello.s -o hello.o&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这个阶段会生成一个二进制的文件hello.o，现在已经不可以使用vim察看了，但是还可以使用od来察看，可以看到文件内容是如下一些的数字。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0000000 042577 043114 000401 000001 000000 000000 000000 000000  &amp;#10;0000020 000001 000003 000001 000000 000000 000000 000000 000000  &amp;#10;0000040 000424 000000 000000 000000 000064 000000 000000 000050  &amp;#10;0000060 000015 000012 104525 101745 170344 166203 143420 022004  &amp;#10;0000100 000000 000000 176350 177777 134377 000000 000000 141711  &amp;#10;0000120 062510 066154 026157 067567 066162 020544 000000 041507  &amp;#10;0000140 035103 024040 062504 064542 067141 032040 033456 031056  &amp;#10;0000160 032455 020051 027064 027067 000062 000000 000024 000000  &amp;#10;0000200 000000 000000 075001 000122 076001 000410 006033 002004  &amp;#10;0000220 000610 000000 000034 000000 000034 000000 000000 000000  &amp;#10;0000240 000034 000000 040400 004016 001205 006502 054005 006305  &amp;#10;0000260 002004 000000 027000 074563 072155 061141 027000 072163  &amp;#10;0000300 072162 061141 027000 064163 072163 072162 061141 027000  &amp;#10;0000320 062562 027154 062564 072170 027000 060544 060564 027000  &amp;#10;0000340 071542 000163 071056 062157 072141 000141 061456 066557  &amp;#10;0000360 062555 072156 027000 067556 062564 043456 052516 071455  &amp;#10;0000400 060564 065543 027000 062562 027154 064145 063137 060562  &amp;#10;0000420 062555 000000 000000 000000 000000 000000 000000 000000  &amp;#10;0000440 000000 000000 000000 000000 000000 000000 000000 000000  &amp;#10;0000460 000000 000000 000000 000000 000000 000000 000037 000000  &amp;#10;0000500 000001 000000 000006 000000 000000 000000 000064 000000  &amp;#10;0000520 000034 000000 000000 000000 000000 000000 000004 000000  &amp;#10;0000540 000000 000000 000033 000000 000011 000000 000000 000000  &amp;#10;0000560 000000 000000 001744 000000 000020 000000 000013 000000  &amp;#10;0000600 000001 000000 000004 000000 000010 000000 000045 000000  &amp;#10;0000620 000001 000000 000003 000000 000000 000000 000120 000000  &amp;#10;0000640 000000 000000 000000 000000 000000 000000 000004 000000  &amp;#10;0000660 000000 000000 000053 000000 000010 000000 000003 000000  &amp;#10;0000700 000000 000000 000120 000000 000000 000000 000000 000000  &amp;#10;0000720 000000 000000 000004 000000 000000 000000 000060 000000  &amp;#10;0000740 000001 000000 000002 000000 000000 000000 000120 000000  &amp;#10;0000760 000015 000000 000000 000000 000000 000000 000001 000000  &amp;#10;0001000 000000 000000 000070 000000 000001 000000 000060 000000  &amp;#10;0001020 000000 000000 000135 000000 000035 000000 000000 000000  &amp;#10;0001040 000000 000000 000001 000000 000001 000000 000101 000000  &amp;#10;0001060 000001 000000 000000 000000 000000 000000 000172 000000  &amp;#10;0001100 000000 000000 000000 000000 000000 000000 000001 000000  &amp;#10;0001120 000000 000000 000125 000000 000001 000000 000002 000000  &amp;#10;0001140 000000 000000 000174 000000 000070 000000 000000 000000  &amp;#10;0001160 000000 000000 000004 000000 000000 000000 000121 000000  &amp;#10;0001200 000011 000000 000000 000000 000000 000000 001764 000000  &amp;#10;0001220 000010 000000 000013 000000 000010 000000 000004 000000  &amp;#10;0001240 000010 000000 000021 000000 000003 000000 000000 000000  &amp;#10;0001260 000000 000000 000264 000000 000137 000000 000000 000000  &amp;#10;0001300 000000 000000 000001 000000 000000 000000 000001 000000  &amp;#10;0001320 000002 000000 000000 000000 000000 000000 001434 000000  &amp;#10;0001340 000260 000000 000014 000000 000011 000000 000004 000000  &amp;#10;0001360 000020 000000 000011 000000 000003 000000 000000 000000  &amp;#10;0001400 000000 000000 001714 000000 000025 000000 000000 000000  &amp;#10;0001420 000000 000000 000001 000000 000000 000000 000000 000000  &amp;#10;0001440 000000 000000 000000 000000 000000 000000 000001 000000  &amp;#10;0001460 000000 000000 000000 000000 000004 177761 000000 000000  &amp;#10;0001500 000000 000000 000000 000000 000003 000001 000000 000000  &amp;#10;0001520 000000 000000 000000 000000 000003 000003 000000 000000  &amp;#10;0001540 000000 000000 000000 000000 000003 000004 000000 000000  &amp;#10;0001560 000000 000000 000000 000000 000003 000005 000000 000000  &amp;#10;0001600 000000 000000 000000 000000 000003 000007 000000 000000  &amp;#10;0001620 000000 000000 000000 000000 000003 000010 000000 000000  &amp;#10;0001640 000000 000000 000000 000000 000003 000006 000011 000000  &amp;#10;0001660 000000 000000 000034 000000 000022 000001 000016 000000  &amp;#10;0001700 000000 000000 000000 000000 000020 000000 064000 066145  &amp;#10;0001720 067554 061456 066400 064541 000156 071160 067151 063164  &amp;#10;0001740 000000 000000 000014 000000 002401 000000 000021 000000  &amp;#10;0001760 005002 000000 000040 000000 001002 000000  &amp;#10;0001774&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;（4)最后，连接器（ld）在链接阶段将输入的二进制机器代码文件*.o汇集成一个可执行的二进制代码文件。使用如下的代码。
&lt;/code&gt;&lt;/pre&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gcc hello.o -o hello&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;最后在来使用od命令察看最后生成的hello文件，会发现它要比hello.o文件更大一些，原因在与，在最后一步的时候，把其他的二进制代码也链接进来了，如库文件等。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;我们在编译c程序的时候其过程一般点击一个图标，或者执行一个命令就完成了。但实际的过程可不是这么简单的。在使用gcc编译程序时，它就把这个过程分成了四布来完成。实际上gcc是一个编译环境包含这四步的工具，这四步分别是：&lt;br&gt;(1)预处理：（Pre-Processing）&lt;b
    
    </summary>
    
    
      <category term="C语言学习" scheme="http://zone.gaospot.com/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>C语言可变参数函数</title>
    <link href="http://zone.gaospot.com/2014/01/11/C%E8%AF%AD%E8%A8%80%E5%8F%AF%E5%8F%98%E5%8F%82%E6%95%B0%E5%87%BD%E6%95%B0/"/>
    <id>http://zone.gaospot.com/2014/01/11/C语言可变参数函数/</id>
    <published>2014-01-11T15:43:00.000Z</published>
    <updated>2016-04-29T06:17:21.504Z</updated>
    
    <content type="html">&lt;p&gt;C语言有一种实现可变参数的函数的方法就是使用占位符,使用的方法就是采用如下的方式定义函数void frees(int size, …)。其余的地方和一般的函数定义是一样的只是第二个参数上使用了三个点，而没用采用一般的变量类型变量名的方式。只要采用这样的定义方式，便可以使用这个函数来处理可变变量。但是光有这个定义还是不够的，还需要借助如下俩个函数一个类型定义，实际上这些函数是通过宏来实现的。&lt;/p&gt;
&lt;p&gt;va_list&lt;br&gt;va_start();&lt;br&gt;va_arg();&lt;/p&gt;
&lt;p&gt;va_list，这是个类型定义，我们可以把它理解成一个指针，它指向第一个参数的地址。如果，我们这样定义： va_list ap;则ap就是这样一种变量，它是指向所有参数中的第一个参数的。它不同于一般的指针变量，它是个复合变量。就是说可以通过这个变量找到，在调用这个函数是传入的其他变量。但是我们不可以直接通过移动这个指针来指向下一个变量。剩下的工作就要通过下面的两个方法了。&lt;/p&gt;
&lt;p&gt;va_start(ap,size)，那么ap就指向第一个参数size了，并且可得到size的类型int。这时候如果有下一个参数，就需要使ap指向下一个参数，并且得到它的类型。&lt;/p&gt;
&lt;p&gt;va_arg(ap,类型)，这样ap就指向一个参数，并且可以得到那个参数的类型了。注意！类型非常重要，学过指针的都应该清楚，指针的类型如果弄错的话，位置正确，取出来的数可能也是乱七八糟的。&lt;/p&gt;
&lt;p&gt;下面是使用C语言的这个特征来编写的一个可以释放一系列内存空间的函数：&lt;/p&gt;
&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;frees&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; size, ...)&lt;/span&gt;&lt;/span&gt;&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    va_list ap;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    va_start(ap, size);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i&amp;lt;size; i++)&amp;#123;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;* ptr = va_arg(ap, &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt;*);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        free2(ptr);  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在使用的时候只需指明需要释放的空间的指针的个数，以及他们的值，就可以了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;C语言有一种实现可变参数的函数的方法就是使用占位符,使用的方法就是采用如下的方式定义函数void frees(int size, …)。其余的地方和一般的函数定义是一样的只是第二个参数上使用了三个点，而没用采用一般的变量类型变量名的方式。只要采用这样的定义方式，便可以使用这
    
    </summary>
    
    
      <category term="C语言学习" scheme="http://zone.gaospot.com/tags/C%E8%AF%AD%E8%A8%80%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>Linux学习过程中的问题</title>
    <link href="http://zone.gaospot.com/2014/01/08/Linux%E5%AD%A6%E4%B9%A0%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E9%97%AE%E9%A2%98/"/>
    <id>http://zone.gaospot.com/2014/01/08/Linux学习过程中的问题/</id>
    <published>2014-01-08T09:46:00.000Z</published>
    <updated>2016-04-29T06:23:24.109Z</updated>
    
    <content type="html">&lt;p&gt;自己学Linux也有一些时间了，因为自己学Linux完全是出于自己的爱好，没有评价的方法，学的怎样只能靠自己的感觉。学习的过程也完全是随自己的想法，正是因为如此，所以造成自己学习的过程中在方法方面的一些问题，也只能凭感觉。所以把他们总结出来，以警示自己，希望可以加以改正，以后不要再犯。&lt;/p&gt;
&lt;p&gt;1、太过盲目，没有目的，在一开始的时候只是随便的学习一些东西，看到网上有帖子说什么，觉得好玩，自己就跟着做着玩，正是在这玩的过程中，浪费了很多时间，但是学到的东西却十分的有限。虽然说这样也扩展了自己在各个方面的视野，增加了对Linux的兴趣，对于处于入门阶段不知用Linux来做什么，而茫然无措的自己来说是有一定帮助的，但这个过程极易造成追本逐末的后果。慢慢的对Linux有了一些初步的认识以后就可以彻底抛弃这个了，比如说如果自己对Linux作服务器感兴趣，就重点学习Linux系统管理方面的知识，如果对它的内核感兴趣，那就深入的学习他的内核机制，这样有了明确的目标，学起来一定会高效一些。&lt;/p&gt;
&lt;p&gt;2、只是简单的模仿，思考的太少。一开始只是因为不知从何下手而随便找一些帖子来看。后来遇到问题总是要从网上找的，但是网上的方法又不一定是有效的。所以大多数时候只是抱着试一试的心态，又是照着帖子做，而不去想太多，最后问题能解决，那只是运气，问题解决了自己并不明白这是为什么，下一次再遇到还是一样需要到网上找。在这方面，一开始我觉得是因为能力有限造成的，不理解，导致记不住。可是慢慢的当自己知道的东西多了一点以后，还是出现这样的情况就完全是因为自己的懒惰了，不愿去想，也不愿去记。&lt;/p&gt;
&lt;p&gt;3、在看书学习的时候，太过走马观花了，很多的时候只是追求速度。且忘了应有的理解，最后看完一无所得的时候也有，还有就是有时候看懂了却懒于实践，最终也不知道自己所理解的正确与否。&lt;/p&gt;
&lt;p&gt;4、最后最严重的一个问题是，过多的追求一些华而不实的东西，比如说设置一些3D桌面，修改开机启动时候的主题了等等。这些东西知道就可以了，不必太过醉心于此，不懂其原理，随便搞上一套也没有太多的用处。还容易给系统带来这样那样的问题。比如，有一次装3D桌面的时候，莫名其妙的就没有了图标，系统也因此无法使用，因为不知道怎么解决，就只能重装系统了。还有一次编译内核之后无法启动，本来自己编译的内核有点问题是很正常的，但是那一次。在安装完自己编译的内核之后不光自己编译的内核有问题，而且以前的内核也有问题。又不知如何解决，就只能重装了。虽然原因不知道，但我觉得大概和之前安装的grub的主题有关。&lt;/p&gt;
&lt;p&gt;记录下自己的反思，作为激励。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;自己学Linux也有一些时间了，因为自己学Linux完全是出于自己的爱好，没有评价的方法，学的怎样只能靠自己的感觉。学习的过程也完全是随自己的想法，正是因为如此，所以造成自己学习的过程中在方法方面的一些问题，也只能凭感觉。所以把他们总结出来，以警示自己，希望可以加以改正，以
    
    </summary>
    
    
      <category term="个人总结" scheme="http://zone.gaospot.com/tags/%E4%B8%AA%E4%BA%BA%E6%80%BB%E7%BB%93/"/>
    
  </entry>
  
</feed>
